{
  "id":           "http://schemas.taskcluster.net/queue/v1/task.json#",
  "$schema":      "http://json-schema.org/draft-04/schema#",
  "title":        "Task Definition",
  "description":  "Definition of a task that can be scheduled",
  "type":               "object",
  "properties": {
    "provisionerId": {
      "title":          "Provisioner Id",
      "description":    "Unique identifier for a provisioner, that can supply specified workerType",
      "type":           "string",
      "minLength":      {"$const": "identifier-min-length"},
      "maxLength":      {"$const": "identifier-max-length"},
      "pattern":        {"$const": "identifier-pattern"}
    },
    "workerType": {
      "title":          "Worker Type",
      "description":    "Unique identifier for a worker-type within a specific provisioner",
      "type":           "string",
      "minLength":      {"$const": "identifier-min-length"},
      "maxLength":      {"$const": "identifier-max-length"},
      "pattern":        {"$const": "identifier-pattern"}
    },
    "routing":          {"$const": "routing"},
    "retries": {
      "title":          "Retries",
      "description":    "Number of times to retry the task in case of infrastructure issues",
      "type":           "integer",
      "minimum":        0,
      "maximum":        999
    },
    "priority":         {"$const": "priority"},
    "created":          {"$const": "created"},
    "deadline":         {"$const": "deadline"},
    "scopes":           {"$const": "scopes"},
    "payload": {
      "title":          "Task Payload",
      "description":    "Task-specific payload following worker-specific format. For example the `docker-worker` requires the following keys: `image`, `commands` and `features`.",
      "type":           "object"
    },
    "metadata": {
      "title":                  "Meta-data",
      "description":            "Required task metadata",
      "type":                   "object",
      "properties": {
        "name": {
          "title":              "Name",
          "description":        "Human readable name of task",
          "type":               "string",
          "maxLength":          255
        },
        "description": {
          "title":              "Description",
          "description":        "Human readable description of task, **explain** what it does!",
          "type":               "string",
          "maxLength":          32768
        },
        "owner": {
          "title":              "Owner",
          "description":        "E-mail of person who caused this task, e.g. the person who did `hg push`",
          "type":               "string",
          "format":             "email",
          "maxLength":          255
        },
        "source": {
          "title":              "Source",
          "description":        "Link to source of this task, should specify file, revision and repository",
          "type":               "string",
          "format":             "uri",
          "maxLength":          4096
        },
        "taskGraphId": {
          "title":              "Task-Graph Identifier",
          "description":        "**Optional**, identifier for a task-graph to which this task belongs. If this key is present it must be valid `taskGraphId` to which this task belongs.",
          "type":               "string",
          "pattern":            {"$const": "slugid-pattern"}
        }
      },
      "additionalProperties":   false,
      "required": [
        "name",
        "owner",
        "source"
      ]
    },
    "tags": {
      "title":                  "Tags",
      "description":            "Arbitrary key-value tags (only strings limited to 4k)",
      "type":                   "object",
      "additionalProperties":   {"type": "string", "maxLength": 4096}
    }
  },
  "additionalProperties":   false,
  "required": [
    "provisionerId",
    "workerType",
    "routing",
    "retries",
    "priority",
    "created",
    "deadline",
    "scopes",
    "payload",
    "metadata",
    "tags"
  ]
}
