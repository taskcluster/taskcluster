$schema:            http://json-schema.org/draft-06/schema#
title:              "Post Artifact Request"
description: "Request a authorization to put and artifact or posting of a URL as an artifact. Note that the `storageType` property is referenced in the response as well."
oneOf:
  - title: "Blob Artifact Request"
    description: |
      Request a list of requests in a generalized format which can be run to
      upload an artifact to storage managed by the queue.
    type: object
    properties:
      storageType:
        description: Artifact storage type, in this case `'blob'`
        type: string
        enum:
          - blob
      expires:
        description: |
          Date-time after which the artifact should be deleted. Note, that
          these will be collected over time, and artifacts may remain
          available after expiration. S3 based artifacts are identified in
          azure table storage and explicitly deleted on S3 after expiration.
        type: string
        format: date-time
      contentType:
        description: |
          Artifact mime-type, when uploading artifact to the signed
          `PUT` URL returned from this request this must given with the
           `ContentType` header. Please, provide correct mime-type,
           this make tooling a lot easier, specifically,
           always using `application/json` for JSON artifacts.
        type: string
        maxLength: 255
      contentEncoding:
        description: |
          Optionally provide an encoding type which should be set as the HTTP
          Content-Encoding header for this artifact.
        type: string
        maxLength: 255
      contentSha256:
        description: |
          The complete SHA256 value of the entire artifact.  This must be the
          SHA256 of the file which is to be uploaded.  For single part uploads,
          the upload will fail if the SHA256 value of what is uploaded does not
          match this value
        type: string
        pattern: "^[a-fA-F0-9]{64}$"
      contentLength:
        description: |
          The number of bytes of the entire artifact.  This must be the number
          of bytes in the file to be uploaded.  For single part uploads, the
          upload will fail if the number of bytes uploaded does not match this
          value.  A single part upload (e.g. no parts list) may be at most 5GB.
          This limit is enforced in the code because it is not possible to
          represent all of the restrictions in a json-schema.  A multipart
          upload may be at most 5TB, with each part other than the last being
          between 5MB and 5GB in size.
        type: integer
        minimum: 0
      transferSha256:
        description: |
          This is the sha256 of the bytes transfered across the wire to the
          backing datastore.  If specified, it represents the
          post-content-encoding sha256 value
        type: string
        pattern: "^[a-fA-F0-9]{64}$"
      transferLength:
        description: |
          The number of bytes transfered across the wire to the backing
          datastore.  If specified, it represents the post-content-encoding
          byte count
        type: integer
        minimum: 0
      parts:
        description: |
          A list of parts for a multipart upload.  The presence of this list is
          how a multipart upload is differentiated from a single part upload.
          The items in this list represent individual parts for upload.  For a
          multipart upload, the sha256 values provided here must match the
          sha256 value that S3 internally computes for the upload to be
          considered a success.  The overall sha256 value is not checked
          explicitly because the S3 API does not allow for that, but the same
          code that is responsible for generating the parts hashes would also
          be generating the overall hash, which makes this less of a concern.
          The worst case is that we have artifacts which incorrectly do not
          validate, which is not as big of a security concern.
        type: array
        minLength: 1
        items:
          title: "Multipart Part"
          type: object
          additionalProperties: false
          properties:
            sha256:
              description: |
                The sha256 hash of the part.
              type: string
              pattern: "^[a-fA-F0-9]{64}$"
              minLength: 64
              maxLength: 64
            size:
              description: |
                The number of bytes in this part.  Keep in mind for S3 that
                all but the last part must be minimum 5MB and the maximum for
                a single part is 5GB.  The overall size may not exceed 5TB
              type: integer
              minimum: 0
    additionalProperties: false
    required:
      - storageType
      - expires
      - contentType
      - contentSha256
      - contentLength
  - title:          "S3 Artifact Request"
    description: |
      Request for a signed PUT URL that will allow you to upload an artifact
      to an S3 bucket managed by the queue.
    type:           object
    properties:
      storageType:
        description: |
          Artifact storage type, in this case `'s3'`
        type:       string
        enum:
          - s3
      expires:
        description: |
          Date-time after which the artifact should be deleted. Note, that
          these will be collected over time, and artifacts may remain
          available after expiration. S3 based artifacts are identified in
          azure table storage and explicitly deleted on S3 after expiration.
        type:       string
        format:     date-time
      contentType:
        description: |
          Artifact mime-type, when uploading artifact to the signed
          `PUT` URL returned from this request this must given with the
           `ContentType` header. Please, provide correct mime-type,
           this make tooling a lot easier, specifically,
           always using `application/json` for JSON artifacts.
        type:       string
        maxLength:  255
    additionalProperties: false
    required:
      - storageType
      - expires
      - contentType
  - title:          "Azure Artifact Request"
    description: |
      Request for an Azure Shared Access Signature (SAS) that will allow
      you to upload an artifact to an Azure blob storage container managed
      by the queue.
    type:           object
    properties:
      storageType:
        description: |
          Artifact storage type, in this case `azure`
        type:       string
        enum:
          - azure
      expires:
        description: |
          Date-time after which the artifact should be deleted.
          Note, that these will be collected over time, and artifacts may
          remain available after expiration. Azure based artifacts are
          identified in azure table storage and explicitly deleted in the
          azure storage container after expiration.
        type:       string
        format:     date-time
      contentType:
        description: |
          Artifact mime-type, when uploading artifact please use the same
          `Content-Type`, consistently using the correct mime-type make
          tooling a lot easier, specifically, always using `application/json`
          for JSON artifacts.
        type:       string
        maxLength:  255
    additionalProperties: false
    required:
      - storageType
      - expires
      - contentType
  - title:          "Redirect Artifact Request"
    description: |
      Request the queue to redirect to a URL for a given artifact.
      This allows you to reference artifacts that aren't managed by the queue.
      The queue will still authenticate the request, so depending on the level
      of secrecy required, secret URLs **might** work. Note, this is mainly
      useful for public artifacts, for example temporary files directly
      stored on the worker host and only available there for a specific
      amount of time.
    type:           object
    properties:
      storageType:
        description: |
          Artifact storage type, in this case `reference`
        type:       string
        enum:
          - reference
      expires:
        description: |
          Date-time after which the queue should no longer redirect to this URL.
          Note, that the queue will and cannot delete the resource your URL
          references, you are responsible for doing that yourself.
        type:       string
        format:     date-time
      contentType:
        description: |
          Artifact mime-type for the resource to which the queue should
          redirect. Please use the same `Content-Type`, consistently using
          the correct mime-type make tooling a lot easier, specifically,
          always using `application/json` for JSON artifacts.
        type:       string
        maxLength:  255
      url:
        description: |
          URL to which the queue should redirect using a `303` (See other)
          redirect.
        type:       string
        format:     uri
    additionalProperties: false
    required:
      - storageType
      - expires
      - url
      - contentType
  - title:          "Error Artifact Request"
    description: |
      Request the queue to reply `424` (Failed Dependency) with `reason` and 
      `message` to any `GET` request for this artifact. This is mainly useful
      as a way for a task to declare that it failed to provide an artifact it
      wanted to upload.
    type:           object
    properties:
      storageType:
        description: |
          Artifact storage type, in this case `error`
        type:       string
        enum:
          - error
      expires:
        description: |
          Date-time after which the queue should stop replying with the error
          and forget about the artifact.
        type:       string
        format:     date-time
      reason:
        description: |
          Reason why the artifact doesn't exist.
        type:       string
        enum:
          - file-missing-on-worker
          - invalid-resource-on-worker
          - too-large-file-on-worker
      message:
        description: |
          Human readable explanation of why the artifact is missing
        type:       string
        maxLength:  4096
    additionalProperties: false
    required:
      - storageType
      - expires
      - reason
      - message
