---
defaults:
  app:
    jobQueue: null
    statusQueue: null
    buildsTableName: 'TaskclusterGithubBuilds'
    ownersDirectoryTableName: 'TaskclusterIntegrationOwners'
    publishMetaData: !env:bool PUBLISH_METADATA
    statusContext: 'Taskcluster'
    botName: !env BOT_USERNAME

  taskcluster:
    rootUrl: !env TASKCLUSTER_ROOT_URL
    credentials:
      clientId: !env TASKCLUSTER_CLIENT_ID
      accessToken: !env TASKCLUSTER_ACCESS_TOKEN

  github:
    credentials:
      privatePEM: !env GITHUB_PRIVATE_PEM
      integrationId: !env GITHUB_INTEGRATION_ID

  webhook:
    secret: !env:list WEBHOOK_SECRET

  intree:
    provisionerId: !env PROVISIONER_ID
    workerType: !env WORKER_TYPE

  azure:
    accountId: !env AZURE_ACCOUNT_NAME

  monitoring:
    project: !env MONITORING_PROJECT
    enable: !env:bool MONITORING_ENABLE

  server:
    port: !env:number PORT
    env: 'development'
    forceSSL: false
    trustProxy: false

  pulse:
    hostname: !env PULSE_HOSTNAME
    username: !env PULSE_USERNAME
    password: !env PULSE_PASSWORD
    vhost: !env PULSE_VHOST
    namespace: !env PULSE_NAMESPACE

  aws:
    accessKeyId: !env AWS_ACCESS_KEY
    secretAccessKey: !env AWS_SECRET_KEY
    region: 'us-west-2'
    apiVersion: '2014-01-01'

production:
  app:
    jobQueue: 'jobs'
    statusQueue: 'statuses'
    botName: 'taskcluster[bot]'

  intree:
    provisionerId: 'aws-provisioner-v1'
    workerType: 'github-worker'

  server:
    env: 'production'
    forceSSL: true
    # We trust the proxy on heroku, as the SSL end-point provided by heroku
    # is a proxy, so we have to trust it.
    trustProxy: true

  taskcluster:
    schedulerId: taskcluster-github

  pulse:
    namespace: taskcluster-github

staging:
  app:
    jobQueue: 'jobs'
    statusQueue: 'statuses'
    buildsTableName: 'TaskclusterGithubBuildsStaging'
    ownersDirectoryTableName: 'TaskclusterIntegrationOwnersStaging'
    name: 'tc-github-staging'
    statusContext: 'Taskcluster-Staging'
    botName: 'taskcluster-staging[bot]'

  intree:
    provisionerId: 'aws-provisioner-v1'
    workerType: 'github-worker'

  server:
    env: 'production'
    forceSSL: true
    # We trust the proxy on heroku, as the SSL end-point provided by heroku
    # is a proxy, so we have to trust it.
    trustProxy: true

  taskcluster:
    schedulerId: tc-gh-staging

test:
  app:
    botName: 'magicalTCspirit'

  webhook:
    secret: ['abc123', 'def456']

  azure:
    accountId: 'jungle'

  monitoring:
    enable: false

  server:
    port: 60415

  intree:
    provisionerId: 'dummy-provisioner'
    workerType: 'dummy-worker'

  taskcluster:
    schedulerId: tc-gh-devel

  pulse:
    fake: true
