$schema: "/schemas/common/metaschema.json#"
title: Worker Lifecycle
description: |
  Conditions a worker can reach and actions to take in the case that they do.
  Not all providers necessarily implement all features of this in the same way.
  Read the providers docs to understand exactly what it will do.
type: object
properties:
  registrationTimeout:
    title: Registration Timeout
    type: integer
    description: |
      Each worker in this pool has `registrationTimeout` seconds to
      register itself with worker-manager after it has
      been requsted from the cloud provider. After this
      timeout, worker-manager will terminate the instance,
      assuming it is broken.

      This parameter has no effect for worker pools using the static provider
      type.
  reregistrationTimeout:
    title: Checkin Timeout
    type: integer
    default: 345600   # 4 days (note this is also set in interpretLifecycle; update both if changing)
    maximum: 2592000  # 30 days
    description: |
      If specified, workers in this pool must re-register via `reregister()`
      within `reregistrationTimeout` seconds from the initial call to
      `register()` to get new credentials. If the worker has not done so, it
      will be terminated.  This value also dictates the lifetime of the
      temporary credentials granted to the worker, meaning that it must be
      less than 30 days. The default value is 4 days.
  queueInactivityTimeout:
    title: Queue Inactivity Timeout
    type: integer
    minimum: 60 # 1 minute
    default: 7200 # 2 hours
    description: |
      In order to prevent workers from being stuck without doing any work,
      `queueInactivityTimeout` controls how long a worker can do something other than
      working on a task. If worker process dies, or it stops calling `claimWork`
      or `reclaimTask` it should be considered dead and terminated.

      Minimum allowed value is 1 minute, to prevent workers from being terminated
      while they are starting up or rebooting between the tasks.

      This timeout has no affect quarantined workers,
      as they are still calling `claimWork`.
      Static workers are also unaffected.
additionalProperties: false
required: []
