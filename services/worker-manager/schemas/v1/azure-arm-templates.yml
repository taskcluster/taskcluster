$schema: "/schemas/common/metaschema.json#"
title: Azure Provider ARM Deployment Configuration
description: |
  ARM Template deployment configuration for Azure VMs.
  These properties are passed directly to the Azure Deployments API.
  Note: workerManager and workerConfig are defined in the parent schema.

  [Template Syntax](https://learn.microsoft.com/en-us/azure/azure-resource-manager/templates/syntax)

  ARM Deployments allows full provisioning of many related resources at once, offloading the provisioning process to Azure Resource Manager.
type: object
required:
  - armDeployment
properties:
  armDeploymentResourceGroup:
    title: Resource Group Override
    type: string
    description: |
      Override the resource group for the ARM deployment.
      By default, resource group would be taken from Azure provider configuration provided at deployment time.

      If resource group doesn't exist, it would be created in the region specified in the armDeployment template.
      If multiple launch configs define same `armDeploymentResourceGroup` it would be created at most once.
  armDeployment:
    title: ARM Deployment Configuration
    type: object
    description: |
      Azure Resource Manager deployment configuration.
      These properties are passed directly to the Azure Deployments API.

      SECURITY RECOMMENDATION: Use templateLink with id (template specs) for production deployments.
      Avoid templateLink with uri unless using trusted, controlled sources.

      You must specify exactly ONE of: template (inline) or templateLink (external/template spec).
    required:
      - mode
    oneOf:
      - required: [template]
      - required: [templateLink]
    properties:
      mode:
        type: string
        enum: [Incremental, Complete]
        description: |
          The deployment mode.
          - Incremental: Deploy resources without deleting existing resources not in the template
          - Complete: (USE WITH CAUTION) Deploy resources and delete existing resources not in the template
      template:
        title: Inline Template
        type: object
        description: |
          The inline ARM template (self-contained).
          Cannot be used with templateLink.
        additionalProperties: true
      templateLink:
        title: Template Link (External Template or Template Spec)
        type: object
        description: |
          Reference to an external template or template spec.
          Cannot be used with template.

          For TEMPLATE SPECS (RECOMMENDED for production):
          - Use the 'id' property with full template spec resource ID
          - Template specs are versioned, secure, and support RBAC

          For EXTERNAL TEMPLATES (NOT RECOMMENDED - use only for trusted sources):
          - Use the 'uri' property with template URL
          - For security, prefer Azure Storage with SAS tokens and access controls
        oneOf:
          - type: object
            required: [id]
            properties:
              id:
                type: string
                pattern: '^/subscriptions/[^/]+/resourceGroups/[^/]+/providers/Microsoft\.Resources/templateSpecs/[^/]+/versions/[^/]+$'
                description: |
                  Full resource ID of the Template Spec version.
                  Format: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Resources/templateSpecs/{specName}/versions/{version}
            additionalProperties: false
          - type: object
            required: [uri]
            properties:
              uri:
                type: string
                description: |
                  Template URI. For security, prefer:
                  - Azure Storage with SAS tokens and access controls
                  - Private repositories with authentication
                  - Internal artifact repositories
              contentVersion:
                type: string
                description: Template content version
              queryString:
                type: string
                description: Query string for the URI (e.g., SAS token for blob storage)
            additionalProperties: false
      parameters:
        title: Template Parameters
        type: object
        description: |
          Template parameter values. Each parameter should be an object with a 'value' property
          or a 'reference' property for KeyVault references.

          `location` parameter is required to determine workerGroup.

          Note: The following parameters are automatically generated by worker-manager:
          - customData, computerName, adminPassword, adminUsername, vmName

          Your ARM template MUST define these parameters in its parameters section,
          even though you don't provide values for them in the worker pool configuration.
          Worker-manager will automatically supply values for these when deploying.

          Example:

              "osProfile": {
                  "customData": "[parameters('customData')]",
                  "computerName": "[parameters('computerName')]",
                  "adminPassword": "[parameters('adminPassword')]",
                  "adminUsername": "[parameters('adminUsername')]",
                  "windowsConfiguration": {
                    "timeZone": "UTC",
                    "enableAutomaticUpdates": true
                  }
                }

        required:
          - location
          - customData
          - vmName
          - computerName
          - adminPassword
          - adminUsername
        additionalProperties:
          type: object
          oneOf:
            - type: object
              properties:
                value:
                  description: The parameter value
              required: [value]
              additionalProperties: false
            - type: object
              properties:
                reference:
                  type: object
                  description: KeyVault reference for secure parameter values
                  properties:
                    keyVault:
                      type: object
                      properties:
                        id:
                          type: string
                          description: KeyVault resource ID
                      additionalProperties: false
                    secretName:
                      type: string
                      description: Name of the secret in KeyVault
                    secretVersion:
                      type: string
                      description: Version of the secret (optional)
                  required: [keyVault, secretName]
                  additionalProperties: false
              required: [reference]
              additionalProperties: false
      parametersLink:
        title: External Parameters Link
        type: object
        description: |
          SECURITY NOTE: External parameters may contain sensitive data.
          URI reference to an external parameters file.
        properties:
          uri:
            type: string
            description: The URI of the parameters file
          contentVersion:
            type: string
            description: Parameters file content version
        additionalProperties: false
      debugSetting:
        title: Debug Settings
        type: object
        description: Debug setting for deployment
        properties:
          detailLevel:
            type: string
            enum: [requestContent, responseContent, "requestContent,responseContent"]
            description: |
              Specifies the type of information to log for debugging.
        additionalProperties: false
      onErrorDeployment:
        title: Error Handling
        type: object
        description: |
          The deployment on error behavior. Rollback on failure.
        properties:
          type:
            type: string
            enum: [LastSuccessful, SpecificDeployment]
            description: |
              The type of on error deployment.
              - LastSuccessful: Rollback to last successful deployment
              - SpecificDeployment: Rollback to a specific deployment
          deploymentName:
            type: string
            description: |
              The deployment name to rollback to (required when type is SpecificDeployment)
        additionalProperties: false
      expressionEvaluationOptions:
        title: Expression Evaluation Options
        type: object
        description: Options to control template expression evaluation
        properties:
          scope:
            type: string
            enum: [Inner, Outer]
            description: |
              The scope for template expression evaluation.
              - Inner: Expressions are evaluated within the scope of nested templates
              - Outer: Expressions are evaluated in the parent template scope
        additionalProperties: false
    additionalProperties: false
additionalProperties: true
