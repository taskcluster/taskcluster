$schema: "/schemas/common/metaschema.json#"
title: AWS Provider Config
description: Object with an array of possible options for different regions
type: object
properties:
  launchConfigs:
    title: Launch Configurations
    type: array
    uniqueItems: true
    items:
      type: object
      properties:
        region:
          title: Region
          type: string
          description: AWS region (not to be confused with AZ) to launch the instances in
        launchConfig:
          title: Launch Configuration
          type: object
          description: |
            An object to be passed in to AWS runInstances method.
            See the documentation [here](https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/EC2.html#runInstances-property)
            You can configure any properties you need. Note, however, that we disallow passing in arbitrary IAM instance profiles.
          properties:
            ImageId:
              type: string
              description: The ID of the AMI to launch an instance from.
          required:
            - ImageId
          not:
            required:
              - IamInstanceProfile
              - UserData
              - MinCount
              - MaxCount
          additionalProperties: true
        additionalUserData:
          type: object
          properties:
            # These properties are not allowed, so we assert that
            # they do not match the empty schema
            rootUrl: {not: {}}
            workerPoolId: {not: {}}
            providerId: {not: {}}
            workerGroup: {not: {}}
            workerConfig: {not: {}}
          required: []
          additionalProperties: true
        capacityPerInstance:
          title: Capacity Per Instance
          type: integer
          minimum: 1
          description: The number of tasks a single worker of this type can run at any given time.
        workerConfig:
          title: Worker Config
          type: object
          additionalProperties: true
          description: |
            This value is supplied unchanged as the `workerConfig` property of the `taskcluster` instance metadata attribute.
            The expectation is that the worker will merge this information with configuration from other sources.
            This property must not be used for secret configuration, as it is visible both in the worker pool configuration and in the worker instance's metadata.
            Instead, put secret configuration in the secrets service.
      additionalProperties: false
      required:
        - region
        - launchConfig
        - capacityPerInstance
  lifecycle: {$ref: 'worker-lifecycle.json#'}
  minCapacity:
    title: Minimum Capacity
    type: integer
    description: Minimum capacity necessary to maintain at any given time for the entire workerpool
  maxCapacity:
    title: Maximum Capacity
    type: integer
    description: Maximum capacity that should not be exceeded at any given time for the entire workerpool
  scalingRatio:
    title: Scaling Ratio
    type: number
    minimum: 0.0
    maximum: 1.0
    description: |
      The scaling ratio is a ratio of worker capacity to pending tasks - a ratio of 1.0 means that 1 capacity will be added for each pending task
additionalProperties: false
required:
  - launchConfigs
  - minCapacity
  - maxCapacity
