$schema: "/schemas/common/metaschema.json#"
title: Google Provider Config
description: |
  'The config section of a workertype is using a provider with implementation google must match this.
  Much of these fields are documented [here](https://cloud.google.com/compute/docs/reference/rest/v1/instanceTemplates)'
type: object
properties:
  minCapacity:
    title: Minimum Capacity
    type: integer
    minimum: 0
    description: |
      The minimum amount of capacity that worker-manager should make
      available at any given time.
  maxCapacity:
    title: Maximum Capacity
    type: integer
    minimum: 0
    description: |
      The maximum amount of capacity that worker-manager should make
      available at any given time.
  capacityPerInstance:
    title: Capacity Per Instance
    type: integer
    minimum: 1
    description: The number of tasks a single worker of this type can run at any given time.
  machineType:
    title: Machine Type
    type: string
    description: |
      'The google machine type to use to run this instance. This refers to
      [these types](https://cloud.google.com/compute/docs/machine-types)'
  regions:
    title: Regions
    type: array
    description: 'The google cloud regions to run these instances in. Google documents
    these [here](https://cloud.google.com/compute/docs/regions-zones/)'
    uniqueItems: true
    items:
      type: string
  workerConfig:
    title: Worker Config
    type: object
    additionalProperties: true
    description: |
      This value is supplied unchanged as the `workerConfig` property of the `taskcluster` instance metadata attribute.
      The expectation is that the worker will merge this information with configuration from other sources,
      and this is precisely what [taskcluster-worker-runner](https://github.com/taskcluster/taskcluster-worker-runner) does.
      This property must not be used for secret configuration, as it is visible both in the worker pool configuration and in the worker instance's metadata.
      Instead, put secret configuration in the [secrets service](https://github.com/taskcluster/taskcluster-worker-runner#secrets).
  scheduling:
    title: Scheduling
    type: object
    description: 'Extra documentation [here](https://cloud.google.com/compute/docs/instances/setting-instance-scheduling-options)'
    additionalProperties: true
  networkInterfaces:
    title: Network Interfaces
    type: array
    description: |
      Configure the networking available to the instance. Permitted fields documented in
      the full instance template docs above.
    uniqueItems: false
    items:
      type: object
      additionalProperties: true
  disks:
    title: Disks
    type: array
    description: |
      Configure the networking available to the instance. Permitted fields documented in
      the full instance template docs above. It is likely that you will want to have at least
      a single `PERSISTENT` disk where the source image is one that contains a taskcluster worker
      configured to run on boot and talk to worker-manager for credentials.
    uniqueItems: false
    items:
      type: object
      additionalProperties: true
  userData:
    title: User Data (deprecated)
    type: object
    additionalProperties: true
    description: |
      Supplied as a `userData` property in the `taskcluster` instance metadata attribute.
      [Taskcluster-worker-runner](https://github.com/taskcluster/taskcluster-worker-runner) ignores this field.
      Prefer to use the `workerConfig` property.
additionalProperties: false
required:
  - minCapacity
  - maxCapacity
  - capacityPerInstance
  - machineType
  - regions
  - scheduling
  - networkInterfaces
  - disks
