---
defaults:
  taskcluster:
    rootUrl:        !env TASKCLUSTER_ROOT_URL
  app:
    # credentials used for the service (uploading docs, etc.)
    credentials:
      clientId:     !env TASKCLUSTER_CLIENT_ID
      accessToken:  !env TASKCLUSTER_ACCESS_TOKEN
    temporaryCredentials:
      # Set the credentials to be valid 15 min before creation
      # (allowing for a bit of clock skew)
      startOffset:    '- 15 min'
      # Set the credential to expire after 3 days
      expiry:         '3 days'
      # Credentials to temporary credentials; these should have all of the roles that
      # the service might hand out.  It's OK for these to be the same as app.credentials.
      credentials:
        clientId:     !env TASKCLUSTER_CLIENT_ID
        accessToken:  !env TASKCLUSTER_ACCESS_TOKEN
  monitoring:
    level: !env:optional LEVEL
    errorConfig: !env:json:optional ERROR_CONFIG

  server:
    port:       !env:number PORT
    forceSSL:   !env:bool FORCE_SSL
    env:        !env NODE_ENV
    trustProxy: !env:bool TRUST_PROXY
production:
  handlers:
    mozilla-auth0:
      domain:         !env AUTH0_DOMAIN
      apiAudience:    !env AUTH0_API_AUDIENCE
      clientId:       !env AUTH0_CLIENT_ID
      clientSecret:   !env AUTH0_CLIENT_SECRET
  server:
    forceSSL: true
test:
  handlers:
    test:
  app:
    temporaryCredentials:
      credentials:
        clientId:     'dummy'
        accessToken:  'lol no secret here'
  server:
    port: 60174
    env: development
    forceSSL: false
    trustProxy: true
ngrok:
  handlers:
    test:
  app:
    temporaryCredentials:
      credentials:
        clientId:     'dummy'
        accessToken:  'lol no secret here'
    credentials:
      clientId:     !env TASKCLUSTER_CLIENT_ID
      accessToken:  !env TASKCLUSTER_ACCESS_TOKEN
  server:
    port: 60174
    forceSSL:   true
    trustProxy: true
    env: development
