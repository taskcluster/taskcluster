{"queue":{"baseUrl":"http://queue.taskcluster.net","reference":[{"method":"post","route":"/v1/task/new","name":"createTask","requestSchema":"http://schemas.taskcluster.net/queue/v1/task.json#","responseSchema":"http://schemas.taskcluster.net/queue/v1/create-task-response.json#","title":"Create new task","description":"Create a new task, the `status` of the resulting JSON is a task status\nstructure, you can find the `taskId` in this structure, enjoy."},{"method":"get","route":"/v1/define-tasks","name":"defineTasks","requestSchema":"http://schemas.taskcluster.net/queue/v1/define-tasks-request.json#","responseSchema":"http://schemas.taskcluster.net/queue/v1/define-tasks-response.json#","title":"Define Tasks","description":"Request a number of `taskId`s and signed URL to which the tasks can be\nuploaded. The tasks will not be scheduled, to do this you must called the\n`/task/:taskId/schedule` API end-point.\n\nThe purpose of this API end-point is allow schedulers to upload a set of\ntasks to S3 without the tasks becoming _pending_ immediately. This useful\nif you have a set of dependent tasks. Then you can upload all the tasks\nand when the dependencies of a tasks have been resolved, you can schedule\nthe task by calling `/task/:taskId/schedule`. This eliminates the need to\nstore tasks somewhere else while waiting for dependencies to resolve.\n\n**Remark** the queue does not track tasks before they have been \n_scheduled_, hence, you'll not able to call `/task/:taskId/status` with\n`taskId`s assigned here, before they are scheduled with\n`/task/:taskId/schedule`."},{"method":"post","route":"/v1/task/:taskId/schedule","name":"scheduleTask","responseSchema":"http://schemas.taskcluster.net/queue/v1/task-schedule-response.json#","title":"Schedule Defined Task","description":"If you've uploaded task definitions to PUT URLs obtained from\n`/define-tasks`, then you can schedule the tasks using this method.\nThis will down fetch and validate the task definition against the\nrequired JSON schema.\n\nThis method has the same response as `/task/new`, using this method in\ncombination with `/define-tasks` is just an efficient way of storing\nand defining a set of tasks you want to schedule later.\n\n**Note** this operation is **idempotent** and will not fail or complain\nif called with `taskId` that is already scheduled, or even resolved.\nTo reschedule a task previously resolved, use `/task/:taskId/rerun`."},{"method":"get","route":"/v1/task/:taskId/status","name":null,"responseSchema":"http://schemas.taskcluster.net/queue/v1/task-status-response.json#","title":"Get task status","description":"Get task status structure from `taskId`"},{"method":"post","route":"/v1/task/:taskId/claim","name":"claimTask","requestSchema":"http://schemas.taskcluster.net/queue/v1/task-claim-request.json#","responseSchema":"http://schemas.taskcluster.net/queue/v1/task-claim-response.json#","title":"Claim task","description":"Claim task, takes workerGroup, workerId and optionally runId as input\nreturns task status structure, runId, resultPutUrl and logsPutUrl"},{"method":"post","route":"/v1/task/:taskId/artifact-urls","name":"requestArtifactUrls","requestSchema":"http://schemas.taskcluster.net/queue/v1/artifact-url-request.json#","responseSchema":"http://schemas.taskcluster.net/queue/v1/artifact-url-response.json#","title":"Get artifact urls","description":"Get artifact-urls for posted artifact urls..."},{"method":"post","route":"/v1/task/:taskId/completed","name":"reportTaskCompleted","requestSchema":"http://schemas.taskcluster.net/queue/v1/task-completed-request.json#","responseSchema":"http://schemas.taskcluster.net/queue/v1/task-completed-response.json#","title":"Report Completed Task","description":"Report task completed..."},{"method":"post","route":"/v1/claim-work/:provisionerId/:workerType","name":"claimWork","requestSchema":"http://schemas.taskcluster.net/queue/v1/claim-work-request.json#","responseSchema":"http://schemas.taskcluster.net/queue/v1/claim-work-response.json#","title":"Claim work for a worker","description":"Claim work for a worker, returns information about an appropriate task\nclaimed for the worker. Similar to `/v1/task/:taskId/claim`, which can be\nused to claim a specific task, or reclaim a specific task extending the\n`takenUntil` timeout for the run.\n\n**Note**, that if no tasks are _pending_ this method will not assign a\ntask to you. Instead it will return `204` with a timeout you should wait\nbefore polling the queue again. The response has the following form:\n`{sleep: <seconds to sleep>}`. To avoid this declare a RabbitMQ queue for\nyour `workerType` claim work using `/v1/task/:taskId/claim`."},{"method":"post","route":"/v1/task/:taskId/rerun","name":"rerunTask","responseSchema":"http://schemas.taskcluster.net/queue/v1/task-rerun-response.json#","title":"Rerun a Resolved Task","description":"This method _reruns_ a previously resolved task, even if it was\n_completed_. This is useful if your task completes unsuccessfully, and\nyou just want to run it from scratch again. This will also reset the\nnumber of `retries` allowed.\n\nRemember that `retries` in the task status counts the number of runs that\nthe queue have started because the worker stopped responding, for example\nbecause a spot node died.\n\n**Remark** this operation is idempotent, if you try to rerun a task that\nisn't either `failed` or `completed`, this operation will just return the\ncurrent task status."},{"method":"get","route":"/v1/pending-tasks/:provisionerId","name":"getPendingTasks","title":"Fetch pending tasks for provisioner","description":"Documented later...\n\n**Warning** this api end-point is **not stable**."},{"method":"get","route":"/v1/settings/amqp-connection-string","name":"getAMQPConnectionString","responseSchema":"http://schemas.taskcluster.net/queue/v1/amqp-connection-string-response.json#","title":"Fetch AMQP Connection String","description":"Most hosted AMQP services requires us to specify a virtual host, \nso hardcoding the AMQP connection string into various services would be \na bad solution. Hence, we offer all authorized queue consumers to fetch \nan AMQP connection string using the API end-point.\n\n**Warning**, this API end-point is not stable, and may change in the \nfuture the strategy of not hardcoding AMQP connection details into \nvarious components obviously makes sense. But as we have no method of \nnotifying consumers that the connection string have moved. This \napproach may not be optimal either. Thus, we may be choose to remove \nthis API end-point when `pulse.mozilla.org` is a stable AMQP service \nwe can rely on."}],"autoUpdate":true,"version":1},"scheduler":{"baseUrl":"http://scheduler.taskcluster.net","reference":[{"method":"post","route":"/v1/task-graph/create","name":"createTaskGraph","requestSchema":"http://schemas.taskcluster.net/scheduler/v1/task-graph.json#","responseSchema":"http://schemas.taskcluster.net/scheduler/v1/create-task-graph-response.json#","title":"Create new task-graph","description":"TODO: Write documentation"},{"method":"get","route":"/v1/table-access","name":"requestTableAccess","title":"Get Access to Azure Table","description":"**Warning**, this API end-point is **not stable**. At this point in time\nright is reserved to change the table at any time.. People shouldn't\nbuild fancy tools on this. Jump onto #taskcluster if you want a stable\nAPI for this... We should think up something reasonable.\n\nTODO: Write documentation"},{"method":"get","route":"/v1/task-graph/:taskGraphId/status","name":"getTaskGraphStatus","responseSchema":"http://schemas.taskcluster.net/scheduler/v1/task-graph-status.json","title":"Task Graph Status","description":"Get task-graph status, this will return the _task-graph status\nstructure_. which can be used to check if a task-graph is `running`,\n`blocked` or `finished`.\n\n**Note**, that `finished` implies successfully completion."},{"method":"get","route":"/v1/task-graph/:taskGraphId/info","name":"getTaskGraphInfo","responseSchema":"http://schemas.taskcluster.net/scheduler/v1/task-graph-info-response.json","title":"Task Graph Information","description":"TODO: Write documentation..."},{"method":"get","route":"/v1/task-graph/:taskGraphId/inspect","name":"inspectTaskGraph","responseSchema":"http://schemas.taskcluster.net/scheduler/v1/inspect-task-graph-response.json","title":"Inspect Task Graph","description":"TODO: Write documentation..."}],"autoUpdate":true,"version":1}}