{
  "name": "taskcluster-client",
  "version": "0.2.0",
  "author": {
    "name": "Jonas Finnemann Jensen",
    "email": "jopsen@gmail.com"
  },
  "description": "Client for interfacing taskcluster components",
  "license": "MPL-2.0",
  "scripts": {
    "test": "nodeunit client_test.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/taskcluster/taskcluster-client.git"
  },
  "dependencies": {
    "nconf": "0.6.9",
    "promise": "4.0.0",
    "lodash": "2.4.1",
    "debug": "0.7.4",
    "superagent": "~0.16.0",
    "superagent-promise": "0.1.0"
  },
  "devDependencies": {
    "nodeunit": "0.8.6",
    "commander": "2.2.0",
    "cliff": "0.1.8"
  },
  "readme": "# TaskCluster Client\n_A taskcluster client library for node.js._\n\n## Usage\nThis client library is generated from the auto-generated API reference.\nYou can load these at runtime using `client.load`, but there is also a series\nof builtin APIs. You can use them as follows:\n\n```js\nvar client = require('taskcluster-client');\n\n// Create task using `queue` (builtin API)\nclient.queue.createTask(task).then(function(result) {\n  // status is a task status structure\n  console.log(result.status);\n});\n```\n\nThe `payload` parameter is always a JSON object as documented by the REST API\ndocumentation. The methods always returns a _promise_ for the response JSON\nobject as documented in the REST API documentation.\n\n<!-- START OF GENERATED DOCS -->\n\n### Methods in `client.queue`\n * `createTask(payload)`\n * `defineTasks(payload)`\n * `scheduleTask(taskId)`\n * `claimTask(taskId, payload)`\n * `requestArtifactUrls(taskId, payload)`\n * `reportTaskCompleted(taskId, payload)`\n * `claimWork(provisionerId, workerType, payload)`\n * `rerunTask(taskId)`\n * `getPendingTasks(provisionerId)`\n * `getAMQPConnectionString()`\n\n### Methods in `client.scheduler`\n * `createTaskGraph(payload)`\n * `requestTableAccess()`\n * `getTaskGraphStatus(taskGraphId)`\n * `getTaskGraphInfo(taskGraphId)`\n * `inspectTaskGraph(taskGraphId)`\n\n<!-- END OF GENERATED DOCS -->\n\n### Loading an API Dynamically\nYou can load an API dynamically using `client.load(baseUrl, version)`, as\nillustrated below:\n\n```js\n// Load API from /v1/reference from queue.taskcluster.net\nclient.load('http://queue.taskcluster.net', 1).then(function(queue) {\n  // Create a task using queue API as created above\n  return queue.createTask(task);\n}).then(...);\n```\nIf you have the reference locally, you can also create an API wrapper with\n`new client(baseUrl, reference)`, where `reference` is the JSON list returned\nfrom `/v1/reference`.\n\n### Configuring API BaseUrls\nIf you use the builtin APIs documented above you can configure which `baseUrl`\nto use using `client.config({queue: 'http://localhost:3001'})`. If no `baseUrl`\nis configured this way, the builtin `baseUrl` will be used.\n\n## Updating Builtin APIs\nWhen releasing a new version of the `taskcluster-client` library, we should\nalways update the builtin references using `utils/update-apis.js` this\nmaintenance script can be used to list, show, add, remove and update builtin\nAPI definitions.\n\nWhen `apis.json` is updated, please run `utils/generate-docs.js` to update the\ndocumentation in this file.\n\n##License\nThe taskcluster client library is released on [MPL 2.0](http://mozilla.org/MPL/2.0/).\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/taskcluster/taskcluster-client/issues"
  },
  "homepage": "https://github.com/taskcluster/taskcluster-client",
  "_id": "taskcluster-client@0.2.0",
  "dist": {
    "shasum": "f16e111d9b35ebe84e0b56410635baf21f6c9252"
  },
  "_resolved": "git://github.com/taskcluster/taskcluster-client.git#8dc12043471e7ea4cefe53fea6ae25049bf849e9",
  "_from": "taskcluster-client@git://github.com/taskcluster/taskcluster-client.git#8dc12043471e7ea4cefe53fea6ae25049bf849e9"
}
