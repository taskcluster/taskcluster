{
  "name": "slugid",
  "version": "1.0.1",
  "author": {
    "name": "Jonas Finnemann Jensen",
    "email": "jopsen@gmail.com"
  },
  "description": "URL-safe base64 UUID encoder for generating 22 character slugs",
  "license": "MIT",
  "scripts": {
    "test": "nodeunit slugid_test.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/jonasfj/slugid.git"
  },
  "dependencies": {
    "uuid": "1.4.1"
  },
  "devDependencies": {
    "nodeunit": "0.8.6"
  },
  "readme": "slugid - Compressed UUIDs for Node.js \n=====================================\n[![Build Status](https://travis-ci.org/jonasfj/slugid.svg?branch=master)](https://travis-ci.org/jonasfj/slugid)\n\nA node.js module for generating UUIDs and encode them in URL-safe base64\n(See [RFC 4648 sec. 5](http://tools.ietf.org/html/rfc4648#section-5)).\nThe compressed UUIDs are always **22 characters** on the following form\n`[a-Z0-9_-]{22}`. This is useful for small unique slugs.\n\n```js\nvar slugid = require('slugid');\n\n// Generate URL-safe base64 encoded UUID version 4 (random)\nvar slug = slugid.v4(); // a8_YezW8T7e1jLxG7evy-A\n```\n\nEncode / Decode\n---------------\n```js\nvar slugid = require('slugid');\n\n// Generate URL-safe base64 encoded UUID version 4 (random)\nvar slug = slugid.v4();\n\n// Get UUID on the form xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\nvar uuid = slugid.decode(slug);\n\n// Compress to slug again\nassert(slug == slugid.encode(uuid));\n```\n\nLicense\n-------\nThe `slugid` library is released on the MIT license, see the `LICENSE` for\ncomplete license.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/jonasfj/slugid/issues"
  },
  "homepage": "https://github.com/jonasfj/slugid",
  "_id": "slugid@1.0.1",
  "_from": "slugid@1.0.1"
}
