{
  "api_version": "2013-06-15",
  "type": "query",
  "result_wrapped": true,
  "signature_version": "v4",
  "service_full_name": "Amazon ElastiCache",
  "endpoint_prefix": "elasticache",
  "xmlnamespace": "http://elasticache.amazonaws.com/doc/2013-06-15/",
  "documentation": "\n        <fullname>Amazon ElastiCache</fullname>\n        <p>Amazon ElastiCache is a web service that makes it easier to set up, operate, and scale a\n            distributed cache in the cloud.</p>\n        <p>With ElastiCache, customers gain all of the benefits of a high-performance,\n            in-memory cache with far less of the administrative burden of launching and managing a\n            distributed cache. The service makes set-up, scaling, and cluster failure handling much\n            simpler than in a self-managed cache deployment.</p>\n        <p>In addition, through integration with Amazon CloudWatch, customers get enhanced\n            visibility into the key performance statistics associated with their cache and can\n            receive alarms if a part of their cache runs hot.</p>\n    ",
  "operations": {
    "AuthorizeCacheSecurityGroupIngress": {
      "name": "AuthorizeCacheSecurityGroupIngress",
      "input": {
        "shape_name": "AuthorizeCacheSecurityGroupIngressMessage",
        "type": "structure",
        "members": {
          "CacheSecurityGroupName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The cache security group which will allow network ingress.</p>\n    ",
            "required": true
          },
          "EC2SecurityGroupName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The Amazon EC2 security group to be authorized for ingress to the cache security group.</p>\n    ",
            "required": true
          },
          "EC2SecurityGroupOwnerId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The AWS account number of the Amazon EC2 security group owner. Note that this is not the same thing as an AWS access\n            key ID - you must provide a valid AWS account number for this parameter.</p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>Represents the input of an <i>AuthorizeCacheSecurityGroupIngress</i> operation.</p>\n    "
      },
      "output": {
        "shape_name": "CacheSecurityGroupWrapper",
        "type": "structure",
        "members": {
          "CacheSecurityGroup": {
            "shape_name": "CacheSecurityGroup",
            "type": "structure",
            "members": {
              "OwnerId": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The AWS account ID of the cache security group owner.</p>\n    "
              },
              "CacheSecurityGroupName": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The name of the cache security group.</p>\n    "
              },
              "Description": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The description of the cache security group.</p>\n    "
              },
              "EC2SecurityGroups": {
                "shape_name": "EC2SecurityGroupList",
                "type": "list",
                "members": {
                  "shape_name": "EC2SecurityGroup",
                  "type": "structure",
                  "members": {
                    "Status": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The status of the Amazon EC2 security group.</p>\n    "
                    },
                    "EC2SecurityGroupName": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The name of the Amazon EC2 security group.</p>\n    "
                    },
                    "EC2SecurityGroupOwnerId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n       <p>The AWS account ID of the Amazon EC2 security group owner.</p>\n    "
                    }
                  },
                  "documentation": "\n        <p>Provides ownership and status information for an Amazon EC2 security group.</p>\n    ",
                  "xmlname": "EC2SecurityGroup"
                },
                "documentation": "\n        <p>A list of Amazon EC2 security groups that are associated with this cache security group.</p>\n    "
              }
            },
            "wrapper": true,
            "documentation": "\n        <p>Represents the output of one of the following operations:</p>\n        <ul>\n            <li>\n                <i>AuthorizeCacheSecurityGroupIngress</i>\n            </li>\n            <li>\n                <i>CreateCacheSecurityGroup</i>\n            </li>\n            <li>\n                <i>RevokeCacheSecurityGroupIngress</i>\n            </li>\n        </ul>\n    "
          }
        }
      },
      "errors": [
        {
          "shape_name": "CacheSecurityGroupNotFoundFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>\n            The requested cache security group name does not refer to an existing cache security group.</p>\n    "
        },
        {
          "shape_name": "InvalidCacheSecurityGroupStateFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The current state of the cache security group does not allow deletion.</p>\n    "
        },
        {
          "shape_name": "AuthorizationAlreadyExistsFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The specified Amazon EC2 security group is already authorized for the specified cache security\n            group.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterValueException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>A parameter value is invalid.</p>\n    "
            }
          },
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterCombinationException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>Two or more parameters that must not be used together were used together.</p>\n    "
            }
          },
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n    "
        }
      ],
      "documentation": "\n        <p>The <i>AuthorizeCacheSecurityGroupIngress</i> operation allows network ingress to a cache\n            security group. Applications using ElastiCache must be running on Amazon EC2, and\n            Amazon EC2 security groups are used as the authorization mechanism.</p>\n        <note> You cannot authorize ingress from an Amazon EC2 security group in one Region to an ElastiCache\n            cluster in another Region. </note>\n        <examples>\n            <queryrequest>\nhttps://elasticache.us-east-1.amazonaws.com/\n   ?Action=AuthorizeCacheSecurityGroupIngress\n   &EC2SecurityGroupName=default\n   &CacheSecurityGroupName=mygroup\n   &EC2SecurityGroupOwnerId=1234-5678-1234\n   &Version=2013-06-15\n   &SignatureVersion=2\n   &SignatureMethod=HmacSHA256\n   &Timestamp=2011-02-12T01%3A29%3A15.746Z\n   &AWSAccessKeyId=YOUR-ACCESS-KEY\n   &Signature=YOUR-SIGNATURE</queryrequest>\n            <queryresponse>\n<AuthorizeCacheSecurityGroupIngressResponse xmlns=\"http://elasticache.amazonaws.com/doc/2013-06-15/\">\n    <AuthorizeCacheSecurityGroupIngressResult>\n        <CacheSecurityGroup>\n            <EC2SecurityGroups>\n                <EC2SecurityGroup>\n                    <Status>authorizing</Status>\n                    <EC2SecurityGroupName>default</EC2SecurityGroupName>\n                    <EC2SecurityGroupOwnerId>565419523791</EC2SecurityGroupOwnerId>\n                </EC2SecurityGroup>\n            </EC2SecurityGroups>\n            <CacheSecurityGroupName>mygroup</CacheSecurityGroupName>\n            <OwnerId>123456781234</OwnerId>\n            <Description>My security group</Description>\n        </CacheSecurityGroup>\n    </AuthorizeCacheSecurityGroupIngressResult>\n    <ResponseMetadata>\n        <RequestId>817fa999-3647-11e0-ae57-f96cfe56749c</RequestId>\n    </ResponseMetadata>\n</AuthorizeCacheSecurityGroupIngressResponse>\n            </queryresponse>\n        </examples>\n    "
    },
    "CreateCacheCluster": {
      "name": "CreateCacheCluster",
      "input": {
        "shape_name": "CreateCacheClusterMessage",
        "type": "structure",
        "members": {
          "CacheClusterId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The cache cluster identifier. This parameter is stored as a lowercase string.</p>\n        \n<p>Constraints:</p>\n<ul>\n<li>Must contain from 1 to 20 alphanumeric characters or hyphens.</li>\n<li>First character must be a letter.</li>\n<li>Cannot end with a hyphen or contain two consecutive hyphens.</li>\n</ul>\n ",
            "required": true
          },
          "ReplicationGroupId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The replication group to which this cache cluster should belong. If this parameter is\n            specified, the cache cluster will be added to the specified replication group as a read\n            replica; otherwise, the cache cluster will be a standalone primary that is not part of\n            any replication group.</p>        \n    "
          },
          "NumCacheNodes": {
            "shape_name": "IntegerOptional",
            "type": "integer",
            "documentation": "\n        <p>The initial number of cache nodes that the cache cluster will have.</p>\n        <p>For a Memcached cluster, valid values are between 1 and 20. If you need to exceed this\n            limit, please fill out the ElastiCache Limit Increase Request form at <a href=\"http://aws.amazon.com/contact-us/elasticache-node-limit-request/\"></a> .</p>\n        <p>For Redis, only single-node cache clusters are supported at this time, so the value for\n            this parameter must be 1.</p>\n    ",
            "required": true
          },
          "CacheNodeType": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The compute and memory capacity of the nodes in the cache cluster.</p> \n<p>Valid values for Memcached:</p>\n    <p>\n        <code>cache.t1.micro</code> |  \n        <code>cache.m1.small</code> | \n        <code>cache.m1.medium</code> |\n        <code>cache.m1.large</code> | \n        <code>cache.m1.xlarge</code> | \n        <code>cache.m3.xlarge</code> | \n        <code>cache.m3.2xlarge</code> | \n        <code>cache.m2.xlarge</code> | \n        <code>cache.m2.2xlarge</code> |\n        <code>cache.m2.4xlarge</code> | \n        <code>cache.c1.xlarge</code>\n    </p>\n    <p>Valid values for Redis:</p>\n    <p>\n       <code>cache.t1.micro</code> | \n       <code>cache.m1.small</code> | \n       <code>cache.m1.medium</code> |\n       <code>cache.m1.large</code> | \n       <code>cache.m1.xlarge</code> |  \n       <code>cache.m2.xlarge</code> | \n       <code>cache.m2.2xlarge</code> | \n       <code>cache.m2.4xlarge</code> | \n       <code>cache.c1.xlarge</code>\n    </p>\n<p>For a complete listing of cache node types and specifications, see <a href=\"http://aws.amazon.com/elasticache/\"/>.</p>\n ",
            "required": true
          },
          "Engine": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The name of the cache engine to be used for this cache cluster.</p>\n        <p>Valid values for this parameter are:</p>\n            <p><code>memcached</code> | <code>redis</code></p>\n    ",
            "required": true
          },
          "EngineVersion": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The version number of the cache engine to be used for this cluster. To view the supported cache engine versions, use the <i>DescribeCacheEngineVersions</i> operation.</p>\n    "
          },
          "CacheParameterGroupName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The name of the cache parameter group to associate with this cache cluster. If this\n            argument is omitted, the default cache parameter group for the specified engine will be\n            used.</p>\n    "
          },
          "CacheSubnetGroupName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The name of the cache subnet group to be used for the cache cluster.</p>\n        <p>Use this parameter only when you are creating a cluster in an Amazon Virtual Private\n            Cloud (VPC).</p>\n    "
          },
          "CacheSecurityGroupNames": {
            "shape_name": "CacheSecurityGroupNameList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "CacheSecurityGroupName"
            },
            "documentation": "\n        <p>A list of cache security group names to associate with this cache cluster.</p>\n        <p>Use this parameter only when you are creating a cluster outside of an Amazon Virtual\n            Private Cloud (VPC).</p>\n    "
          },
          "SecurityGroupIds": {
            "shape_name": "SecurityGroupIdsList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "SecurityGroupId"
            },
            "documentation": "\n        <p>One or more VPC security groups associated with the cache cluster.</p>\n        <p>Use this parameter only when you are creating a cluster in an Amazon Virtual Private\n            Cloud (VPC).</p>\n    "
          },
          "SnapshotArns": {
            "shape_name": "SnapshotArnsList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "SnapshotArn"
            },
            "documentation": "\n        <p>A single-element string list containing an Amazon Resource Name (ARN) that uniquely\n            identifies a Redis RDB snapshot file stored in Amazon S3. The snapshot file will be used to\n            populate the Redis cache in the new cache cluster. The Amazon S3 object name in the ARN\n            cannot contain any commas.</p>\n\n        <p>Here is an example of an Amazon S3 ARN: <code>arn:aws:s3:::my_bucket/snapshot1.rdb</code></p>\n\n        <p><b>Note:</b> This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p>    \n        \n    "
          },
          "PreferredAvailabilityZone": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The EC2 Availability Zone in which the cache cluster will be created.</p>\n        <p>All cache nodes belonging to a cache cluster are placed in the preferred availability\n            zone.</p>\n        <p>Default: System chosen availability zone.</p>\n    "
          },
          "PreferredMaintenanceWindow": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The weekly time range (in UTC) during which system maintenance can occur.</p>\n        <p>Example: <code>sun:05:00-sun:09:00</code>\n</p>\n    "
          },
          "Port": {
            "shape_name": "IntegerOptional",
            "type": "integer",
            "documentation": "\n        <p>The port number on which each of the cache nodes will accept connections.</p> \n    "
          },
          "NotificationTopicArn": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic to\n            which notifications will be sent.</p>\n        <note> The Amazon SNS topic owner must be the same as the cache cluster owner. </note>\n    "
          },
          "AutoMinorVersionUpgrade": {
            "shape_name": "BooleanOptional",
            "type": "boolean",
            "documentation": "\n        <p>Determines whether minor engine upgrades will be applied automatically to the cache\n            cluster during the maintenance window. A value of <code>true</code> allows these upgrades\n            to occur; <code>false</code> disables automatic upgrades.</p>\n        <p>Default: <code>true</code></p>\n    "
          }
        },
        "documentation": "\n        <p>Represents the input of a <i>CreateCacheCluster</i> operation.</p>\n    "
      },
      "output": {
        "shape_name": "CacheClusterWrapper",
        "type": "structure",
        "members": {
          "CacheCluster": {
            "shape_name": "CacheCluster",
            "type": "structure",
            "members": {
              "CacheClusterId": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The user-supplied identifier of the cache cluster. This is a unique key that identifies\n            a cache cluster.</p>\n    "
              },
              "ConfigurationEndpoint": {
                "shape_name": "Endpoint",
                "type": "structure",
                "members": {
                  "Address": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>The DNS hostname of the cache node.</p>\n    "
                  },
                  "Port": {
                    "shape_name": "Integer",
                    "type": "integer",
                    "documentation": "\n        <p>The port number that the cache engine is listening on.</p>\n    "
                  }
                },
                "documentation": "\n        <p>Represents the information required for client programs to connect to a cache node.</p>\n    "
              },
              "ClientDownloadLandingPage": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The URL of the web page where you can download the latest ElastiCache client library.</p>\n    "
              },
              "CacheNodeType": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The name of the compute and memory capacity node type for the cache cluster.</p>\n    "
              },
              "Engine": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The name of the cache engine (<i>memcached</i> or <i>redis</i>) to be used for this cache cluster.</p>\n    "
              },
              "EngineVersion": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The version of the cache engine version that is used in this cache cluster.</p>\n    "
              },
              "CacheClusterStatus": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The current state of this cache cluster - <i>creating</i>, <i>available</i>, etc.</p>\n    "
              },
              "NumCacheNodes": {
                "shape_name": "IntegerOptional",
                "type": "integer",
                "documentation": "\n        <p>The number of cache nodes in the cache cluster.</p>\n    "
              },
              "PreferredAvailabilityZone": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The name of the Availability Zone in which the cache cluster is located.</p>\n    "
              },
              "CacheClusterCreateTime": {
                "shape_name": "TStamp",
                "type": "timestamp",
                "documentation": "\n        <p>The date and time the cache cluster was created.</p>\n    "
              },
              "PreferredMaintenanceWindow": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The time range (in UTC) during which weekly system maintenance can occur.</p>\n    "
              },
              "PendingModifiedValues": {
                "shape_name": "PendingModifiedValues",
                "type": "structure",
                "members": {
                  "NumCacheNodes": {
                    "shape_name": "IntegerOptional",
                    "type": "integer",
                    "documentation": "\n        <p>The new number of cache nodes for the cache cluster.</p>\n    "
                  },
                  "CacheNodeIdsToRemove": {
                    "shape_name": "CacheNodeIdsList",
                    "type": "list",
                    "members": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "CacheNodeId"
                    },
                    "documentation": "\n        <p>A list of cache node IDs that are being removed (or will be removed) from the cache cluster. A node ID is a numeric identifier (0001, 0002, etc.).</p>\n    "
                  },
                  "EngineVersion": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>The new cache engine version that the cache cluster will run.</p>\n    "
                  }
                },
                "documentation": "\n        <p>A group of settings that will be applied to the cache cluster in the future, or that are currently being applied.</p>\n    "
              },
              "NotificationConfiguration": {
                "shape_name": "NotificationConfiguration",
                "type": "structure",
                "members": {
                  "TopicArn": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>The Amazon Resource Name (ARN) that identifies the topic.</p>\n    "
                  },
                  "TopicStatus": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>The current state of the topic.</p>\n    "
                  }
                },
                "documentation": "\n        <p>Describes a notification topic and its status. Notification topics are used for publishing ElastiCache events to subscribers using Amazon Simple Notification Service (SNS).</p>\n    "
              },
              "CacheSecurityGroups": {
                "shape_name": "CacheSecurityGroupMembershipList",
                "type": "list",
                "members": {
                  "shape_name": "CacheSecurityGroupMembership",
                  "type": "structure",
                  "members": {
                    "CacheSecurityGroupName": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The name of the cache security group.</p>\n    "
                    },
                    "Status": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The membership status in the cache security group. The status changes when a cache\n            security group is modified, or when the cache security groups assigned to a cache\n            cluster are modified.</p>\n    "
                    }
                  },
                  "documentation": "\n        <p>Represents a cache cluster's status within a particular cache security group.</p>\n    ",
                  "xmlname": "CacheSecurityGroup"
                },
                "documentation": "\n        <p>A list of cache security group elements, composed of name and status sub-elements.</p>\n    "
              },
              "CacheParameterGroup": {
                "shape_name": "CacheParameterGroupStatus",
                "type": "structure",
                "members": {
                  "CacheParameterGroupName": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>The name of the cache parameter group.</p>\n    "
                  },
                  "ParameterApplyStatus": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>The status of parameter updates.</p>\n    "
                  },
                  "CacheNodeIdsToReboot": {
                    "shape_name": "CacheNodeIdsList",
                    "type": "list",
                    "members": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "CacheNodeId"
                    },
                    "documentation": "\n        <p>A list of the cache node IDs which need to be rebooted for parameter changes to be\n            applied. A node ID is a numeric identifier (0001, 0002, etc.).</p>\n    "
                  }
                },
                "documentation": "\n        <p>The status of the cache parameter group.</p>\n    "
              },
              "CacheSubnetGroupName": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The name of the cache subnet group associated with the cache cluster.</p>\n    "
              },
              "CacheNodes": {
                "shape_name": "CacheNodeList",
                "type": "list",
                "members": {
                  "shape_name": "CacheNode",
                  "type": "structure",
                  "members": {
                    "CacheNodeId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The cache node identifier. A node ID is a numeric identifier (0001, 0002, etc.). The\n            combination of cluster ID and node ID uniquely identifies every cache node used in a\n            customer's AWS account.</p>\n    "
                    },
                    "CacheNodeStatus": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The current state of this cache node.</p>\n    "
                    },
                    "CacheNodeCreateTime": {
                      "shape_name": "TStamp",
                      "type": "timestamp",
                      "documentation": "\n        <p>The date and time the cache node was created.</p>\n    "
                    },
                    "Endpoint": {
                      "shape_name": "Endpoint",
                      "type": "structure",
                      "members": {
                        "Address": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": "\n        <p>The DNS hostname of the cache node.</p>\n    "
                        },
                        "Port": {
                          "shape_name": "Integer",
                          "type": "integer",
                          "documentation": "\n        <p>The port number that the cache engine is listening on.</p>\n    "
                        }
                      },
                      "documentation": "\n        <p>The hostname and IP address for connecting to this cache node.</p>\n    "
                    },
                    "ParameterGroupStatus": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The status of the parameter group applied to this cache node.</p>\n    "
                    },
                    "SourceCacheNodeId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The ID of the primary node to which this read replica node is synchronized. If this field is empty, then this\n            node is not associated with a primary cache cluster.</p>      \n    "
                    }
                  },
                  "documentation": "\n        <p>Represents an individual cache node within a cache cluster. Each cache node runs its own\n            instance of the cluster's protocol-compliant caching software - either Memcached or\n            Redis.</p>\n    ",
                  "xmlname": "CacheNode"
                },
                "documentation": "\n        <p>A list of cache nodes that are members of the cache cluster.</p>\n    "
              },
              "AutoMinorVersionUpgrade": {
                "shape_name": "Boolean",
                "type": "boolean",
                "documentation": "\n        <p>If <code>true</code>, then minor version patches are applied automatically; if\n                <code>false</code>, then automatic minor version patches are disabled.</p>\n    "
              },
              "SecurityGroups": {
                "shape_name": "SecurityGroupMembershipList",
                "type": "list",
                "members": {
                  "shape_name": "SecurityGroupMembership",
                  "type": "structure",
                  "members": {
                    "SecurityGroupId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The identifier of the cache security group.</p>\n    "
                    },
                    "Status": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The status of the cache security group membership. The status changes whenever a cache\n            security group is modified, or when the cache security groups assigned to a cache\n            cluster are modified.</p>\n    "
                    }
                  },
                  "documentation": "\n        <p>Represents a single cache security group and its status..</p>\n    "
                },
                "documentation": "\n        <p>A list of VPC Security Groups associated with the cache cluster.</p>\n    "
              },
              "ReplicationGroupId": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The replication group to which this cache cluster belongs. If this field is empty, the\n            cache cluster is not associated with any replication group.</p>        \n    "
              }
            },
            "wrapper": true,
            "documentation": "\n        <p>Contains all of the attributes of a specific cache cluster.</p>\n    "
          }
        }
      },
      "errors": [
        {
          "shape_name": "ReplicationGroupNotFoundFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The specified replication group does not exist.</p>\n    "
        },
        {
          "shape_name": "InvalidReplicationGroupStateFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The requested replication group is not in the <i>available</i> state.</p>        \n    "
        },
        {
          "shape_name": "CacheClusterAlreadyExistsFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>This user already has a cache cluster with the given identifier.</p>\n    "
        },
        {
          "shape_name": "InsufficientCacheClusterCapacityFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The requested cache node type is not available in the specified Availability Zone.</p>\n    "
        },
        {
          "shape_name": "CacheSecurityGroupNotFoundFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>\n            The requested cache security group name does not refer to an existing cache security group.</p>\n    "
        },
        {
          "shape_name": "CacheSubnetGroupNotFoundFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The requested cache subnet group name does not refer to an existing cache subnet group.</p>\n    "
        },
        {
          "shape_name": "ClusterQuotaForCustomerExceededFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The request cannot be processed because it would exceed the allowed number of cache clusters per\n            customer.</p>\n    "
        },
        {
          "shape_name": "NodeQuotaForClusterExceededFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The request cannot be processed because it would exceed the allowed\n            number of cache nodes in a single cache cluster.</p>\n    "
        },
        {
          "shape_name": "NodeQuotaForCustomerExceededFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The request cannot be processed because it would exceed the allowed number of cache nodes per customer.\n</p>\n    "
        },
        {
          "shape_name": "CacheParameterGroupNotFoundFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>\n            The requested cache parameter group name does not refer to an existing cache parameter group.</p>\n    "
        },
        {
          "shape_name": "InvalidVPCNetworkStateFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The VPC network is in an invalid state.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterValueException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>A parameter value is invalid.</p>\n    "
            }
          },
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterCombinationException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>Two or more parameters that must not be used together were used together.</p>\n    "
            }
          },
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n    "
        }
      ],
      "documentation": "\n        <p>The <i>CreateCacheCluster</i> operation creates a new cache cluster. All nodes in the cache cluster run the same protocol-compliant cache engine software - either Memcached or Redis.</p>\n        <examples>\n            <queryrequest>\nhttps://elasticache.us-east-1.amazonaws.com/\n   ?Action=CreateCacheCluster\n   &NumCacheNodes=3\n   &CacheClusterId=mycache\n   &Engine=memcached\n   &CacheSecurityGroupNames.member.1=default\n   &CacheNodeType=cache.m1.large\n   &Version=2013-06-15\n   &SignatureVersion=2\n   &SignatureMethod=HmacSHA256\n   &Timestamp=2011-07-27T00%3A33%3A09.322Z\n   &AWSAccessKeyId=YOUR-ACCESS-KEY\n   &Signature=YOUR-SIGNATURE</queryrequest>\n            <queryresponse>\n<CreateCacheClusterResponse xmlns=\"http://elasticache.amazonaws.com/doc/2013-06-15/\">\n    <CreateCacheClusterResult>\n        <CacheCluster>\n            <CacheClusterStatus>creating</CacheClusterStatus>\n            <NumCacheNodes>3</NumCacheNodes>\n            <Engine>memcached</Engine>\n            <PendingModifiedValues/>\n            <EngineVersion>1.4.5</EngineVersion>\n            <AutoMinorVersionUpgrade>true</AutoMinorVersionUpgrade>\n            <PreferredMaintenanceWindow>sun:08:00-sun:09:00</PreferredMaintenanceWindow>\n                <CacheNodeType>cache.m1.large</CacheNodeType>\n                <CacheSecurityGroups>\n                    <CacheSecurityGroup>\n                        <CacheSecurityGroupName>default</CacheSecurityGroupName>\n                        <Status>active</Status>\n                    </CacheSecurityGroup>\n                </CacheSecurityGroups>\n                <CacheClusterId>mycache</CacheClusterId>\n        </CacheCluster>\n    </CreateCacheClusterResult>\n    <ResponseMetadata>\n        <RequestId>aaf2e796-363f-11e0-a564-8f11342c56b0</RequestId>\n    </ResponseMetadata>\n</CreateCacheClusterResponse>\n            </queryresponse>\n        </examples>\n    "
    },
    "CreateCacheParameterGroup": {
      "name": "CreateCacheParameterGroup",
      "input": {
        "shape_name": "CreateCacheParameterGroupMessage",
        "type": "structure",
        "members": {
          "CacheParameterGroupName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>A user-specified name for the cache parameter group.</p>\n    ",
            "required": true
          },
          "CacheParameterGroupFamily": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The name of the cache parameter group family the cache parameter group can be used with.</p>\n        <p>Valid values are: <code>memcached1.4</code> | <code>redis2.6</code></p>\n    ",
            "required": true
          },
          "Description": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>A user-specified description for the cache parameter group.</p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>Represents the input of a <i>CreateCacheParameterGroup</i> operation.</p>\n    "
      },
      "output": {
        "shape_name": "CacheParameterGroupWrapper",
        "type": "structure",
        "members": {
          "CacheParameterGroup": {
            "shape_name": "CacheParameterGroup",
            "type": "structure",
            "members": {
              "CacheParameterGroupName": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The name of the cache parameter group.</p>\n    "
              },
              "CacheParameterGroupFamily": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The name of the cache parameter group family that this cache parameter group is\n            compatible with.</p>\n    "
              },
              "Description": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The description for this cache parameter group.</p>\n    "
              }
            },
            "wrapper": true,
            "documentation": "\n        <p>Represents the output of a <i>CreateCacheParameterGroup</i> operation.</p>\n    "
          }
        }
      },
      "errors": [
        {
          "shape_name": "CacheParameterGroupQuotaExceededFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The request cannot be processed because it would exceed the maximum number of cache\n            security groups.</p>\n    "
        },
        {
          "shape_name": "CacheParameterGroupAlreadyExistsFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>A cache parameter group with the requested name already\n            exists.</p>\n    "
        },
        {
          "shape_name": "InvalidCacheParameterGroupStateFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The current state of the cache parameter group does not allow the requested action to\n            occur. </p>\n    "
        },
        {
          "shape_name": "InvalidParameterValueException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>A parameter value is invalid.</p>\n    "
            }
          },
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterCombinationException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>Two or more parameters that must not be used together were used together.</p>\n    "
            }
          },
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n    "
        }
      ],
      "documentation": "\n        <p>The <i>CreateCacheParameterGroup</i> operation creates a new cache parameter group. A cache parameter group is a collection of parameters that you apply to all of the nodes in a cache cluster.</p>\n        <examples>\n            <queryrequest>\nhttps://elasticache.us-east-1.amazonaws.com/\n   ?Action=CreateCacheParameterGroup\n   &Description=My%20first%20cache%20parameter%20group\n   &CacheParameterGroupFamily=memcached1.4\n   &CacheParameterGroupName=mycacheparametergroup1\n   &Version=2013-06-15\n   &SignatureVersion=2\n   &SignatureMethod=HmacSHA256\n   &Timestamp=2011-07-27T02%3A34%3A47.462Z\n   &AWSAccessKeyId=YOUR-ACCESS-KEY\n   &Signature=YOUR-SIGNATURE\n            </queryrequest>\n            <queryresponse>\n<CreateCacheParameterGroupResponse xmlns=\"http://elasticache.amazonaws.com/doc/2013-06-15/\">\n  <CreateCacheParameterGroupResult>\n    <CacheParameterGroup>\n      <CacheParameterGroupName>mycacheparametergroup3</CacheParameterGroupName>\n      <CacheParameterGroupFamily>memcached1.4</CacheParameterGroupFamily>\n      <Description>My first cache parameter group</Description>\n    </CacheParameterGroup>\n  </CreateCacheParameterGroupResult>\n  <ResponseMetadata>\n    <RequestId>05699541-b7f9-11e0-9326-b7275b9d4a6c</RequestId>\n  </ResponseMetadata>\n</CreateCacheParameterGroupResponse>\n            \n            </queryresponse>\n        </examples>\n    "
    },
    "CreateCacheSecurityGroup": {
      "name": "CreateCacheSecurityGroup",
      "input": {
        "shape_name": "CreateCacheSecurityGroupMessage",
        "type": "structure",
        "members": {
          "CacheSecurityGroupName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>A name for the cache security group. This value is stored as a lowercase string.</p>\n        <p>Constraints: Must contain no more than 255 alphanumeric characters. Must not be the word \"Default\".</p>\n        <p>Example: <code>mysecuritygroup</code></p>\n    ",
            "required": true
          },
          "Description": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>A description for the cache security group.</p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>Represents the input of a <i>CreateCacheSecurityGroup</i> operation.</p>\n    "
      },
      "output": {
        "shape_name": "CacheSecurityGroupWrapper",
        "type": "structure",
        "members": {
          "CacheSecurityGroup": {
            "shape_name": "CacheSecurityGroup",
            "type": "structure",
            "members": {
              "OwnerId": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The AWS account ID of the cache security group owner.</p>\n    "
              },
              "CacheSecurityGroupName": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The name of the cache security group.</p>\n    "
              },
              "Description": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The description of the cache security group.</p>\n    "
              },
              "EC2SecurityGroups": {
                "shape_name": "EC2SecurityGroupList",
                "type": "list",
                "members": {
                  "shape_name": "EC2SecurityGroup",
                  "type": "structure",
                  "members": {
                    "Status": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The status of the Amazon EC2 security group.</p>\n    "
                    },
                    "EC2SecurityGroupName": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The name of the Amazon EC2 security group.</p>\n    "
                    },
                    "EC2SecurityGroupOwnerId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n       <p>The AWS account ID of the Amazon EC2 security group owner.</p>\n    "
                    }
                  },
                  "documentation": "\n        <p>Provides ownership and status information for an Amazon EC2 security group.</p>\n    ",
                  "xmlname": "EC2SecurityGroup"
                },
                "documentation": "\n        <p>A list of Amazon EC2 security groups that are associated with this cache security group.</p>\n    "
              }
            },
            "wrapper": true,
            "documentation": "\n        <p>Represents the output of one of the following operations:</p>\n        <ul>\n            <li>\n                <i>AuthorizeCacheSecurityGroupIngress</i>\n            </li>\n            <li>\n                <i>CreateCacheSecurityGroup</i>\n            </li>\n            <li>\n                <i>RevokeCacheSecurityGroupIngress</i>\n            </li>\n        </ul>\n    "
          }
        }
      },
      "errors": [
        {
          "shape_name": "CacheSecurityGroupAlreadyExistsFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>A cache security group with the specified name already exists.</p>\n    "
        },
        {
          "shape_name": "CacheSecurityGroupQuotaExceededFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The request cannot be processed because it would exceed the allowed number of cache\n            security groups.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterValueException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>A parameter value is invalid.</p>\n    "
            }
          },
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterCombinationException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>Two or more parameters that must not be used together were used together.</p>\n    "
            }
          },
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n    "
        }
      ],
      "documentation": "\n        <p>The <i>CreateCacheSecurityGroup</i> operation creates a new cache security group. Use a\n            cache security group to control access to one or more cache clusters.</p>\n        <p>Cache security groups are only used when you are creating a cluster outside of an\n            Amazon Virtual Private Cloud (VPC). If you are creating a cluster inside of a VPC, use a\n            cache subnet group instead. For more information, see <i>CreateCacheSubnetGroup</i>.</p>\n        <examples>\n            <queryrequest>\nhttps://elasticache.us-east-1.amazonaws.com/\n   ?Action=CreateCacheSecurityGroup\n   &CacheSecurityGroupName=mycachesecuritygroup\n   &Description=My%20cache%20security%20group\n   &Version=2013-06-15\n   &SignatureVersion=2\n   &SignatureMethod=HmacSHA256\n   &Timestamp=2011-07-27T02%3A43%3A10.703Z\n   &AWSAccessKeyId=YOUR-ACCESS-KEY\n   &Signature=YOUR-SIGNATURE</queryrequest>\n            <queryresponse>\n<CreateCacheSecurityGroupResponse xmlns=\"http://elasticache.amazonaws.com/doc/2013-06-15/\">\n  <CreateCacheSecurityGroupResult>\n    <CacheSecurityGroup>\n      <EC2SecurityGroups/>\n      <CacheSecurityGroupName>mycachesecuritygroup</CacheSecurityGroupName>\n      <OwnerId>123456789012</OwnerId>\n      <Description>My cache security group</Description>\n    </CacheSecurityGroup>\n  </CreateCacheSecurityGroupResult>\n  <ResponseMetadata>\n    <RequestId>2b1c8035-b7fa-11e0-9326-b7275b9d4a6c</RequestId>\n  </ResponseMetadata>\n</CreateCacheSecurityGroupResponse>\n\n            </queryresponse>\n        </examples>\n    "
    },
    "CreateCacheSubnetGroup": {
      "name": "CreateCacheSubnetGroup",
      "input": {
        "shape_name": "CreateCacheSubnetGroupMessage",
        "type": "structure",
        "members": {
          "CacheSubnetGroupName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>A name for the cache subnet group. This value is stored as a lowercase string.</p>\n        <p>Constraints: Must contain no more than 255 alphanumeric characters or hyphens.</p>\n        <p>Example: <code>mysubnetgroup</code></p>\n    ",
            "required": true
          },
          "CacheSubnetGroupDescription": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>A description for the cache subnet group.</p>\n    ",
            "required": true
          },
          "SubnetIds": {
            "shape_name": "SubnetIdentifierList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "SubnetIdentifier"
            },
            "documentation": "\n        <p>A list of VPC subnet IDs for the cache subnet group.</p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>Represents the input of a <i>CreateCacheSubnetGroup</i> operation.</p>\n    "
      },
      "output": {
        "shape_name": "CacheSubnetGroupWrapper",
        "type": "structure",
        "members": {
          "CacheSubnetGroup": {
            "shape_name": "CacheSubnetGroup",
            "type": "structure",
            "members": {
              "CacheSubnetGroupName": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The name of the cache subnet group.</p>\n    "
              },
              "CacheSubnetGroupDescription": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The description of the cache subnet group.</p>\n    "
              },
              "VpcId": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The Amazon Virtual Private Cloud identifier (VPC ID) of the cache subnet group.</p>\n    "
              },
              "Subnets": {
                "shape_name": "SubnetList",
                "type": "list",
                "members": {
                  "shape_name": "Subnet",
                  "type": "structure",
                  "members": {
                    "SubnetIdentifier": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The unique identifier for the subnet</p>\n    "
                    },
                    "SubnetAvailabilityZone": {
                      "shape_name": "AvailabilityZone",
                      "type": "structure",
                      "members": {
                        "Name": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": "\n        <p>The name of the availability zone.</p>\n    "
                        }
                      },
                      "wrapper": true,
                      "documentation": "\n        <p>The Availability Zone associated with the subnet</p>\n    "
                    }
                  },
                  "documentation": "\n        <p>Represents the subnet associated with a cache cluster. This parameter refers to subnets defined in Amazon Virtual Private Cloud (Amazon VPC) and used with ElastiCache.</p>\n    ",
                  "xmlname": "Subnet"
                },
                "documentation": "\n        <p>A list of subnets associated with the cache subnet group.</p>\n    "
              }
            },
            "wrapper": true,
            "documentation": "\n        <p>Represents the output of one of the following operations:</p>\n        <ul>\n            <li>\n                <i>CreateCacheSubnetGroup</i>\n            </li>\n            <li>\n                <i>ModifyCacheSubnetGroup</i>\n            </li>\n        </ul>\n    "
          }
        }
      },
      "errors": [
        {
          "shape_name": "CacheSubnetGroupAlreadyExistsFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p> The requested cache subnet group name is already in use by an existing cache subnet\n            group.</p>\n    "
        },
        {
          "shape_name": "CacheSubnetGroupQuotaExceededFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The request cannot be processed because it would exceed the allowed number of cache subnet groups.</p>\n    "
        },
        {
          "shape_name": "CacheSubnetQuotaExceededFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The request cannot be processed because it would exceed the allowed number of subnets in a cache subnet\n            group.</p>\n    "
        },
        {
          "shape_name": "InvalidSubnet",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>An invalid subnet identifier was specified.</p>\n    "
        }
      ],
      "documentation": "\n        <p>The <i>CreateCacheSubnetGroup</i> operation creates a new cache subnet group.</p>\n        <p>Use this parameter only when you are creating a cluster in an Amazon Virtual Private Cloud (VPC).</p>\n        <examples>\n            <queryrequest>https://elasticache.amazonaws.com/\n    ?Action=CreateCacheSubnetGroup\n    &CacheSubnetGroupName=myCachesubnetgroup\n    &CacheSubnetGroupDescription=My%20new%20CacheSubnetGroup\n    &Version=2013-06-15\n    &SignatureVersion=2\n    &SignatureMethod=HmacSHA256\n    &Timestamp=2011-02-15T18%3A14%3A49.482Z\n    &AWSAccessKeyId=<AWS Access Key ID>\n    &Signature=<Signature></queryrequest>\n            <queryresponse><CreateCacheSubnetGroupResponse xmlns=\"http://elasticache.amazonaws.com/doc/2013-06-15/\">\n    <CreateCacheSubnetGroupResult>\n            <CacheSubnetGroup>\n                <VpcId>990524496922</VpcId>\n                <CacheSubnetGroupDescription>My new CacheSubnetGroup</CacheSubnetGroupDescription>\n                <CacheSubnetGroupName>myCachesubnetgroup</CacheSubnetGroupName>\n                <Subnets>\n                    <Subnet>\n                        <SubnetStatus>Active</SubnetStatus>\n                        <SubnetIdentifier>subnet-7c5b4115</SubnetIdentifier>\n                        <SubnetAvailabilityZone>\n                            <Name>us-east-1c</Name>\n                        </SubnetAvailabilityZone>\n                    </Subnet>\n                    <Subnet>\n                        <SubnetStatus>Active</SubnetStatus>\n                        <SubnetIdentifier>subnet-7b5b4112</SubnetIdentifier>\n                        <SubnetAvailabilityZone>\n                            <Name>us-east-1b</Name>\n                        </SubnetAvailabilityZone>\n                    </Subnet>\n                    <Subnet>\n                        <SubnetStatus>Active</SubnetStatus>\n                        <SubnetIdentifier>subnet-3ea6bd57</SubnetIdentifier>\n                        <SubnetAvailabilityZone>\n                            <Name>us-east-1d</Name>\n                        </SubnetAvailabilityZone>\n                    </Subnet>\n                </Subnets>\n            </CacheSubnetGroup>\n        </CreateCacheSubnetGroupResult>\n        <ResponseMetadata>\n            <RequestId>ed662948-a57b-11df-9e38-7ffab86c801f</RequestId>\n        </ResponseMetadata>\n    </CreateCacheSubnetGroupResponse></queryresponse>\n        </examples>\n    "
    },
    "CreateReplicationGroup": {
      "name": "CreateReplicationGroup",
      "input": {
        "shape_name": "CreateReplicationGroupMessage",
        "type": "structure",
        "members": {
          "ReplicationGroupId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The replication group identifier. This parameter is stored as a lowercase string.</p>\n        \n<p>Constraints:</p>\n<ul>\n<li>Must contain from 1 to 20 alphanumeric characters or hyphens.</li>\n<li>First character must be a letter.</li>\n<li>Cannot end with a hyphen or contain two consecutive hyphens.</li>\n</ul>\n\n    ",
            "required": true
          },
          "PrimaryClusterId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The identifier of the cache cluster that will serve as the primary for this replication group. This cache cluster must already exist and have a status of \n            <i>available</i>.</p>\n    ",
            "required": true
          },
          "ReplicationGroupDescription": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>A user-specified description for the replication group.</p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>Represents the input of a <i>CreateReplicationGroup</i> operation.</p>\n    "
      },
      "output": {
        "shape_name": "ReplicationGroupWrapper",
        "type": "structure",
        "members": {
          "ReplicationGroup": {
            "shape_name": "ReplicationGroup",
            "type": "structure",
            "members": {
              "ReplicationGroupId": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The identifier for the replication group.</p>        \n    "
              },
              "Description": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The description of the replication group.</p>        \n    "
              },
              "Status": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The current state of this replication group - <i>creating</i>, <i>available</i>, etc.</p>\n    "
              },
              "PendingModifiedValues": {
                "shape_name": "ReplicationGroupPendingModifiedValues",
                "type": "structure",
                "members": {
                  "PrimaryClusterId": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>The primary cluster ID which will be applied immediately (if <code>--apply-immediately</code> was specified), or during\n            the next maintenance window.</p>\n    "
                  }
                },
                "documentation": "\n        <p>A group of settings to be applied to the replication group, either immediately or during the next maintenance window.</p>\n    "
              },
              "MemberClusters": {
                "shape_name": "ClusterIdList",
                "type": "list",
                "members": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "ClusterId"
                },
                "documentation": "\n        <p>The names of all the cache clusters that are part of this replication group.</p>        \n    "
              },
              "NodeGroups": {
                "shape_name": "NodeGroupList",
                "type": "list",
                "members": {
                  "shape_name": "NodeGroup",
                  "type": "structure",
                  "members": {
                    "NodeGroupId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The identifier for the node group. A replication group contains only one node group; therefore, the node group ID is 0001.</p>\n    "
                    },
                    "Status": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The current state of this replication group - <i>creating</i>, <i>available</i>, etc.</p>\n    "
                    },
                    "PrimaryEndpoint": {
                      "shape_name": "Endpoint",
                      "type": "structure",
                      "members": {
                        "Address": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": "\n        <p>The DNS hostname of the cache node.</p>\n    "
                        },
                        "Port": {
                          "shape_name": "Integer",
                          "type": "integer",
                          "documentation": "\n        <p>The port number that the cache engine is listening on.</p>\n    "
                        }
                      },
                      "documentation": "\n        <p>Represents the information required for client programs to connect to a cache node.</p>\n    "
                    },
                    "NodeGroupMembers": {
                      "shape_name": "NodeGroupMemberList",
                      "type": "list",
                      "members": {
                        "shape_name": "NodeGroupMember",
                        "type": "structure",
                        "members": {
                          "CacheClusterId": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "\n        <p>The ID of the cache cluster to which the node belongs.</p>        \n    "
                          },
                          "CacheNodeId": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "\n        <p>The ID of the node within its cache cluster. A node ID is a numeric identifier (0001, 0002, etc.).</p>        \n    "
                          },
                          "ReadEndpoint": {
                            "shape_name": "Endpoint",
                            "type": "structure",
                            "members": {
                              "Address": {
                                "shape_name": "String",
                                "type": "string",
                                "documentation": "\n        <p>The DNS hostname of the cache node.</p>\n    "
                              },
                              "Port": {
                                "shape_name": "Integer",
                                "type": "integer",
                                "documentation": "\n        <p>The port number that the cache engine is listening on.</p>\n    "
                              }
                            },
                            "documentation": "\n        <p>Represents the information required for client programs to connect to a cache node.</p>\n    "
                          },
                          "PreferredAvailabilityZone": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "\n        <p>The name of the Availability Zone in which the node is located.</p>\n    "
                          },
                          "CurrentRole": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "\n        <p>The role that is currently assigned to the node - <i>primary</i> or <i>replica</i>.</p>        \n    "
                          }
                        },
                        "documentation": "\n        <p>Represents a single node within a node group.</p>\n    ",
                        "xmlname": "NodeGroupMember"
                      },
                      "documentation": "\n        <p>A list containing information about individual nodes within the node group.</p>        \n    "
                    }
                  },
                  "documentation": "\n        <p>Represents a collection of cache nodes in a replication group.</p>\n    ",
                  "xmlname": "NodeGroup"
                },
                "documentation": "\n        <p>A single element list with information about the nodes in the replication group.</p>\n    "
              }
            },
            "wrapper": true,
            "documentation": "\n        <p>Contains all of the attributes of a specific replication group.</p>\n    "
          }
        }
      },
      "errors": [
        {
          "shape_name": "CacheClusterNotFoundFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The requested cache cluster ID does not refer to an existing cache cluster.</p>\n    "
        },
        {
          "shape_name": "InvalidCacheClusterStateFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The requested cache cluster is not in the <i>available</i> state.</p>\n    "
        },
        {
          "shape_name": "ReplicationGroupAlreadyExistsFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The specified replication group already exists.</p>        \n    "
        },
        {
          "shape_name": "InvalidParameterValueException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>A parameter value is invalid.</p>\n    "
            }
          },
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterCombinationException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>Two or more parameters that must not be used together were used together.</p>\n    "
            }
          },
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n    "
        }
      ],
      "documentation": "\n        <p>The <i>CreateReplicationGroup</i> operation creates a replication group. A replication\n            group is a collection of cache clusters, where one of the clusters is a\n            read/write primary and the other clusters are read-only replicas. Writes to the primary are\n            automatically propagated to the replicas.</p>\n        <p>When you create a replication group, you must specify an existing cache cluster that is\n            in the primary role. When the replication group has been successfully created, you can\n            add one or more read replica replicas to it, up to a total of five read replicas.</p>\n    "
    },
    "DeleteCacheCluster": {
      "name": "DeleteCacheCluster",
      "input": {
        "shape_name": "DeleteCacheClusterMessage",
        "type": "structure",
        "members": {
          "CacheClusterId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The cache cluster identifier for the cluster to be deleted. This parameter is not case\n            sensitive.</p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>Represents the input of a <i>DeleteCacheCluster</i> operation.</p>\n    "
      },
      "output": {
        "shape_name": "CacheClusterWrapper",
        "type": "structure",
        "members": {
          "CacheCluster": {
            "shape_name": "CacheCluster",
            "type": "structure",
            "members": {
              "CacheClusterId": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The user-supplied identifier of the cache cluster. This is a unique key that identifies\n            a cache cluster.</p>\n    "
              },
              "ConfigurationEndpoint": {
                "shape_name": "Endpoint",
                "type": "structure",
                "members": {
                  "Address": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>The DNS hostname of the cache node.</p>\n    "
                  },
                  "Port": {
                    "shape_name": "Integer",
                    "type": "integer",
                    "documentation": "\n        <p>The port number that the cache engine is listening on.</p>\n    "
                  }
                },
                "documentation": "\n        <p>Represents the information required for client programs to connect to a cache node.</p>\n    "
              },
              "ClientDownloadLandingPage": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The URL of the web page where you can download the latest ElastiCache client library.</p>\n    "
              },
              "CacheNodeType": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The name of the compute and memory capacity node type for the cache cluster.</p>\n    "
              },
              "Engine": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The name of the cache engine (<i>memcached</i> or <i>redis</i>) to be used for this cache cluster.</p>\n    "
              },
              "EngineVersion": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The version of the cache engine version that is used in this cache cluster.</p>\n    "
              },
              "CacheClusterStatus": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The current state of this cache cluster - <i>creating</i>, <i>available</i>, etc.</p>\n    "
              },
              "NumCacheNodes": {
                "shape_name": "IntegerOptional",
                "type": "integer",
                "documentation": "\n        <p>The number of cache nodes in the cache cluster.</p>\n    "
              },
              "PreferredAvailabilityZone": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The name of the Availability Zone in which the cache cluster is located.</p>\n    "
              },
              "CacheClusterCreateTime": {
                "shape_name": "TStamp",
                "type": "timestamp",
                "documentation": "\n        <p>The date and time the cache cluster was created.</p>\n    "
              },
              "PreferredMaintenanceWindow": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The time range (in UTC) during which weekly system maintenance can occur.</p>\n    "
              },
              "PendingModifiedValues": {
                "shape_name": "PendingModifiedValues",
                "type": "structure",
                "members": {
                  "NumCacheNodes": {
                    "shape_name": "IntegerOptional",
                    "type": "integer",
                    "documentation": "\n        <p>The new number of cache nodes for the cache cluster.</p>\n    "
                  },
                  "CacheNodeIdsToRemove": {
                    "shape_name": "CacheNodeIdsList",
                    "type": "list",
                    "members": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "CacheNodeId"
                    },
                    "documentation": "\n        <p>A list of cache node IDs that are being removed (or will be removed) from the cache cluster. A node ID is a numeric identifier (0001, 0002, etc.).</p>\n    "
                  },
                  "EngineVersion": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>The new cache engine version that the cache cluster will run.</p>\n    "
                  }
                },
                "documentation": "\n        <p>A group of settings that will be applied to the cache cluster in the future, or that are currently being applied.</p>\n    "
              },
              "NotificationConfiguration": {
                "shape_name": "NotificationConfiguration",
                "type": "structure",
                "members": {
                  "TopicArn": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>The Amazon Resource Name (ARN) that identifies the topic.</p>\n    "
                  },
                  "TopicStatus": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>The current state of the topic.</p>\n    "
                  }
                },
                "documentation": "\n        <p>Describes a notification topic and its status. Notification topics are used for publishing ElastiCache events to subscribers using Amazon Simple Notification Service (SNS).</p>\n    "
              },
              "CacheSecurityGroups": {
                "shape_name": "CacheSecurityGroupMembershipList",
                "type": "list",
                "members": {
                  "shape_name": "CacheSecurityGroupMembership",
                  "type": "structure",
                  "members": {
                    "CacheSecurityGroupName": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The name of the cache security group.</p>\n    "
                    },
                    "Status": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The membership status in the cache security group. The status changes when a cache\n            security group is modified, or when the cache security groups assigned to a cache\n            cluster are modified.</p>\n    "
                    }
                  },
                  "documentation": "\n        <p>Represents a cache cluster's status within a particular cache security group.</p>\n    ",
                  "xmlname": "CacheSecurityGroup"
                },
                "documentation": "\n        <p>A list of cache security group elements, composed of name and status sub-elements.</p>\n    "
              },
              "CacheParameterGroup": {
                "shape_name": "CacheParameterGroupStatus",
                "type": "structure",
                "members": {
                  "CacheParameterGroupName": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>The name of the cache parameter group.</p>\n    "
                  },
                  "ParameterApplyStatus": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>The status of parameter updates.</p>\n    "
                  },
                  "CacheNodeIdsToReboot": {
                    "shape_name": "CacheNodeIdsList",
                    "type": "list",
                    "members": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "CacheNodeId"
                    },
                    "documentation": "\n        <p>A list of the cache node IDs which need to be rebooted for parameter changes to be\n            applied. A node ID is a numeric identifier (0001, 0002, etc.).</p>\n    "
                  }
                },
                "documentation": "\n        <p>The status of the cache parameter group.</p>\n    "
              },
              "CacheSubnetGroupName": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The name of the cache subnet group associated with the cache cluster.</p>\n    "
              },
              "CacheNodes": {
                "shape_name": "CacheNodeList",
                "type": "list",
                "members": {
                  "shape_name": "CacheNode",
                  "type": "structure",
                  "members": {
                    "CacheNodeId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The cache node identifier. A node ID is a numeric identifier (0001, 0002, etc.). The\n            combination of cluster ID and node ID uniquely identifies every cache node used in a\n            customer's AWS account.</p>\n    "
                    },
                    "CacheNodeStatus": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The current state of this cache node.</p>\n    "
                    },
                    "CacheNodeCreateTime": {
                      "shape_name": "TStamp",
                      "type": "timestamp",
                      "documentation": "\n        <p>The date and time the cache node was created.</p>\n    "
                    },
                    "Endpoint": {
                      "shape_name": "Endpoint",
                      "type": "structure",
                      "members": {
                        "Address": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": "\n        <p>The DNS hostname of the cache node.</p>\n    "
                        },
                        "Port": {
                          "shape_name": "Integer",
                          "type": "integer",
                          "documentation": "\n        <p>The port number that the cache engine is listening on.</p>\n    "
                        }
                      },
                      "documentation": "\n        <p>The hostname and IP address for connecting to this cache node.</p>\n    "
                    },
                    "ParameterGroupStatus": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The status of the parameter group applied to this cache node.</p>\n    "
                    },
                    "SourceCacheNodeId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The ID of the primary node to which this read replica node is synchronized. If this field is empty, then this\n            node is not associated with a primary cache cluster.</p>      \n    "
                    }
                  },
                  "documentation": "\n        <p>Represents an individual cache node within a cache cluster. Each cache node runs its own\n            instance of the cluster's protocol-compliant caching software - either Memcached or\n            Redis.</p>\n    ",
                  "xmlname": "CacheNode"
                },
                "documentation": "\n        <p>A list of cache nodes that are members of the cache cluster.</p>\n    "
              },
              "AutoMinorVersionUpgrade": {
                "shape_name": "Boolean",
                "type": "boolean",
                "documentation": "\n        <p>If <code>true</code>, then minor version patches are applied automatically; if\n                <code>false</code>, then automatic minor version patches are disabled.</p>\n    "
              },
              "SecurityGroups": {
                "shape_name": "SecurityGroupMembershipList",
                "type": "list",
                "members": {
                  "shape_name": "SecurityGroupMembership",
                  "type": "structure",
                  "members": {
                    "SecurityGroupId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The identifier of the cache security group.</p>\n    "
                    },
                    "Status": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The status of the cache security group membership. The status changes whenever a cache\n            security group is modified, or when the cache security groups assigned to a cache\n            cluster are modified.</p>\n    "
                    }
                  },
                  "documentation": "\n        <p>Represents a single cache security group and its status..</p>\n    "
                },
                "documentation": "\n        <p>A list of VPC Security Groups associated with the cache cluster.</p>\n    "
              },
              "ReplicationGroupId": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The replication group to which this cache cluster belongs. If this field is empty, the\n            cache cluster is not associated with any replication group.</p>        \n    "
              }
            },
            "wrapper": true,
            "documentation": "\n        <p>Contains all of the attributes of a specific cache cluster.</p>\n    "
          }
        }
      },
      "errors": [
        {
          "shape_name": "CacheClusterNotFoundFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The requested cache cluster ID does not refer to an existing cache cluster.</p>\n    "
        },
        {
          "shape_name": "InvalidCacheClusterStateFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The requested cache cluster is not in the <i>available</i> state.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterValueException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>A parameter value is invalid.</p>\n    "
            }
          },
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterCombinationException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>Two or more parameters that must not be used together were used together.</p>\n    "
            }
          },
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n    "
        }
      ],
      "documentation": "\n        <p>The <i>DeleteCacheCluster</i> operation deletes a previously provisioned cache cluster.\n                <i>DeleteCacheCluster</i> deletes all associated cache nodes, node endpoints and the\n            cache cluster itself. When you receive a successful response from this operation, Amazon ElastiCache\n            immediately begins deleting the cache cluster; you cannot cancel or revert this operation.</p>\n        <examples>\n            <queryrequest>\nhttps://elasticache.us-east-1.amazonaws.com/\n   ?Action=DeleteCacheCluster\n   &CacheClusterId=simcoprod43&Version=2013-06-15\n   &SignatureVersion=2\n   &SignatureMethod=HmacSHA256\n   &Timestamp=2011-07-27T02%3A46%3A46.129Z\n   &AWSAccessKeyId=YOUR-ACCESS-KEY\n   &Signature=YOUR-SIGNATURE</queryrequest>\n            <queryresponse>\n<DeleteCacheClusterResponse xmlns=\"http://elasticache.amazonaws.com/doc/2013-06-15/\">\n  <DeleteCacheClusterResult>\n    <CacheCluster>\n      <CacheParameterGroup>\n        <ParameterApplyStatus>in-sync</ParameterApplyStatus>\n        <CacheParameterGroupName>default.memcached1.4</CacheParameterGroupName>\n        <CacheNodeIdsToReboot/>\n      </CacheParameterGroup>\n      <CacheClusterId>simcoprod43</CacheClusterId>\n      <CacheClusterStatus>deleting</CacheClusterStatus>\n      <ConfigurationEndpoint>\n        <Port>11211</Port>\n        <Address>simcoprod43.m2st2p.cfg.cache.amazonaws.com</Address>\n      </ConfigurationEndpoint>\n      <CacheNodeType>cache.m1.large</CacheNodeType>\n      <Engine>memcached</Engine>\n      <PendingModifiedValues/>\n      <PreferredAvailabilityZone>us-east-1b</PreferredAvailabilityZone>\n      <CacheClusterCreateTime>2011-07-27T02:18:26.497Z</CacheClusterCreateTime>\n      <EngineVersion>1.4.5</EngineVersion>\n      <AutoMinorVersionUpgrade>true</AutoMinorVersionUpgrade>\n      <PreferredMaintenanceWindow>mon:05:00-mon:05:30</PreferredMaintenanceWindow>\n      <CacheSecurityGroups>\n        <CacheSecurityGroup>\n          <CacheSecurityGroupName>default</CacheSecurityGroupName>\n          <Status>active</Status>\n        </CacheSecurityGroup>\n      </CacheSecurityGroups>\n      <NumCacheNodes>3</NumCacheNodes>\n    </CacheCluster>\n  </DeleteCacheClusterResult>\n  <ResponseMetadata>\n    <RequestId>ab84aa7e-b7fa-11e0-9b0b-a9261be2b354</RequestId>\n  </ResponseMetadata>\n</DeleteCacheClusterResponse>\n            </queryresponse>\n        </examples>\n    "
    },
    "DeleteCacheParameterGroup": {
      "name": "DeleteCacheParameterGroup",
      "input": {
        "shape_name": "DeleteCacheParameterGroupMessage",
        "type": "structure",
        "members": {
          "CacheParameterGroupName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The name of the cache parameter group to delete.</p>\n        <note> The specified cache security group must not be associated with any cache clusters.\n        </note>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>Represents the input of a <i>DeleteCacheParameterGroup</i> operation.</p>\n    "
      },
      "output": null,
      "errors": [
        {
          "shape_name": "InvalidCacheParameterGroupStateFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The current state of the cache parameter group does not allow the requested action to\n            occur. </p>\n    "
        },
        {
          "shape_name": "CacheParameterGroupNotFoundFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>\n            The requested cache parameter group name does not refer to an existing cache parameter group.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterValueException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>A parameter value is invalid.</p>\n    "
            }
          },
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterCombinationException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>Two or more parameters that must not be used together were used together.</p>\n    "
            }
          },
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n    "
        }
      ],
      "documentation": "\n        <p>The <i>DeleteCacheParameterGroup</i> operation deletes the specified cache parameter\n            group. You cannot delete a cache parameter group if it is associated with any cache\n            clusters.</p>\n        <examples>\n            <queryrequest>\nhttps://elasticache.us-east-1.amazonaws.com/\n   ?Action=DeleteCacheParameterGroup\n   &CacheParameterGroupName=myparametergroup\n   &Version=2013-06-15\n   &SignatureVersion=2\n   &SignatureMethod=HmacSHA256\n   &Timestamp=2011-07-25T21%3A16%3A39.166Z\n   &AWSAccessKeyId=YOUR-ACCESS-KEY\n   &Signature=YOUR-SIGNATURE\n            </queryrequest>\n            <queryresponse>\n<DeleteCacheParameterGroupResponse xmlns=\"http://elasticache.amazonaws.com/doc/2013-06-15/\">\n  <ResponseMetadata>\n    <RequestId>d0a417cb-575b-11e0-8869-cd22b4f9d96f</RequestId>\n  </ResponseMetadata>\n</DeleteCacheParameterGroupResponse>\n            \n            </queryresponse>\n        </examples>\n    "
    },
    "DeleteCacheSecurityGroup": {
      "name": "DeleteCacheSecurityGroup",
      "input": {
        "shape_name": "DeleteCacheSecurityGroupMessage",
        "type": "structure",
        "members": {
          "CacheSecurityGroupName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The name of the cache security group to delete.</p>\n        <note>You cannot delete the default security group.</note>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>Represents the input of a <i>DeleteCacheSecurityGroup</i> operation.</p>\n    "
      },
      "output": null,
      "errors": [
        {
          "shape_name": "InvalidCacheSecurityGroupStateFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The current state of the cache security group does not allow deletion.</p>\n    "
        },
        {
          "shape_name": "CacheSecurityGroupNotFoundFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>\n            The requested cache security group name does not refer to an existing cache security group.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterValueException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>A parameter value is invalid.</p>\n    "
            }
          },
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterCombinationException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>Two or more parameters that must not be used together were used together.</p>\n    "
            }
          },
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n    "
        }
      ],
      "documentation": "\n        <p>The <i>DeleteCacheSecurityGroup</i> operation deletes a cache security group.</p>\n        <note>You cannot delete a cache security group if it is associated with any cache clusters.</note>\n        <examples>\n            <queryrequest>\nhttps://elasticache.us-east-1.amazonaws.com/\n   ?Action=DeleteCacheSecurityGroup\n   &CacheSecurityGroupName=mycachesecuritygroup3\n   &Version=2013-06-15\n   &SignatureVersion=2\n   &SignatureMethod=HmacSHA256\n   &Timestamp=2011-07-27T02%3A54%3A12.418Z\n   &AWSAccessKeyId=YOUR-ACCESS-KEY\n   &Signature=YOUR-SIGNATURE</queryrequest>\n            <queryresponse>\n<DeleteCacheSecurityGroupResponse xmlns=\"http://elasticache.amazonaws.com/doc/2013-06-15/\">\n    <ResponseMetadata>\n        <RequestId>c130cfb7-3650-11e0-ae57-f96cfe56749c</RequestId>\n    </ResponseMetadata>\n</DeleteCacheSecurityGroupResponse></queryresponse>\n        </examples>\n    "
    },
    "DeleteCacheSubnetGroup": {
      "name": "DeleteCacheSubnetGroup",
      "input": {
        "shape_name": "DeleteCacheSubnetGroupMessage",
        "type": "structure",
        "members": {
          "CacheSubnetGroupName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The name of the cache subnet group to delete.</p>\n        <p>Constraints: Must contain no more than 255 alphanumeric characters or hyphens.</p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>Represents the input of a <i>DeleteCacheSubnetGroup</i> operation.</p>\n    "
      },
      "output": null,
      "errors": [
        {
          "shape_name": "CacheSubnetGroupInUse",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The requested cache subnet group is currently in use.</p>\n    "
        },
        {
          "shape_name": "CacheSubnetGroupNotFoundFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The requested cache subnet group name does not refer to an existing cache subnet group.</p>\n    "
        }
      ],
      "documentation": "\n        <p>The <i>DeleteCacheSubnetGroup</i> operation deletes a cache subnet group.</p>\n        <note>You cannot delete a cache subnet group if it is associated with any cache clusters.</note>\n        <examples>\n            <queryrequest>https://elasticache.amazonaws.com/\n     ?Action=DeleteCacheSubnetGroup\n     &CacheSubnetGroupName=mysubnetgroup\n     &Version=2013-06-15\n     &SignatureVersion=2\n     &SignatureMethod=HmacSHA256\n     &Timestamp=2011-02-15T17%3A48%3A21.746Z\n     &AWSAccessKeyId=<AWS Access Key ID>\n     &Signature=<Signature></queryrequest>\n            <queryresponse><DeleteCacheSubnetGroupResponse xmlns=\"http://elasticache.amazonaws.com/doc/2013-06-15/\">\n      <ResponseMetadata>\n        <RequestId>5d013245-4172-11df-8520-e7e1e602a915</RequestId>\n      </ResponseMetadata>\n    </DeleteCacheSubnetGroupResponse></queryresponse>\n        </examples>\n    "
    },
    "DeleteReplicationGroup": {
      "name": "DeleteReplicationGroup",
      "input": {
        "shape_name": "DeleteReplicationGroupMessage",
        "type": "structure",
        "members": {
          "ReplicationGroupId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The identifier for the replication group to be deleted. This parameter is not case\n            sensitive.</p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>Represents the input of a <i>DeleteReplicationGroup</i> operation.</p>\n    "
      },
      "output": {
        "shape_name": "ReplicationGroupWrapper",
        "type": "structure",
        "members": {
          "ReplicationGroup": {
            "shape_name": "ReplicationGroup",
            "type": "structure",
            "members": {
              "ReplicationGroupId": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The identifier for the replication group.</p>        \n    "
              },
              "Description": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The description of the replication group.</p>        \n    "
              },
              "Status": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The current state of this replication group - <i>creating</i>, <i>available</i>, etc.</p>\n    "
              },
              "PendingModifiedValues": {
                "shape_name": "ReplicationGroupPendingModifiedValues",
                "type": "structure",
                "members": {
                  "PrimaryClusterId": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>The primary cluster ID which will be applied immediately (if <code>--apply-immediately</code> was specified), or during\n            the next maintenance window.</p>\n    "
                  }
                },
                "documentation": "\n        <p>A group of settings to be applied to the replication group, either immediately or during the next maintenance window.</p>\n    "
              },
              "MemberClusters": {
                "shape_name": "ClusterIdList",
                "type": "list",
                "members": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "ClusterId"
                },
                "documentation": "\n        <p>The names of all the cache clusters that are part of this replication group.</p>        \n    "
              },
              "NodeGroups": {
                "shape_name": "NodeGroupList",
                "type": "list",
                "members": {
                  "shape_name": "NodeGroup",
                  "type": "structure",
                  "members": {
                    "NodeGroupId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The identifier for the node group. A replication group contains only one node group; therefore, the node group ID is 0001.</p>\n    "
                    },
                    "Status": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The current state of this replication group - <i>creating</i>, <i>available</i>, etc.</p>\n    "
                    },
                    "PrimaryEndpoint": {
                      "shape_name": "Endpoint",
                      "type": "structure",
                      "members": {
                        "Address": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": "\n        <p>The DNS hostname of the cache node.</p>\n    "
                        },
                        "Port": {
                          "shape_name": "Integer",
                          "type": "integer",
                          "documentation": "\n        <p>The port number that the cache engine is listening on.</p>\n    "
                        }
                      },
                      "documentation": "\n        <p>Represents the information required for client programs to connect to a cache node.</p>\n    "
                    },
                    "NodeGroupMembers": {
                      "shape_name": "NodeGroupMemberList",
                      "type": "list",
                      "members": {
                        "shape_name": "NodeGroupMember",
                        "type": "structure",
                        "members": {
                          "CacheClusterId": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "\n        <p>The ID of the cache cluster to which the node belongs.</p>        \n    "
                          },
                          "CacheNodeId": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "\n        <p>The ID of the node within its cache cluster. A node ID is a numeric identifier (0001, 0002, etc.).</p>        \n    "
                          },
                          "ReadEndpoint": {
                            "shape_name": "Endpoint",
                            "type": "structure",
                            "members": {
                              "Address": {
                                "shape_name": "String",
                                "type": "string",
                                "documentation": "\n        <p>The DNS hostname of the cache node.</p>\n    "
                              },
                              "Port": {
                                "shape_name": "Integer",
                                "type": "integer",
                                "documentation": "\n        <p>The port number that the cache engine is listening on.</p>\n    "
                              }
                            },
                            "documentation": "\n        <p>Represents the information required for client programs to connect to a cache node.</p>\n    "
                          },
                          "PreferredAvailabilityZone": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "\n        <p>The name of the Availability Zone in which the node is located.</p>\n    "
                          },
                          "CurrentRole": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "\n        <p>The role that is currently assigned to the node - <i>primary</i> or <i>replica</i>.</p>        \n    "
                          }
                        },
                        "documentation": "\n        <p>Represents a single node within a node group.</p>\n    ",
                        "xmlname": "NodeGroupMember"
                      },
                      "documentation": "\n        <p>A list containing information about individual nodes within the node group.</p>        \n    "
                    }
                  },
                  "documentation": "\n        <p>Represents a collection of cache nodes in a replication group.</p>\n    ",
                  "xmlname": "NodeGroup"
                },
                "documentation": "\n        <p>A single element list with information about the nodes in the replication group.</p>\n    "
              }
            },
            "wrapper": true,
            "documentation": "\n        <p>Contains all of the attributes of a specific replication group.</p>\n    "
          }
        }
      },
      "errors": [
        {
          "shape_name": "ReplicationGroupNotFoundFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The specified replication group does not exist.</p>\n    "
        },
        {
          "shape_name": "InvalidReplicationGroupStateFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The requested replication group is not in the <i>available</i> state.</p>        \n    "
        },
        {
          "shape_name": "InvalidParameterValueException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>A parameter value is invalid.</p>\n    "
            }
          },
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterCombinationException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>Two or more parameters that must not be used together were used together.</p>\n    "
            }
          },
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n    "
        }
      ],
      "documentation": "\n        <p>The <i>DeleteReplicationGroup</i> operation deletes an existing replication group.\n            <i>DeleteReplicationGroup</i> deletes the primary cache cluster and all of the read replicas in the replication\n            group. When you receive a successful response\n            from this operation, Amazon ElastiCache immediately begins deleting the entire replication group; you\n            cannot cancel or revert this operation.</p>\n    "
    },
    "DescribeCacheClusters": {
      "name": "DescribeCacheClusters",
      "input": {
        "shape_name": "DescribeCacheClustersMessage",
        "type": "structure",
        "members": {
          "CacheClusterId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The user-supplied cluster identifier. If this parameter is specified, only information\n            about that specific cache cluster is returned. This parameter isn't case sensitive.</p>\n    "
          },
          "MaxRecords": {
            "shape_name": "IntegerOptional",
            "type": "integer",
            "documentation": "\n        \n        <p>The maximum number of records to include in the response. If more records exist than the\n            specified <code>MaxRecords</code> value, a marker is included in the response so that\n            the remaining results can be retrieved.</p>\n            <p>Default: 100</p><p>Constraints: minimum 20; maximum 100.</p>\n"
          },
          "Marker": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        \n        <p>An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this\n            parameter is specified, the response includes only records beyond the marker, up to the\n            value specified by <i>MaxRecords</i>.</p>\n            \n    "
          },
          "ShowCacheNodeInfo": {
            "shape_name": "BooleanOptional",
            "type": "boolean",
            "documentation": "\n        <p>An optional flag that can be included in the DescribeCacheCluster request to retrieve\n            information about the individual cache nodes.</p>\n    "
          }
        },
        "documentation": "\n        <p>Represents the input of a <i>DescribeCacheClusters</i> operation.</p>\n    "
      },
      "output": {
        "shape_name": "CacheClusterMessage",
        "type": "structure",
        "members": {
          "Marker": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        \n     <p>Provides an identifier to allow retrieval of paginated results.</p>\n\n    "
          },
          "CacheClusters": {
            "shape_name": "CacheClusterList",
            "type": "list",
            "members": {
              "shape_name": "CacheCluster",
              "type": "structure",
              "members": {
                "CacheClusterId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The user-supplied identifier of the cache cluster. This is a unique key that identifies\n            a cache cluster.</p>\n    "
                },
                "ConfigurationEndpoint": {
                  "shape_name": "Endpoint",
                  "type": "structure",
                  "members": {
                    "Address": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The DNS hostname of the cache node.</p>\n    "
                    },
                    "Port": {
                      "shape_name": "Integer",
                      "type": "integer",
                      "documentation": "\n        <p>The port number that the cache engine is listening on.</p>\n    "
                    }
                  },
                  "documentation": "\n        <p>Represents the information required for client programs to connect to a cache node.</p>\n    "
                },
                "ClientDownloadLandingPage": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The URL of the web page where you can download the latest ElastiCache client library.</p>\n    "
                },
                "CacheNodeType": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The name of the compute and memory capacity node type for the cache cluster.</p>\n    "
                },
                "Engine": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The name of the cache engine (<i>memcached</i> or <i>redis</i>) to be used for this cache cluster.</p>\n    "
                },
                "EngineVersion": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The version of the cache engine version that is used in this cache cluster.</p>\n    "
                },
                "CacheClusterStatus": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The current state of this cache cluster - <i>creating</i>, <i>available</i>, etc.</p>\n    "
                },
                "NumCacheNodes": {
                  "shape_name": "IntegerOptional",
                  "type": "integer",
                  "documentation": "\n        <p>The number of cache nodes in the cache cluster.</p>\n    "
                },
                "PreferredAvailabilityZone": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The name of the Availability Zone in which the cache cluster is located.</p>\n    "
                },
                "CacheClusterCreateTime": {
                  "shape_name": "TStamp",
                  "type": "timestamp",
                  "documentation": "\n        <p>The date and time the cache cluster was created.</p>\n    "
                },
                "PreferredMaintenanceWindow": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The time range (in UTC) during which weekly system maintenance can occur.</p>\n    "
                },
                "PendingModifiedValues": {
                  "shape_name": "PendingModifiedValues",
                  "type": "structure",
                  "members": {
                    "NumCacheNodes": {
                      "shape_name": "IntegerOptional",
                      "type": "integer",
                      "documentation": "\n        <p>The new number of cache nodes for the cache cluster.</p>\n    "
                    },
                    "CacheNodeIdsToRemove": {
                      "shape_name": "CacheNodeIdsList",
                      "type": "list",
                      "members": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "CacheNodeId"
                      },
                      "documentation": "\n        <p>A list of cache node IDs that are being removed (or will be removed) from the cache cluster. A node ID is a numeric identifier (0001, 0002, etc.).</p>\n    "
                    },
                    "EngineVersion": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The new cache engine version that the cache cluster will run.</p>\n    "
                    }
                  },
                  "documentation": "\n        <p>A group of settings that will be applied to the cache cluster in the future, or that are currently being applied.</p>\n    "
                },
                "NotificationConfiguration": {
                  "shape_name": "NotificationConfiguration",
                  "type": "structure",
                  "members": {
                    "TopicArn": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The Amazon Resource Name (ARN) that identifies the topic.</p>\n    "
                    },
                    "TopicStatus": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The current state of the topic.</p>\n    "
                    }
                  },
                  "documentation": "\n        <p>Describes a notification topic and its status. Notification topics are used for publishing ElastiCache events to subscribers using Amazon Simple Notification Service (SNS).</p>\n    "
                },
                "CacheSecurityGroups": {
                  "shape_name": "CacheSecurityGroupMembershipList",
                  "type": "list",
                  "members": {
                    "shape_name": "CacheSecurityGroupMembership",
                    "type": "structure",
                    "members": {
                      "CacheSecurityGroupName": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>The name of the cache security group.</p>\n    "
                      },
                      "Status": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>The membership status in the cache security group. The status changes when a cache\n            security group is modified, or when the cache security groups assigned to a cache\n            cluster are modified.</p>\n    "
                      }
                    },
                    "documentation": "\n        <p>Represents a cache cluster's status within a particular cache security group.</p>\n    ",
                    "xmlname": "CacheSecurityGroup"
                  },
                  "documentation": "\n        <p>A list of cache security group elements, composed of name and status sub-elements.</p>\n    "
                },
                "CacheParameterGroup": {
                  "shape_name": "CacheParameterGroupStatus",
                  "type": "structure",
                  "members": {
                    "CacheParameterGroupName": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The name of the cache parameter group.</p>\n    "
                    },
                    "ParameterApplyStatus": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The status of parameter updates.</p>\n    "
                    },
                    "CacheNodeIdsToReboot": {
                      "shape_name": "CacheNodeIdsList",
                      "type": "list",
                      "members": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": null,
                        "xmlname": "CacheNodeId"
                      },
                      "documentation": "\n        <p>A list of the cache node IDs which need to be rebooted for parameter changes to be\n            applied. A node ID is a numeric identifier (0001, 0002, etc.).</p>\n    "
                    }
                  },
                  "documentation": "\n        <p>The status of the cache parameter group.</p>\n    "
                },
                "CacheSubnetGroupName": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The name of the cache subnet group associated with the cache cluster.</p>\n    "
                },
                "CacheNodes": {
                  "shape_name": "CacheNodeList",
                  "type": "list",
                  "members": {
                    "shape_name": "CacheNode",
                    "type": "structure",
                    "members": {
                      "CacheNodeId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>The cache node identifier. A node ID is a numeric identifier (0001, 0002, etc.). The\n            combination of cluster ID and node ID uniquely identifies every cache node used in a\n            customer's AWS account.</p>\n    "
                      },
                      "CacheNodeStatus": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>The current state of this cache node.</p>\n    "
                      },
                      "CacheNodeCreateTime": {
                        "shape_name": "TStamp",
                        "type": "timestamp",
                        "documentation": "\n        <p>The date and time the cache node was created.</p>\n    "
                      },
                      "Endpoint": {
                        "shape_name": "Endpoint",
                        "type": "structure",
                        "members": {
                          "Address": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "\n        <p>The DNS hostname of the cache node.</p>\n    "
                          },
                          "Port": {
                            "shape_name": "Integer",
                            "type": "integer",
                            "documentation": "\n        <p>The port number that the cache engine is listening on.</p>\n    "
                          }
                        },
                        "documentation": "\n        <p>The hostname and IP address for connecting to this cache node.</p>\n    "
                      },
                      "ParameterGroupStatus": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>The status of the parameter group applied to this cache node.</p>\n    "
                      },
                      "SourceCacheNodeId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>The ID of the primary node to which this read replica node is synchronized. If this field is empty, then this\n            node is not associated with a primary cache cluster.</p>      \n    "
                      }
                    },
                    "documentation": "\n        <p>Represents an individual cache node within a cache cluster. Each cache node runs its own\n            instance of the cluster's protocol-compliant caching software - either Memcached or\n            Redis.</p>\n    ",
                    "xmlname": "CacheNode"
                  },
                  "documentation": "\n        <p>A list of cache nodes that are members of the cache cluster.</p>\n    "
                },
                "AutoMinorVersionUpgrade": {
                  "shape_name": "Boolean",
                  "type": "boolean",
                  "documentation": "\n        <p>If <code>true</code>, then minor version patches are applied automatically; if\n                <code>false</code>, then automatic minor version patches are disabled.</p>\n    "
                },
                "SecurityGroups": {
                  "shape_name": "SecurityGroupMembershipList",
                  "type": "list",
                  "members": {
                    "shape_name": "SecurityGroupMembership",
                    "type": "structure",
                    "members": {
                      "SecurityGroupId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>The identifier of the cache security group.</p>\n    "
                      },
                      "Status": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>The status of the cache security group membership. The status changes whenever a cache\n            security group is modified, or when the cache security groups assigned to a cache\n            cluster are modified.</p>\n    "
                      }
                    },
                    "documentation": "\n        <p>Represents a single cache security group and its status..</p>\n    "
                  },
                  "documentation": "\n        <p>A list of VPC Security Groups associated with the cache cluster.</p>\n    "
                },
                "ReplicationGroupId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The replication group to which this cache cluster belongs. If this field is empty, the\n            cache cluster is not associated with any replication group.</p>        \n    "
                }
              },
              "wrapper": true,
              "documentation": "\n        <p>Contains all of the attributes of a specific cache cluster.</p>\n    ",
              "xmlname": "CacheCluster"
            },
            "documentation": "\n        <p>A list of cache clusters. Each item in the list contains detailed information about one cache cluster.</p>\n    "
          }
        },
        "documentation": "\n        <p>Represents the output of a <i>DescribeCacheClusters</i> operation.</p>\n    "
      },
      "errors": [
        {
          "shape_name": "CacheClusterNotFoundFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The requested cache cluster ID does not refer to an existing cache cluster.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterValueException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>A parameter value is invalid.</p>\n    "
            }
          },
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterCombinationException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>Two or more parameters that must not be used together were used together.</p>\n    "
            }
          },
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n    "
        }
      ],
      "documentation": "\n        <p>The <i>DescribeCacheClusters</i> operation returns information about all provisioned\n            cache clusters if no cache cluster identifier is specified, or about a specific cache\n            cluster if a cache cluster identifier is supplied.</p>\n        <p>By default, abbreviated information about the cache clusters(s) will be returned. You can use\n            the optional <i>ShowDetails</i> flag to retrieve detailed information about the cache\n            nodes associated with the cache clusters. These details include the DNS address and port for\n            the cache node endpoint.</p>\n        <p>If the cluster is in the CREATING state, only cluster level information will be displayed\n            until all of the nodes are successfully provisioned.</p>\n        <p>If the cluster is in the DELETING state, only cluster level information will be\n            displayed.</p>\n        <p>If cache nodes are currently being added to the cache cluster, node endpoint information\n            and creation time for the additional nodes will not be displayed until they are\n            completely provisioned. When the cache cluster state is <i>available</i>, the cluster is ready for use.</p>\n        <p>If cache nodes are currently being removed from the cache cluster, no endpoint\n            information for the removed nodes is displayed.</p>\n\n        <examples>\n            <queryrequest>\nhttps://elasticache.us-east-1.amazonaws.com/\n   ?Action=DescribeCacheClusters\n   &MaxRecords=100\n   &Version=2013-06-15\n   &ShowCacheNodeInfo=false\n   &SignatureVersion=2\n   &SignatureMethod=HmacSHA256\n   &Timestamp=2011-07-27T02%3A55%3A54.654Z\n   &AWSAccessKeyId=YOUR-ACCESS-KEY\n   &Signature=YOUR-SIGNATURE</queryrequest>\n            <queryresponse>\n<DescribeCacheClustersResponse xmlns=\"http://elasticache.amazonaws.com/doc/2013-06-15/\">\n  <DescribeCacheClustersResult>\n    <CacheClusters>\n      <CacheCluster>\n        <CacheParameterGroup>\n          <ParameterApplyStatus>in-sync</ParameterApplyStatus>\n          <CacheParameterGroupName>default.memcached1.4</CacheParameterGroupName>\n          <CacheNodeIdsToReboot/>\n        </CacheParameterGroup>\n        <CacheClusterId>simcoprod42</CacheClusterId>\n        <CacheClusterStatus>available</CacheClusterStatus>\n        <ConfigurationEndpoint>\n          <Port>11211</Port>\n          <Address>simcoprod42.m2st2p.cfg.cache.amazonaws.com</Address>\n        </ConfigurationEndpoint>\n        <ClientDownloadLandingPage>\n          https://console.aws.amazon.com/elasticache/home#client-download:\n        </ClientDownloadLandingPage>\n        <CacheNodeType>cache.m1.large</CacheNodeType>\n        <Engine>memcached</Engine>\n        <PendingModifiedValues/>\n        <PreferredAvailabilityZone>us-east-1d</PreferredAvailabilityZone>\n        <CacheClusterCreateTime>2011-07-26T01:21:46.607Z</CacheClusterCreateTime>\n        <EngineVersion>1.4.5</EngineVersion>\n        <AutoMinorVersionUpgrade>true</AutoMinorVersionUpgrade>\n        <PreferredMaintenanceWindow>fri:08:30-fri:09:00</PreferredMaintenanceWindow>\n        <CacheSecurityGroups>\n          <CacheSecurityGroup>\n            <CacheSecurityGroupName>default</CacheSecurityGroupName>\n            <Status>active</Status>\n          </CacheSecurityGroup>\n        </CacheSecurityGroups>\n        <NotificationConfiguration>\n          <TopicStatus>active</TopicStatus>\n          <TopicArn>arn:aws:sns:us-east-1:123456789012:ElastiCacheNotifications</TopicArn>\n        </NotificationConfiguration>\n        <NumCacheNodes>6</NumCacheNodes>\n      </CacheCluster>\n    </CacheClusters>\n  </DescribeCacheClustersResult>\n  <ResponseMetadata>\n    <RequestId>f270d58f-b7fb-11e0-9326-b7275b9d4a6c</RequestId>\n  </ResponseMetadata>\n</DescribeCacheClustersResponse></queryresponse>\n        </examples>\n    "
    },
    "DescribeCacheEngineVersions": {
      "name": "DescribeCacheEngineVersions",
      "input": {
        "shape_name": "DescribeCacheEngineVersionsMessage",
        "type": "structure",
        "members": {
          "Engine": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The cache engine to return. Valid values: <code>memcached</code> | <code>redis</code></p>\n    "
          },
          "EngineVersion": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The cache engine version to return.</p>\n        <p>Example: <code>1.4.14</code></p>\n    "
          },
          "CacheParameterGroupFamily": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The name of a specific cache parameter group family to return details for.</p>\n        <p>Constraints:</p>\n        <ul>\n            <li>Must be 1 to 255 alphanumeric characters</li>\n            <li>First character must be a letter</li>\n            <li>Cannot end with a hyphen or contain two consecutive hyphens</li>\n        </ul>\n    "
          },
          "MaxRecords": {
            "shape_name": "IntegerOptional",
            "type": "integer",
            "documentation": " \n        <p>The maximum number of records to include in the response. If more records exist than the\n            specified <code>MaxRecords</code> value, a marker is included in the response so that\n            the remaining results can be retrieved.</p>\n            <p>Default: 100</p><p>Constraints: minimum 20; maximum 100.</p>\n\n    "
          },
          "Marker": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        \n        <p>An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this\n            parameter is specified, the response includes only records beyond the marker, up to the\n            value specified by <i>MaxRecords</i>.</p>\n            \n    "
          },
          "DefaultOnly": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": "\n        <p>If <i>true</i>, specifies that only the default version of the specified engine or engine and major\n            version combination is to be returned.</p>\n    "
          }
        },
        "documentation": "\n        <p>Represents the input of a <i>DescribeCacheEngineVersions</i> operation.</p>\n    "
      },
      "output": {
        "shape_name": "CacheEngineVersionMessage",
        "type": "structure",
        "members": {
          "Marker": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        \n     <p>Provides an identifier to allow retrieval of paginated results.</p>\n\n    "
          },
          "CacheEngineVersions": {
            "shape_name": "CacheEngineVersionList",
            "type": "list",
            "members": {
              "shape_name": "CacheEngineVersion",
              "type": "structure",
              "members": {
                "Engine": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The name of the cache engine.</p>\n    "
                },
                "EngineVersion": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The version number of the cache engine.</p>\n    "
                },
                "CacheParameterGroupFamily": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The name of the cache parameter group family associated with this cache engine.</p>\n    "
                },
                "CacheEngineDescription": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The description of the cache engine.</p>\n    "
                },
                "CacheEngineVersionDescription": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The description of the cache engine version.</p>\n    "
                }
              },
              "documentation": "\n        <p>Provides all of the details about a particular cache engine version.</p>\n    ",
              "xmlname": "CacheEngineVersion"
            },
            "documentation": "\n        <p>A list of cache engine version details. Each element in the list contains detailed information about once cache engine version.</p>\n    "
          }
        },
        "documentation": "\n        <p>Represents the output of a <a>DescribeCacheEngineVersions</a> operation.</p>\n    "
      },
      "errors": [

      ],
      "documentation": "\n        <p>The <i>DescribeCacheEngineVersions</i> operation returns a list of the available cache engines and their versions.</p>\n        <examples>\n            <queryrequest>\nhttps://elasticache.us-east-1.amazonaws.com/\n   ?Action=DescribeCacheEngineVersions\n   &MaxRecords=100\n   &Version=2013-06-15\n   &SignatureVersion=2\n   &SignatureMethod=HmacSHA256\n   &Timestamp=2011-05-23T07%3A34%3A17.435Z\n   &AWSAccessKeyId=<AWS Access Key ID>\n   &Signature=<Signature></queryrequest>\n            <queryresponse>\n<DescribeCacheEngineVersionsResponse xmlns=\"http://elasticache.amazonaws.com/doc/2013-06-15/\">\n  <DescribeCacheEngineVersionsResult>\n    <CacheEngineVersions>\n      <CacheEngineVersion>\n        <CacheParameterGroupFamily>memcached1.4</CacheParameterGroupFamily>\n        <Engine>memcached</Engine>\n        <CacheEngineVersionDescription>memcached version 1.4.14</CacheEngineVersionDescription>\n        <CacheEngineDescription>memcached</CacheEngineDescription>\n        <EngineVersion>1.4.14</EngineVersion>\n      </CacheEngineVersion>\n      <CacheEngineVersion>\n        <CacheParameterGroupFamily>memcached1.4</CacheParameterGroupFamily>\n        <Engine>memcached</Engine>\n        <CacheEngineVersionDescription>memcached version 1.4.5</CacheEngineVersionDescription>\n        <CacheEngineDescription>memcached</CacheEngineDescription>\n        <EngineVersion>1.4.5</EngineVersion>\n      </CacheEngineVersion>\n    </CacheEngineVersions>\n  </DescribeCacheEngineVersionsResult>\n  <ResponseMetadata>\n    <RequestId>a6ac9ad2-f8a4-11e1-a4d1-a345e5370093</RequestId>\n  </ResponseMetadata>\n</DescribeCacheEngineVersionsResponse>\n</queryresponse>\n        </examples>\n    "
    },
    "DescribeCacheParameterGroups": {
      "name": "DescribeCacheParameterGroups",
      "input": {
        "shape_name": "DescribeCacheParameterGroupsMessage",
        "type": "structure",
        "members": {
          "CacheParameterGroupName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The name of a specific cache parameter group to return details for.</p>\n    "
          },
          "MaxRecords": {
            "shape_name": "IntegerOptional",
            "type": "integer",
            "documentation": "\n        <p>The maximum number of records to include in the response. If more records exist than the\n            specified <code>MaxRecords</code> value, a marker is included in the response so that\n            the remaining results can be retrieved.</p>\n            <p>Default: 100</p><p>Constraints: minimum 20; maximum 100.</p>\n\n    "
          },
          "Marker": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        \n        <p>An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this\n            parameter is specified, the response includes only records beyond the marker, up to the\n            value specified by <i>MaxRecords</i>.</p>\n            \n    "
          }
        },
        "documentation": "\n        <p>Represents the input of a <i>DescribeCacheParameterGroups</i> operation.</p>\n    "
      },
      "output": {
        "shape_name": "CacheParameterGroupsMessage",
        "type": "structure",
        "members": {
          "Marker": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        \n     <p>Provides an identifier to allow retrieval of paginated results.</p>\n\n    "
          },
          "CacheParameterGroups": {
            "shape_name": "CacheParameterGroupList",
            "type": "list",
            "members": {
              "shape_name": "CacheParameterGroup",
              "type": "structure",
              "members": {
                "CacheParameterGroupName": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The name of the cache parameter group.</p>\n    "
                },
                "CacheParameterGroupFamily": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The name of the cache parameter group family that this cache parameter group is\n            compatible with.</p>\n    "
                },
                "Description": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The description for this cache parameter group.</p>\n    "
                }
              },
              "wrapper": true,
              "documentation": "\n        <p>Represents the output of a <i>CreateCacheParameterGroup</i> operation.</p>\n    ",
              "xmlname": "CacheParameterGroup"
            },
            "documentation": "\n        <p>A list of cache parameter groups. Each element in the list contains detailed information about one cache parameter group.</p>\n    "
          }
        },
        "documentation": "\n        <p>Represents the output of a <i>DescribeCacheParameterGroups</i> operation.</p>\n    "
      },
      "errors": [
        {
          "shape_name": "CacheParameterGroupNotFoundFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>\n            The requested cache parameter group name does not refer to an existing cache parameter group.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterValueException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>A parameter value is invalid.</p>\n    "
            }
          },
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterCombinationException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>Two or more parameters that must not be used together were used together.</p>\n    "
            }
          },
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n    "
        }
      ],
      "documentation": "\n        <p>The <i>DescribeCacheParameterGroups</i> operation returns a list of cache parameter group\n            descriptions. If a cache parameter group name is specified, the list will contain only\n            the descriptions for that group.</p>\n        <examples>\n            <queryrequest>\nhttps://elasticache.us-east-1.amazonaws.com/\n   ?Action=DescribeCacheParameterGroups\n   &MaxRecords=100\n   &Version=2013-06-15\n   &SignatureVersion=2\n   &SignatureMethod=HmacSHA256\n   &Timestamp=2011-07-27T01%3A34%3A31.045Z\n   &AWSAccessKeyId=YOUR-ACCESS-KEY\n   &Signature=YOUR-SIGNATURE</queryrequest>\n            <queryresponse>\n<DescribeCacheParameterGroupsResponse xmlns=\"http://elasticache.amazonaws.com/doc/2013-06-15/\">\n  <DescribeCacheParameterGroupsResult>\n    <CacheParameterGroups>\n      <CacheParameterGroup>\n        <CacheParameterGroupName>default.memcached1.4</CacheParameterGroupName>\n        <CacheParameterGroupFamily>memcached1.4</CacheParameterGroupFamily>\n        <Description>Default parameter group for memcached1.4</Description>\n      </CacheParameterGroup>\n      <CacheParameterGroup>\n        <CacheParameterGroupName>mycacheparametergroup</CacheParameterGroupName>\n        <CacheParameterGroupFamily>memcached1.4</CacheParameterGroupFamily>\n        <Description>My cache parameter group</Description>\n      </CacheParameterGroup>\n      <CacheParameterGroup>\n        <CacheParameterGroupName>mycacheparametergroup1</CacheParameterGroupName>\n        <CacheParameterGroupFamily>memcached1.4</CacheParameterGroupFamily>\n        <Description>My first cache parameter group</Description>\n      </CacheParameterGroup>\n      <CacheParameterGroup>\n        <CacheParameterGroupName>mycacheparametergroup3</CacheParameterGroupName>\n        <CacheParameterGroupFamily>memcached1.4</CacheParameterGroupFamily>\n        <Description>My first cache parameter group</Description>\n      </CacheParameterGroup>\n    </CacheParameterGroups>\n  </DescribeCacheParameterGroupsResult>\n  <ResponseMetadata>\n    <RequestId>7193fbb8-b7fc-11e0-9b0b-a9261be2b354</RequestId>\n  </ResponseMetadata>\n</DescribeCacheParameterGroupsResponse>\n</queryresponse>\n        </examples>\n    "
    },
    "DescribeCacheParameters": {
      "name": "DescribeCacheParameters",
      "input": {
        "shape_name": "DescribeCacheParametersMessage",
        "type": "structure",
        "members": {
          "CacheParameterGroupName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The name of a specific cache parameter group to return details for.</p>\n    ",
            "required": true
          },
          "Source": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The parameter types to return.</p>\n        <p>Valid values: <code>user</code> | <code>system</code> | <code>engine-default</code>\n</p>\n    "
          },
          "MaxRecords": {
            "shape_name": "IntegerOptional",
            "type": "integer",
            "documentation": " \n        <p>The maximum number of records to include in the response. If more records exist than the\n            specified <code>MaxRecords</code> value, a marker is included in the response so that\n            the remaining results can be retrieved.</p>\n            <p>Default: 100</p><p>Constraints: minimum 20; maximum 100.</p>\n\n    "
          },
          "Marker": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        \n        <p>An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this\n            parameter is specified, the response includes only records beyond the marker, up to the\n            value specified by <i>MaxRecords</i>.</p>\n            \n    "
          }
        },
        "documentation": "\n        <p>Represents the input of a <i>DescribeCacheParameters</i> operation.</p>\n    "
      },
      "output": {
        "shape_name": "CacheParameterGroupDetails",
        "type": "structure",
        "members": {
          "Marker": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        \n     <p>Provides an identifier to allow retrieval of paginated results.</p>\n\n    "
          },
          "Parameters": {
            "shape_name": "ParametersList",
            "type": "list",
            "members": {
              "shape_name": "Parameter",
              "type": "structure",
              "members": {
                "ParameterName": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The name of the parameter.</p>\n    "
                },
                "ParameterValue": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The value of the parameter.</p>\n    "
                },
                "Description": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>A description of the parameter.</p>\n    "
                },
                "Source": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The source of the parameter.</p>\n    "
                },
                "DataType": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The valid data type for the parameter.</p>\n    "
                },
                "AllowedValues": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The valid range of values for the parameter.</p>\n    "
                },
                "IsModifiable": {
                  "shape_name": "Boolean",
                  "type": "boolean",
                  "documentation": "\n        <p>Indicates whether (<code>true</code>) or not (<code>false</code>) the parameter can be\n            modified. Some parameters have security or operational implications that prevent them\n            from being changed.</p>\n    "
                },
                "MinimumEngineVersion": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The earliest cache engine version to which the parameter can apply.</p>\n    "
                }
              },
              "documentation": "\n        <p>Describes an individual setting that controls some aspect of ElastiCache behavior.</p>\n    ",
              "xmlname": "Parameter"
            },
            "documentation": "\n        <p>A list of <a>Parameter</a> instances.</p>\n    "
          },
          "CacheNodeTypeSpecificParameters": {
            "shape_name": "CacheNodeTypeSpecificParametersList",
            "type": "list",
            "members": {
              "shape_name": "CacheNodeTypeSpecificParameter",
              "type": "structure",
              "members": {
                "ParameterName": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The name of the parameter.</p>\n    "
                },
                "Description": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>A description of the parameter.</p>\n    "
                },
                "Source": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The source of the parameter value.</p>\n    "
                },
                "DataType": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The valid data type for the parameter.</p>\n    "
                },
                "AllowedValues": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The valid range of values for the parameter.</p>\n    "
                },
                "IsModifiable": {
                  "shape_name": "Boolean",
                  "type": "boolean",
                  "documentation": "\n        <p>Indicates whether (<code>true</code>) or not (<code>false</code>) the parameter can be\n            modified. Some parameters have security or operational implications that prevent them\n            from being changed.</p>\n    "
                },
                "MinimumEngineVersion": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The earliest cache engine version to which the parameter can apply.</p>\n    "
                },
                "CacheNodeTypeSpecificValues": {
                  "shape_name": "CacheNodeTypeSpecificValueList",
                  "type": "list",
                  "members": {
                    "shape_name": "CacheNodeTypeSpecificValue",
                    "type": "structure",
                    "members": {
                      "CacheNodeType": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>The cache node type for which this value applies.</p>\n    "
                      },
                      "Value": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>The value for the cache node type.</p>\n    "
                      }
                    },
                    "documentation": "\n        <p>A value that applies only to a certain cache node type.</p>\n    ",
                    "xmlname": "CacheNodeTypeSpecificValue"
                  },
                  "documentation": "\n        <p>A list of cache node types and their corresponding values for this parameter.</p>\n    "
                }
              },
              "documentation": "\n        <p>A parameter that has a different value for each cache node type it is applied to. For\n            example, in a Redis cache cluster, a <i>cache.m1.large</i> cache node type would have a\n            larger <i>maxmemory</i> value than a <i>cache.m1.small</i> type.</p>\n    ",
              "xmlname": "CacheNodeTypeSpecificParameter"
            },
            "documentation": "\n        <p>A list of parameters specific to a particular cache node type. Each element in the list contains detailed information about one  parameter.</p>\n    "
          }
        },
        "documentation": "\n        <p>Represents the output of a <i>DescribeCacheParameters</i> operation.</p>\n    "
      },
      "errors": [
        {
          "shape_name": "CacheParameterGroupNotFoundFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>\n            The requested cache parameter group name does not refer to an existing cache parameter group.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterValueException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>A parameter value is invalid.</p>\n    "
            }
          },
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterCombinationException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>Two or more parameters that must not be used together were used together.</p>\n    "
            }
          },
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n    "
        }
      ],
      "documentation": "\n        <p>The <i>DescribeCacheParameters</i> operation returns the detailed parameter list for a particular cache parameter group.</p>\n        <examples>\n            <example>\n        <description>Some of the output has been omitted for brevity. </description>\n            <queryrequest>\nhttps://elasticache.us-east-1.amazonaws.com/\n   ?Action=DescribeCacheParameters\n   &CacheParameterGroupName=default.memcached1.4\n   &MaxRecords=100\n   &Version=2013-06-15\n   &SignatureVersion=2\n   &SignatureMethod=HmacSHA256\n   &Timestamp=2011-07-27T03%3A07%3A23.039Z\n   &AWSAccessKeyId=YOUR-ACCESS-KEY\n   &Signature=YOUR-SIGNATURE</queryrequest>\n            <queryresponse>\n<DescribeCacheParametersResponse xmlns=\"http://elasticache.amazonaws.com/doc/201\n1-07-15/\">\n  <DescribeCacheParametersResult>\n    <CacheNodeTypeSpecificParameters>\n      <CacheNodeTypeSpecificParameter>\n        <CacheNodeTypeSpecificValues>\n          <CacheNodeTypeSpecificValue>\n            <CacheNodeType>cache.c1.xlarge</CacheNodeType>\n            <Value>6000</Value>\n          </CacheNodeTypeSpecificValue>\n         \n (...output omitted...)\n\n        </CacheNodeTypeSpecificValues>\n        <DataType>integer</DataType>\n        <Source>system</Source>\n        <IsModifiable>false</IsModifiable>\n        <Description>The maximum configurable amount of memory to use to store items, in megabytes.</Description>\n        <AllowedValues>1-100000</AllowedValues>\n        <ParameterName>max_cache_memory</ParameterName>\n        <MinimumEngineVersion>1.4.5</MinimumEngineVersion>\n      </CacheNodeTypeSpecificParameter>\n      <CacheNodeTypeSpecificParameter>\n          \n (...output omitted...)\n\n      </CacheNodeTypeSpecificParameter>\n    </CacheNodeTypeSpecificParameters>\n    <Parameters>\n      <Parameter>\n        <ParameterValue>1024</ParameterValue>\n        <DataType>integer</DataType>\n        <Source>system</Source>\n        <IsModifiable>false</IsModifiable>\n        <Description>The backlog queue limit.</Description>\n        <AllowedValues>1-10000</AllowedValues>\n        <ParameterName>backlog_queue_limit</ParameterName>\n        <MinimumEngineVersion>1.4.5</MinimumEngineVersion>\n      </Parameter>\n \n (...output omitted...)\n      \n    </Parameters>\n  </DescribeCacheParametersResult>\n  <ResponseMetadata>\n    <RequestId>0c507368-b7fe-11e0-9326-b7275b9d4a6c</RequestId>\n  </ResponseMetadata>\n</DescribeCacheParametersResponse></queryresponse>\n            </example>\n        </examples>\n    "
    },
    "DescribeCacheSecurityGroups": {
      "name": "DescribeCacheSecurityGroups",
      "input": {
        "shape_name": "DescribeCacheSecurityGroupsMessage",
        "type": "structure",
        "members": {
          "CacheSecurityGroupName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The name of the cache security group to return details for.</p>\n    "
          },
          "MaxRecords": {
            "shape_name": "IntegerOptional",
            "type": "integer",
            "documentation": " \n        <p>The maximum number of records to include in the response. If more records exist than the\n            specified <code>MaxRecords</code> value, a marker is included in the response so that\n            the remaining results can be retrieved.</p>\n            <p>Default: 100</p><p>Constraints: minimum 20; maximum 100.</p>\n\n    "
          },
          "Marker": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n       \n        <p>An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this\n            parameter is specified, the response includes only records beyond the marker, up to the\n            value specified by <i>MaxRecords</i>.</p>\n            \n    "
          }
        },
        "documentation": "\n        <p>Represents the input of a <i>DescribeCacheSecurityGroups</i> operation.</p>\n    "
      },
      "output": {
        "shape_name": "CacheSecurityGroupMessage",
        "type": "structure",
        "members": {
          "Marker": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        \n     <p>Provides an identifier to allow retrieval of paginated results.</p>\n\n    "
          },
          "CacheSecurityGroups": {
            "shape_name": "CacheSecurityGroups",
            "type": "list",
            "members": {
              "shape_name": "CacheSecurityGroup",
              "type": "structure",
              "members": {
                "OwnerId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The AWS account ID of the cache security group owner.</p>\n    "
                },
                "CacheSecurityGroupName": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The name of the cache security group.</p>\n    "
                },
                "Description": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The description of the cache security group.</p>\n    "
                },
                "EC2SecurityGroups": {
                  "shape_name": "EC2SecurityGroupList",
                  "type": "list",
                  "members": {
                    "shape_name": "EC2SecurityGroup",
                    "type": "structure",
                    "members": {
                      "Status": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>The status of the Amazon EC2 security group.</p>\n    "
                      },
                      "EC2SecurityGroupName": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>The name of the Amazon EC2 security group.</p>\n    "
                      },
                      "EC2SecurityGroupOwnerId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n       <p>The AWS account ID of the Amazon EC2 security group owner.</p>\n    "
                      }
                    },
                    "documentation": "\n        <p>Provides ownership and status information for an Amazon EC2 security group.</p>\n    ",
                    "xmlname": "EC2SecurityGroup"
                  },
                  "documentation": "\n        <p>A list of Amazon EC2 security groups that are associated with this cache security group.</p>\n    "
                }
              },
              "wrapper": true,
              "documentation": "\n        <p>Represents the output of one of the following operations:</p>\n        <ul>\n            <li>\n                <i>AuthorizeCacheSecurityGroupIngress</i>\n            </li>\n            <li>\n                <i>CreateCacheSecurityGroup</i>\n            </li>\n            <li>\n                <i>RevokeCacheSecurityGroupIngress</i>\n            </li>\n        </ul>\n    ",
              "xmlname": "CacheSecurityGroup"
            },
            "documentation": "\n        <p>A list of cache security groups. Each element in the list contains detailed information about one group.</p>\n    "
          }
        },
        "documentation": "\n        <p>Represents the output of a <i>DescribeCacheSecurityGroups</i> operation.</p>\n    "
      },
      "errors": [
        {
          "shape_name": "CacheSecurityGroupNotFoundFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>\n            The requested cache security group name does not refer to an existing cache security group.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterValueException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>A parameter value is invalid.</p>\n    "
            }
          },
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterCombinationException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>Two or more parameters that must not be used together were used together.</p>\n    "
            }
          },
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n    "
        }
      ],
      "documentation": "\n        <p>The <i>DescribeCacheSecurityGroups</i> operation returns a list of cache security group\n            descriptions. If a cache security group name is specified, the list will contain only the\n            description of that group.</p>\n        <examples>\n            <queryrequest>\nhttps://elasticache.us-east-1.amazonaws.com/\n   ?Action=DescribeCacheSecurityGroups\n   &Version=2013-06-15\n   &MaxRecords=100\n   &SignatureVersion=2\n   &SignatureMethod=HmacSHA256\n   &Timestamp=2011-07-27T01%3A22%3A48.381Z\n   &AWSAccessKeyId=YOUR-ACCESS-KEY\n   &Signature=YOUR-SIGNATURE</queryrequest>\n            <queryresponse>\n<DescribeCacheSecurityGroupsResponse xmlns=\"http://elasticache.amazonaws.com/doc/2013-06-15/\">\n  <DescribeCacheSecurityGroupsResult>\n    <CacheSecurityGroups>\n      <CacheSecurityGroup>\n        <EC2SecurityGroups/>\n        <CacheSecurityGroupName>default</CacheSecurityGroupName>\n        <OwnerId>123456789012</OwnerId>\n        <Description>default</Description>\n      </CacheSecurityGroup>\n      <CacheSecurityGroup>\n        <EC2SecurityGroups/>\n        <CacheSecurityGroupName>mycachesecuritygroup</CacheSecurityGroupName>\n        <OwnerId>123456789012</OwnerId>\n        <Description>My Security Group</Description>\n      </CacheSecurityGroup>\n    </CacheSecurityGroups>\n  </DescribeCacheSecurityGroupsResult>\n  <ResponseMetadata>\n    <RequestId>a95360ae-b7fc-11e0-9326-b7275b9d4a6c</RequestId>\n  </ResponseMetadata>\n</DescribeCacheSecurityGroupsResponse></queryresponse>\n        </examples>\n    "
    },
    "DescribeCacheSubnetGroups": {
      "name": "DescribeCacheSubnetGroups",
      "input": {
        "shape_name": "DescribeCacheSubnetGroupsMessage",
        "type": "structure",
        "members": {
          "CacheSubnetGroupName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The name of the cache subnet group to return details for.</p>\n    "
          },
          "MaxRecords": {
            "shape_name": "IntegerOptional",
            "type": "integer",
            "documentation": " \n        <p>The maximum number of records to include in the response. If more records exist than the\n            specified <code>MaxRecords</code> value, a marker is included in the response so that\n            the remaining results can be retrieved.</p>\n            <p>Default: 100</p><p>Constraints: minimum 20; maximum 100.</p>\n\n        "
          },
          "Marker": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        \n        <p>An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this\n            parameter is specified, the response includes only records beyond the marker, up to the\n            value specified by <i>MaxRecords</i>.</p>\n            \n    "
          }
        },
        "documentation": "\n        <p>Represents the input of a <i>DescribeCacheSubnetGroups</i> operation.</p>\n    "
      },
      "output": {
        "shape_name": "CacheSubnetGroupMessage",
        "type": "structure",
        "members": {
          "Marker": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        \n     <p>Provides an identifier to allow retrieval of paginated results.</p>\n\n    "
          },
          "CacheSubnetGroups": {
            "shape_name": "CacheSubnetGroups",
            "type": "list",
            "members": {
              "shape_name": "CacheSubnetGroup",
              "type": "structure",
              "members": {
                "CacheSubnetGroupName": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The name of the cache subnet group.</p>\n    "
                },
                "CacheSubnetGroupDescription": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The description of the cache subnet group.</p>\n    "
                },
                "VpcId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The Amazon Virtual Private Cloud identifier (VPC ID) of the cache subnet group.</p>\n    "
                },
                "Subnets": {
                  "shape_name": "SubnetList",
                  "type": "list",
                  "members": {
                    "shape_name": "Subnet",
                    "type": "structure",
                    "members": {
                      "SubnetIdentifier": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>The unique identifier for the subnet</p>\n    "
                      },
                      "SubnetAvailabilityZone": {
                        "shape_name": "AvailabilityZone",
                        "type": "structure",
                        "members": {
                          "Name": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "\n        <p>The name of the availability zone.</p>\n    "
                          }
                        },
                        "wrapper": true,
                        "documentation": "\n        <p>The Availability Zone associated with the subnet</p>\n    "
                      }
                    },
                    "documentation": "\n        <p>Represents the subnet associated with a cache cluster. This parameter refers to subnets defined in Amazon Virtual Private Cloud (Amazon VPC) and used with ElastiCache.</p>\n    ",
                    "xmlname": "Subnet"
                  },
                  "documentation": "\n        <p>A list of subnets associated with the cache subnet group.</p>\n    "
                }
              },
              "wrapper": true,
              "documentation": "\n        <p>Represents the output of one of the following operations:</p>\n        <ul>\n            <li>\n                <i>CreateCacheSubnetGroup</i>\n            </li>\n            <li>\n                <i>ModifyCacheSubnetGroup</i>\n            </li>\n        </ul>\n    ",
              "xmlname": "CacheSubnetGroup"
            },
            "documentation": "\n        <p>A list of cache subnet groups. Each element in the list contains detailed information about one group.</p>\n    "
          }
        },
        "documentation": "\n        <p>Represents the output of a <i>DescribeCacheSubnetGroups</i> operation.</p>\n    "
      },
      "errors": [
        {
          "shape_name": "CacheSubnetGroupNotFoundFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The requested cache subnet group name does not refer to an existing cache subnet group.</p>\n    "
        }
      ],
      "documentation": "\n        <p>The <i>DescribeCacheSubnetGroups</i> operation returns a list of cache subnet group\n            descriptions. If a subnet group name is specified, the list will contain only the\n            description of that group.</p>\n        <examples><example>\n        <description>Some of the output has been omitted for brevity. </description>\n            <queryrequest>https://elasticache.amazonaws.com/\n    ?Action=DescribeCacheSubnetGroups\n    &Version=2013-06-15\n    &MaxRecords=100\n    &SignatureVersion=2\n    &SignatureMethod=HmacSHA256\n    &Timestamp=2011-02-15T19%3A40%3A19.926Z\n    &AWSAccessKeyId=<AWS Access Key ID>\n    &Signature=<Signature></queryrequest>\n            <queryresponse><DescribeCacheSubnetGroupsResponse xmlns=\"http://elasticache.amazonaws.com/doc/2013-06-15/\">\n        <DescribeCacheSubnetGroupsResult>\n            <CacheSubnetGroups>\n                <CacheSubnetGroup>\n                    <VpcId>990524496922</VpcId>\n                    <CacheSubnetGroupDescription>description</CacheSubnetGroupDescription>\n                    <CacheSubnetGroupName>subnet_grp1</CacheSubnetGroupName>\n                    <Subnets>\n                        <Subnet>\n                            <SubnetStatus>Active</SubnetStatus>\n                            <SubnetIdentifier>subnet-7c5b4115</SubnetIdentifier>\n                            <SubnetAvailabilityZone>\n                                <Name>us-east-1c</Name>\n                            </SubnetAvailabilityZone>\n                        </Subnet>\n                        <Subnet>\n                            <SubnetStatus>Active</SubnetStatus>\n                            <SubnetIdentifier>subnet-7b5b4112</SubnetIdentifier>\n                            <SubnetAvailabilityZone>\n                                <Name>us-east-1b</Name>\n                            </SubnetAvailabilityZone>\n                        </Subnet>\n                        <Subnet>\n                            <SubnetStatus>Active</SubnetStatus>\n                            <SubnetIdentifier>subnet-3ea6bd57</SubnetIdentifier>\n                            <SubnetAvailabilityZone>\n                                <Name>us-east-1d</Name>\n                            </SubnetAvailabilityZone>\n                        </Subnet>\n                    </Subnets>\n                </CacheSubnetGroup>\n                \n (...output omitted...)\n      \n            </CacheSubnetGroups>\n        </DescribeCacheSubnetGroupsResult>\n        <ResponseMetadata>\n            <RequestId>31d0faee-229b-11e1-81f1-df3a2a803dad</RequestId>\n        </ResponseMetadata>\n    </DescribeCacheSubnetGroupsResponse></queryresponse>\n        </example>\n        </examples>\n    "
    },
    "DescribeEngineDefaultParameters": {
      "name": "DescribeEngineDefaultParameters",
      "input": {
        "shape_name": "DescribeEngineDefaultParametersMessage",
        "type": "structure",
        "members": {
          "CacheParameterGroupFamily": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The name of the cache parameter group family. Valid values are: <code>memcached1.4</code> | <code>redis2.6</code></p>\n    ",
            "required": true
          },
          "MaxRecords": {
            "shape_name": "IntegerOptional",
            "type": "integer",
            "documentation": " \n        <p>The maximum number of records to include in the response. If more records exist than the\n            specified <code>MaxRecords</code> value, a marker is included in the response so that\n            the remaining results can be retrieved.</p>\n            <p>Default: 100</p><p>Constraints: minimum 20; maximum 100.</p>\n "
          },
          "Marker": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        \n        <p>An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this\n            parameter is specified, the response includes only records beyond the marker, up to the\n            value specified by <i>MaxRecords</i>.</p>\n            \n    "
          }
        },
        "documentation": "\n        <p>Represents the input of a <i>DescribeEngineDefaultParameters</i> operation.</p>\n    "
      },
      "output": {
        "shape_name": "EngineDefaultsWrapper",
        "type": "structure",
        "members": {
          "EngineDefaults": {
            "shape_name": "EngineDefaults",
            "type": "structure",
            "members": {
              "CacheParameterGroupFamily": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>Specifies the name of the cache parameter group family to which the engine default\n            parameters apply.</p>\n    "
              },
              "Marker": {
                "shape_name": "String",
                "type": "string",
                "documentation": " \n     <p>Provides an identifier to allow retrieval of paginated results.</p>\n "
              },
              "Parameters": {
                "shape_name": "ParametersList",
                "type": "list",
                "members": {
                  "shape_name": "Parameter",
                  "type": "structure",
                  "members": {
                    "ParameterName": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The name of the parameter.</p>\n    "
                    },
                    "ParameterValue": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The value of the parameter.</p>\n    "
                    },
                    "Description": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>A description of the parameter.</p>\n    "
                    },
                    "Source": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The source of the parameter.</p>\n    "
                    },
                    "DataType": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The valid data type for the parameter.</p>\n    "
                    },
                    "AllowedValues": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The valid range of values for the parameter.</p>\n    "
                    },
                    "IsModifiable": {
                      "shape_name": "Boolean",
                      "type": "boolean",
                      "documentation": "\n        <p>Indicates whether (<code>true</code>) or not (<code>false</code>) the parameter can be\n            modified. Some parameters have security or operational implications that prevent them\n            from being changed.</p>\n    "
                    },
                    "MinimumEngineVersion": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The earliest cache engine version to which the parameter can apply.</p>\n    "
                    }
                  },
                  "documentation": "\n        <p>Describes an individual setting that controls some aspect of ElastiCache behavior.</p>\n    ",
                  "xmlname": "Parameter"
                },
                "documentation": "\n        <p>Contains a list of engine default parameters.</p>\n    "
              },
              "CacheNodeTypeSpecificParameters": {
                "shape_name": "CacheNodeTypeSpecificParametersList",
                "type": "list",
                "members": {
                  "shape_name": "CacheNodeTypeSpecificParameter",
                  "type": "structure",
                  "members": {
                    "ParameterName": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The name of the parameter.</p>\n    "
                    },
                    "Description": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>A description of the parameter.</p>\n    "
                    },
                    "Source": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The source of the parameter value.</p>\n    "
                    },
                    "DataType": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The valid data type for the parameter.</p>\n    "
                    },
                    "AllowedValues": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The valid range of values for the parameter.</p>\n    "
                    },
                    "IsModifiable": {
                      "shape_name": "Boolean",
                      "type": "boolean",
                      "documentation": "\n        <p>Indicates whether (<code>true</code>) or not (<code>false</code>) the parameter can be\n            modified. Some parameters have security or operational implications that prevent them\n            from being changed.</p>\n    "
                    },
                    "MinimumEngineVersion": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The earliest cache engine version to which the parameter can apply.</p>\n    "
                    },
                    "CacheNodeTypeSpecificValues": {
                      "shape_name": "CacheNodeTypeSpecificValueList",
                      "type": "list",
                      "members": {
                        "shape_name": "CacheNodeTypeSpecificValue",
                        "type": "structure",
                        "members": {
                          "CacheNodeType": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "\n        <p>The cache node type for which this value applies.</p>\n    "
                          },
                          "Value": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "\n        <p>The value for the cache node type.</p>\n    "
                          }
                        },
                        "documentation": "\n        <p>A value that applies only to a certain cache node type.</p>\n    ",
                        "xmlname": "CacheNodeTypeSpecificValue"
                      },
                      "documentation": "\n        <p>A list of cache node types and their corresponding values for this parameter.</p>\n    "
                    }
                  },
                  "documentation": "\n        <p>A parameter that has a different value for each cache node type it is applied to. For\n            example, in a Redis cache cluster, a <i>cache.m1.large</i> cache node type would have a\n            larger <i>maxmemory</i> value than a <i>cache.m1.small</i> type.</p>\n    ",
                  "xmlname": "CacheNodeTypeSpecificParameter"
                },
                "documentation": "\n        <p>A list of parameters specific to a particular cache node type. Each element in the list contains detailed information about one parameter.</p>\n    "
              }
            },
            "wrapper": true,
            "documentation": "\n        <p>Represents the output of a <i>DescribeEngineDefaultParameters</i> operation.</p>\n    "
          }
        }
      },
      "errors": [
        {
          "shape_name": "InvalidParameterValueException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>A parameter value is invalid.</p>\n    "
            }
          },
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterCombinationException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>Two or more parameters that must not be used together were used together.</p>\n    "
            }
          },
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n    "
        }
      ],
      "documentation": "\n        <p>The <i>DescribeEngineDefaultParameters</i> operation returns the default engine and\n            system parameter information for the specified cache engine.</p>\n        <examples><example>\n        <description>Some of the output has been omitted for brevity. </description>\n            <queryrequest>\nhttps://elasticache.us-east-1.amazonaws.com/\n   ?Action=DescribeEngineDefaultParameters\n   &CacheParameterGroupFamily=memcached1.4\n   &MaxRecords=100\n   &Version=2013-06-15\n   &SignatureVersion=2\n   &SignatureMethod=HmacSHA256\n   &Timestamp=2011-07-27T01%3A34%3A31.045Z\n   &AWSAccessKeyId=YOUR-ACCESS-KEY\n   &Signature=YOUR-SIGNATURE</queryrequest>\n            <queryresponse>\n<DescribeEngineDefaultParametersResponse xmlns=\"http://elasticache.amazonaws.com/doc/2013-06-15/\">\n  <DescribeEngineDefaultParametersResult>\n    <EngineDefaults>\n      <CacheParameterGroupFamily>memcached1.4</CacheParameterGroupFamily>\n      <Parameters>\n        <Parameter>\n          <ParameterValue>1024</ParameterValue>\n          <DataType>integer</DataType>\n          <Source>system</Source>\n          <IsModifiable>false</IsModifiable>\n          <Description>The backlog queue limit.</Description>\n          <AllowedValues>1-10000</AllowedValues>\n          <ParameterName>backlog_queue_limit</ParameterName>\n          <MinimumEngineVersion>1.4.5</MinimumEngineVersion>\n        </Parameter>\n        <Parameter>\n                \n (...output omitted...)\n          \n        </Parameter>\n      </Parameters>\n      <CacheNodeTypeSpecificParameters>\n        <CacheNodeTypeSpecificParameter>\n          <CacheNodeTypeSpecificValues>\n            <CacheNodeTypeSpecificValue>\n              <CacheNodeType>cache.c1.xlarge</CacheNodeType>\n              <Value>6000</Value>\n            </CacheNodeTypeSpecificValue>\n               \n (...output omitted...)\n          \n          </CacheNodeTypeSpecificValues>\n          <DataType>integer</DataType>\n          <Source>system</Source>\n          <IsModifiable>false</IsModifiable>\n          <Description>The maximum configurable amount of memory to use to store\n items, in megabytes.</Description>\n          <AllowedValues>1-100000</AllowedValues>\n          <ParameterName>max_cache_memory</ParameterName>\n          <MinimumEngineVersion>1.4.5</MinimumEngineVersion>\n        </CacheNodeTypeSpecificParameter>\n               \n (...output omitted...)\n          \n      </CacheNodeTypeSpecificParameters>\n    </EngineDefaults>\n  </DescribeEngineDefaultParametersResult>\n  <ResponseMetadata>\n    <RequestId>061282fe-b7fd-11e0-9326-b7275b9d4a6c</RequestId>\n  </ResponseMetadata>\n</DescribeEngineDefaultParametersResponse></queryresponse>\n        </example></examples>\n    "
    },
    "DescribeEvents": {
      "name": "DescribeEvents",
      "input": {
        "shape_name": "DescribeEventsMessage",
        "type": "structure",
        "members": {
          "SourceIdentifier": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The identifier of the event source for which events will be returned. If not specified,\n            then all sources are included in the response.</p>\n    "
          },
          "SourceType": {
            "shape_name": "SourceType",
            "type": "string",
            "enum": [
              "cache-cluster",
              "cache-parameter-group",
              "cache-security-group",
              "cache-subnet-group"
            ],
            "documentation": "\n        <p>The event source to retrieve events for. If no value is specified, all events are\n            returned.</p>\n        <p>Valid values are: <code>cache-cluster</code> | <code>cache-parameter-group</code> | <code>cache-security-group</code> | <code>cache-subnet-group</code></p>\n    "
          },
          "StartTime": {
            "shape_name": "TStamp",
            "type": "timestamp",
            "documentation": "\n        <p>The beginning of the time interval to retrieve events for, specified in ISO 8601 format.\n</p>\n    "
          },
          "EndTime": {
            "shape_name": "TStamp",
            "type": "timestamp",
            "documentation": "\n        <p>The end of the time interval for which to retrieve events, specified in ISO 8601 format.\n</p>\n    "
          },
          "Duration": {
            "shape_name": "IntegerOptional",
            "type": "integer",
            "documentation": "\n        <p>The number of minutes' worth of events to retrieve.</p>\n    "
          },
          "MaxRecords": {
            "shape_name": "IntegerOptional",
            "type": "integer",
            "documentation": " \n        <p>The maximum number of records to include in the response. If more records exist than the\n            specified <code>MaxRecords</code> value, a marker is included in the response so that\n            the remaining results can be retrieved.</p>\n            <p>Default: 100</p><p>Constraints: minimum 20; maximum 100.</p>\n "
          },
          "Marker": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        \n        <p>An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this\n            parameter is specified, the response includes only records beyond the marker, up to the\n            value specified by <i>MaxRecords</i>.</p>\n            \n    "
          }
        },
        "documentation": "\n        <p>Represents the input of a <i>DescribeEvents</i> operation.</p>\n    "
      },
      "output": {
        "shape_name": "EventsMessage",
        "type": "structure",
        "members": {
          "Marker": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        \n     <p>Provides an identifier to allow retrieval of paginated results.</p>\n\n    "
          },
          "Events": {
            "shape_name": "EventList",
            "type": "list",
            "members": {
              "shape_name": "Event",
              "type": "structure",
              "members": {
                "SourceIdentifier": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The identifier for the source of the event. For example, if the event occurred at the\n            cache cluster level, the identifier would be the name of the cache cluster.</p>\n    "
                },
                "SourceType": {
                  "shape_name": "SourceType",
                  "type": "string",
                  "enum": [
                    "cache-cluster",
                    "cache-parameter-group",
                    "cache-security-group",
                    "cache-subnet-group"
                  ],
                  "documentation": "\n        <p>Specifies the origin of this event - a cache cluster, a parameter group, a security group, etc.</p>\n    "
                },
                "Message": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The text of the event.</p>\n    "
                },
                "Date": {
                  "shape_name": "TStamp",
                  "type": "timestamp",
                  "documentation": "\n        <p>The date and time when the event occurred.</p>\n    "
                }
              },
              "documentation": "\n        <p>Represents a single occurrence of something interesting within the system. Some examples\n            of events are creating a cache cluster, adding or removing a cache node, or rebooting a\n            node.</p>\n    ",
              "xmlname": "Event"
            },
            "documentation": "\n        <p>A list of events. Each element in the list contains detailed information about one event.</p>\n    "
          }
        },
        "documentation": "\n        <p>Represents the output of a <i>DescribeEvents</i> operation.</p>\n    "
      },
      "errors": [
        {
          "shape_name": "InvalidParameterValueException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>A parameter value is invalid.</p>\n    "
            }
          },
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterCombinationException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>Two or more parameters that must not be used together were used together.</p>\n    "
            }
          },
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n    "
        }
      ],
      "documentation": "\n        <p>The <i>DescribeEvents</i> operation returns events related to cache clusters, cache\n            security groups, and cache parameter groups. You can obtain events specific to a\n            particular cache cluster, cache security group, or cache parameter group by providing\n            the name as a parameter.</p>            \n        <p>By default, only the events occurring within the last hour are returned; however, you\n            can retrieve up to 14 days' worth of events if necessary.</p>\n    "
    },
    "DescribeReplicationGroups": {
      "name": "DescribeReplicationGroups",
      "input": {
        "shape_name": "DescribeReplicationGroupsMessage",
        "type": "structure",
        "members": {
          "ReplicationGroupId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The identifier for the replication group to be described. This parameter is not case sensitive.</p>\n        <p>If you do not specify this parameter, information about all replication groups is returned.</p>\n    "
          },
          "MaxRecords": {
            "shape_name": "IntegerOptional",
            "type": "integer",
            "documentation": "\n        \n        <p>The maximum number of records to include in the response. If more records exist than the\n            specified <code>MaxRecords</code> value, a marker is included in the response so that\n            the remaining results can be retrieved.</p>\n            <p>Default: 100</p><p>Constraints: minimum 20; maximum 100.</p>\n\n    "
          },
          "Marker": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        \n        <p>An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this\n            parameter is specified, the response includes only records beyond the marker, up to the\n            value specified by <i>MaxRecords</i>.</p>\n            \n    "
          }
        },
        "documentation": "\n        <p>Represents the input of a <i>DescribeReplicationGroups</i> operation.</p>\n    "
      },
      "output": {
        "shape_name": "ReplicationGroupMessage",
        "type": "structure",
        "members": {
          "Marker": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        \n     <p>Provides an identifier to allow retrieval of paginated results.</p>\n       \n    "
          },
          "ReplicationGroups": {
            "shape_name": "ReplicationGroupList",
            "type": "list",
            "members": {
              "shape_name": "ReplicationGroup",
              "type": "structure",
              "members": {
                "ReplicationGroupId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The identifier for the replication group.</p>        \n    "
                },
                "Description": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The description of the replication group.</p>        \n    "
                },
                "Status": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The current state of this replication group - <i>creating</i>, <i>available</i>, etc.</p>\n    "
                },
                "PendingModifiedValues": {
                  "shape_name": "ReplicationGroupPendingModifiedValues",
                  "type": "structure",
                  "members": {
                    "PrimaryClusterId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The primary cluster ID which will be applied immediately (if <code>--apply-immediately</code> was specified), or during\n            the next maintenance window.</p>\n    "
                    }
                  },
                  "documentation": "\n        <p>A group of settings to be applied to the replication group, either immediately or during the next maintenance window.</p>\n    "
                },
                "MemberClusters": {
                  "shape_name": "ClusterIdList",
                  "type": "list",
                  "members": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": null,
                    "xmlname": "ClusterId"
                  },
                  "documentation": "\n        <p>The names of all the cache clusters that are part of this replication group.</p>        \n    "
                },
                "NodeGroups": {
                  "shape_name": "NodeGroupList",
                  "type": "list",
                  "members": {
                    "shape_name": "NodeGroup",
                    "type": "structure",
                    "members": {
                      "NodeGroupId": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>The identifier for the node group. A replication group contains only one node group; therefore, the node group ID is 0001.</p>\n    "
                      },
                      "Status": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>The current state of this replication group - <i>creating</i>, <i>available</i>, etc.</p>\n    "
                      },
                      "PrimaryEndpoint": {
                        "shape_name": "Endpoint",
                        "type": "structure",
                        "members": {
                          "Address": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "\n        <p>The DNS hostname of the cache node.</p>\n    "
                          },
                          "Port": {
                            "shape_name": "Integer",
                            "type": "integer",
                            "documentation": "\n        <p>The port number that the cache engine is listening on.</p>\n    "
                          }
                        },
                        "documentation": "\n        <p>Represents the information required for client programs to connect to a cache node.</p>\n    "
                      },
                      "NodeGroupMembers": {
                        "shape_name": "NodeGroupMemberList",
                        "type": "list",
                        "members": {
                          "shape_name": "NodeGroupMember",
                          "type": "structure",
                          "members": {
                            "CacheClusterId": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": "\n        <p>The ID of the cache cluster to which the node belongs.</p>        \n    "
                            },
                            "CacheNodeId": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": "\n        <p>The ID of the node within its cache cluster. A node ID is a numeric identifier (0001, 0002, etc.).</p>        \n    "
                            },
                            "ReadEndpoint": {
                              "shape_name": "Endpoint",
                              "type": "structure",
                              "members": {
                                "Address": {
                                  "shape_name": "String",
                                  "type": "string",
                                  "documentation": "\n        <p>The DNS hostname of the cache node.</p>\n    "
                                },
                                "Port": {
                                  "shape_name": "Integer",
                                  "type": "integer",
                                  "documentation": "\n        <p>The port number that the cache engine is listening on.</p>\n    "
                                }
                              },
                              "documentation": "\n        <p>Represents the information required for client programs to connect to a cache node.</p>\n    "
                            },
                            "PreferredAvailabilityZone": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": "\n        <p>The name of the Availability Zone in which the node is located.</p>\n    "
                            },
                            "CurrentRole": {
                              "shape_name": "String",
                              "type": "string",
                              "documentation": "\n        <p>The role that is currently assigned to the node - <i>primary</i> or <i>replica</i>.</p>        \n    "
                            }
                          },
                          "documentation": "\n        <p>Represents a single node within a node group.</p>\n    ",
                          "xmlname": "NodeGroupMember"
                        },
                        "documentation": "\n        <p>A list containing information about individual nodes within the node group.</p>        \n    "
                      }
                    },
                    "documentation": "\n        <p>Represents a collection of cache nodes in a replication group.</p>\n    ",
                    "xmlname": "NodeGroup"
                  },
                  "documentation": "\n        <p>A single element list with information about the nodes in the replication group.</p>\n    "
                }
              },
              "wrapper": true,
              "documentation": "\n        <p>Contains all of the attributes of a specific replication group.</p>\n    ",
              "xmlname": "ReplicationGroup"
            },
            "documentation": "\n        <p>A list of replication groups. Each item in the list contains detailed information about one replication group.</p>\n    "
          }
        },
        "documentation": "\n        <p>Represents the output of a <i>DescribeReplicationGroups</i> operation.</p>\n    "
      },
      "errors": [
        {
          "shape_name": "ReplicationGroupNotFoundFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The specified replication group does not exist.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterValueException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>A parameter value is invalid.</p>\n    "
            }
          },
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterCombinationException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>Two or more parameters that must not be used together were used together.</p>\n    "
            }
          },
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n    "
        }
      ],
      "documentation": "\n        <p>The <i>DescribeReplicationGroups</i> operation returns information about a particular\n            replication group. If no identifier is specified, <i>DescribeReplicationGroups</i>\n            returns information about all replication groups.</p> \n    "
    },
    "DescribeReservedCacheNodes": {
      "name": "DescribeReservedCacheNodes",
      "input": {
        "shape_name": "DescribeReservedCacheNodesMessage",
        "type": "structure",
        "members": {
          "ReservedCacheNodeId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The reserved cache node identifier filter value. Use this parameter to show only the\n            reservation that matches the specified reservation ID.</p>\n    "
          },
          "ReservedCacheNodesOfferingId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The offering identifier filter value. Use this parameter to show only purchased\n            reservations matching the specified offering identifier.</p>\n    "
          },
          "CacheNodeType": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The cache node type filter value. Use this parameter to show only those reservations\n            matching the specified cache node type.</p>\n    "
          },
          "Duration": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The duration filter value, specified in years or seconds. Use this parameter to show\n            only reservations for this duration.</p>\n        <p>Valid Values: <code>1 | 3 | 31536000 | 94608000</code></p>\n    "
          },
          "ProductDescription": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The product description filter value. Use this parameter to show only those\n            reservations matching the specified product description.</p>\n    "
          },
          "OfferingType": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The offering type filter value. Use this parameter to show only the available\n            offerings matching the specified offering type.</p>\n        <p>Valid values: <code>\"Light Utilization\" | \"Medium Utilization\" | \"Heavy Utilization\"\n            </code></p>\n    "
          },
          "MaxRecords": {
            "shape_name": "IntegerOptional",
            "type": "integer",
            "documentation": " \n        <p>The maximum number of records to include in the response. If more records exist than the\n            specified <code>MaxRecords</code> value, a marker is included in the response so that\n            the remaining results can be retrieved.</p>\n            <p>Default: 100</p><p>Constraints: minimum 20; maximum 100.</p>\n\n    "
          },
          "Marker": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        \n        <p>An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this\n            parameter is specified, the response includes only records beyond the marker, up to the\n            value specified by <i>MaxRecords</i>.</p>\n            \n    "
          }
        },
        "documentation": "\n        <p>Represents the input of a <i>DescribeReservedCacheNodes</i> operation.</p>\n    "
      },
      "output": {
        "shape_name": "ReservedCacheNodeMessage",
        "type": "structure",
        "members": {
          "Marker": {
            "shape_name": "String",
            "type": "string",
            "documentation": " \n     <p>Provides an identifier to allow retrieval of paginated results.</p>\n "
          },
          "ReservedCacheNodes": {
            "shape_name": "ReservedCacheNodeList",
            "type": "list",
            "members": {
              "shape_name": "ReservedCacheNode",
              "type": "structure",
              "members": {
                "ReservedCacheNodeId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The unique identifier for the reservation.</p>\n    "
                },
                "ReservedCacheNodesOfferingId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The offering identifier.</p>\n    "
                },
                "CacheNodeType": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The cache node type for the reserved cache nodes.</p>\n    "
                },
                "StartTime": {
                  "shape_name": "TStamp",
                  "type": "timestamp",
                  "documentation": "\n        <p>The time the reservation started.</p>\n    "
                },
                "Duration": {
                  "shape_name": "Integer",
                  "type": "integer",
                  "documentation": "\n        <p>The duration of the reservation in seconds.</p>\n    "
                },
                "FixedPrice": {
                  "shape_name": "Double",
                  "type": "double",
                  "documentation": "\n        <p>The fixed price charged for this reserved cache node.</p>\n    "
                },
                "UsagePrice": {
                  "shape_name": "Double",
                  "type": "double",
                  "documentation": "\n        <p>The hourly price charged for this reserved cache node.</p>\n    "
                },
                "CacheNodeCount": {
                  "shape_name": "Integer",
                  "type": "integer",
                  "documentation": "\n        <p>The number of cache nodes that have been reserved.</p>\n    "
                },
                "ProductDescription": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The description of the reserved cache node.</p>\n    "
                },
                "OfferingType": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The offering type of this reserved cache node.</p>\n    "
                },
                "State": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The state of the reserved cache node.</p>\n    "
                },
                "RecurringCharges": {
                  "shape_name": "RecurringChargeList",
                  "type": "list",
                  "members": {
                    "shape_name": "RecurringCharge",
                    "type": "structure",
                    "members": {
                      "RecurringChargeAmount": {
                        "shape_name": "Double",
                        "type": "double",
                        "documentation": "\n        <p>The monetary amount of the recurring charge.</p>\n    "
                      },
                      "RecurringChargeFrequency": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>The frequency of the recurring charge.</p>\n    "
                      }
                    },
                    "wrapper": true,
                    "documentation": "\n        <p>Contains the specific price and frequency of a recurring charges for a reserved cache\n            node, or for a reserved cache node offering.</p>\n    ",
                    "xmlname": "RecurringCharge"
                  },
                  "documentation": "\n        <p>The recurring price charged to run this reserved cache node.</p>\n    "
                }
              },
              "wrapper": true,
              "documentation": "\n        <p>Represents the output of a <i>PurchaseReservedCacheNodesOffering</i> operation.</p>\n    ",
              "xmlname": "ReservedCacheNode"
            },
            "documentation": "\n        <p>A list of reserved cache nodes. Each element in the list contains detailed information about one node.</p>\n    "
          }
        },
        "documentation": "\n        <p>Represents the output of a <i>DescribeReservedCacheNodes</i> operation.</p>\n    "
      },
      "errors": [
        {
          "shape_name": "ReservedCacheNodeNotFoundFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The requested reserved cache node was not found.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterValueException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>A parameter value is invalid.</p>\n    "
            }
          },
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterCombinationException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>Two or more parameters that must not be used together were used together.</p>\n    "
            }
          },
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n    "
        }
      ],
      "documentation": "\n        <p>The <i>DescribeReservedCacheNodes</i> operation returns information about reserved cache nodes for this account, or about a specified\n            reserved cache node.</p>\n        <examples>\n            <queryrequest>https://elasticache.amazonaws.com/\n   ?Action=DescribeReservedCacheNodes\n   &ReservedCacheNodeId=customerSpecifiedID\n   &SignatureVersion=2\n   &SignatureMethod=HmacSHA256\n   &Timestamp=2012-12-18T18%3A31%3A36.118Z\n   &AWSAccessKeyId=<AWS Access Key ID>\n   &Signature=<Signature></queryrequest>\n            <queryresponse><DescribeReservedCacheNodesResponse xmlns=\"http://elasticache.amazonaws.com/doc/2013-06-15/\">\n  <DescribeReservedCacheNodesResult>\n    <ReservedCacheNodes>\n      <ReservedCacheNode>\n        <OfferingType>Medium Utilization</OfferingType>\n        <RecurringCharges/>\n        <ProductDescription>memcached</ProductDescription>\n        <ReservedCacheNodesOfferingId>649fd0c8-cf6d-47a0-bfa6-060f8e75e95f</ReservedCacheNodesOfferingId>\n        <State>payment-failed</State>\n        <ReservedCacheNodeId>myreservationid</ReservedCacheNodeId>\n        <CacheNodeCount>1</CacheNodeCount>\n        <StartTime>2010-12-15T00:25:14.131Z</StartTime>\n        <Duration>31536000</Duration>\n        <FixedPrice>227.5</FixedPrice>\n        <UsagePrice>0.046</UsagePrice>\n        <CacheNodeType>cache.m1.small</CacheNodeType>\n      </ReservedCacheNode>\n  </DescribeReservedCacheNodesResult>\n  <ResponseMetadata>\n    <RequestId>c695119b-2961-11e1-bd06-6fe008f046c3</RequestId>\n  </ResponseMetadata>\n</DescribeReservedCacheNodesResponse>\n</queryresponse>\n        </examples>\n    "
    },
    "DescribeReservedCacheNodesOfferings": {
      "name": "DescribeReservedCacheNodesOfferings",
      "input": {
        "shape_name": "DescribeReservedCacheNodesOfferingsMessage",
        "type": "structure",
        "members": {
          "ReservedCacheNodesOfferingId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The offering identifier filter value. Use this parameter to show only the available\n            offering that matches the specified reservation identifier.</p>\n        <p>Example: <code>438012d3-4052-4cc7-b2e3-8d3372e0e706</code></p>\n    "
          },
          "CacheNodeType": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The cache node type filter value. Use this parameter to show only the available\n            offerings matching the specified cache node type.</p>\n    "
          },
          "Duration": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>Duration filter value, specified in years or seconds. Use this parameter to show only\n            reservations for a given duration.</p>\n        <p>Valid Values: <code>1 | 3 | 31536000 | 94608000</code></p>\n    "
          },
          "ProductDescription": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The product description filter value. Use this parameter to show only the available\n            offerings matching the specified product description.</p>\n    "
          },
          "OfferingType": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The offering type filter value. Use this parameter to show only the available\n            offerings matching the specified offering type.</p>\n        <p>Valid Values: <code>\"Light Utilization\" | \"Medium Utilization\" | \"Heavy Utilization\"\n            </code></p>\n    "
          },
          "MaxRecords": {
            "shape_name": "IntegerOptional",
            "type": "integer",
            "documentation": " \n        <p>The maximum number of records to include in the response. If more records exist than the\n            specified <code>MaxRecords</code> value, a marker is included in the response so that\n            the remaining results can be retrieved.</p>\n            <p>Default: 100</p><p>Constraints: minimum 20; maximum 100.</p>\n\n    "
          },
          "Marker": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        \n        <p>An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this\n            parameter is specified, the response includes only records beyond the marker, up to the\n            value specified by <i>MaxRecords</i>.</p>\n            \n    "
          }
        },
        "documentation": "\n        <p>Represents the input of a <i>DescribeReservedCacheNodesOfferings</i> operation.</p>\n    "
      },
      "output": {
        "shape_name": "ReservedCacheNodesOfferingMessage",
        "type": "structure",
        "members": {
          "Marker": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        \n     <p>Provides an identifier to allow retrieval of paginated results.</p>\n\n    "
          },
          "ReservedCacheNodesOfferings": {
            "shape_name": "ReservedCacheNodesOfferingList",
            "type": "list",
            "members": {
              "shape_name": "ReservedCacheNodesOffering",
              "type": "structure",
              "members": {
                "ReservedCacheNodesOfferingId": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>A unique identifier for the reserved cache node offering.</p>\n    "
                },
                "CacheNodeType": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The cache node type for the reserved cache node.</p>\n    "
                },
                "Duration": {
                  "shape_name": "Integer",
                  "type": "integer",
                  "documentation": "\n        <p>The duration of the offering. in seconds.</p>\n    "
                },
                "FixedPrice": {
                  "shape_name": "Double",
                  "type": "double",
                  "documentation": "\n        <p>The fixed price charged for this offering.</p>\n    "
                },
                "UsagePrice": {
                  "shape_name": "Double",
                  "type": "double",
                  "documentation": "\n        <p>The hourly price charged for this offering.</p>\n    "
                },
                "ProductDescription": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The cache engine used by the offering.</p>\n    "
                },
                "OfferingType": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The offering type.</p>\n    "
                },
                "RecurringCharges": {
                  "shape_name": "RecurringChargeList",
                  "type": "list",
                  "members": {
                    "shape_name": "RecurringCharge",
                    "type": "structure",
                    "members": {
                      "RecurringChargeAmount": {
                        "shape_name": "Double",
                        "type": "double",
                        "documentation": "\n        <p>The monetary amount of the recurring charge.</p>\n    "
                      },
                      "RecurringChargeFrequency": {
                        "shape_name": "String",
                        "type": "string",
                        "documentation": "\n        <p>The frequency of the recurring charge.</p>\n    "
                      }
                    },
                    "wrapper": true,
                    "documentation": "\n        <p>Contains the specific price and frequency of a recurring charges for a reserved cache\n            node, or for a reserved cache node offering.</p>\n    ",
                    "xmlname": "RecurringCharge"
                  },
                  "documentation": "\n        <p>The recurring price charged to run this reserved cache node.</p>\n    "
                }
              },
              "wrapper": true,
              "documentation": "\n        <p>Describes all of the attributes of a reserved cache node offering.</p>\n    ",
              "xmlname": "ReservedCacheNodesOffering"
            },
            "documentation": "\n        <p>A list of reserved cache node offerings. Each element in the list contains detailed information about one offering.</p>\n    "
          }
        },
        "documentation": "\n        <p>Represents the output of a <i>DescribeReservedCacheNodesOfferings</i> operation.</p>\n    "
      },
      "errors": [
        {
          "shape_name": "ReservedCacheNodesOfferingNotFoundFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The requested cache node offering  does not exist.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterValueException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>A parameter value is invalid.</p>\n    "
            }
          },
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterCombinationException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>Two or more parameters that must not be used together were used together.</p>\n    "
            }
          },
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n    "
        }
      ],
      "documentation": "\n        <p>The <i>DescribeReservedCacheNodesOfferings</i> operation lists available reserved cache node offerings.</p>\n        <examples>\n            <queryrequest>https://elasticache.amazonaws.com/\n   ?Action=DescribeReservedCacheNodesOfferings\n   &ReservedCacheNodesOfferingId=438012d3-4052-4cc7-b2e3-8d3372e0e706\n   &SignatureVersion=2\n   &SignatureMethod=HmacSHA256\n   &Timestamp=2011-12-18T18%3A31%3A36.118Z\n   &AWSAccessKeyId=<AWS Access Key ID>\n   &Signature=<Signature></queryrequest>\n            <queryresponse><DescribeReservedCacheNodesOfferingsResponse xmlns=\"http://elasticache.amazonaws.com/doc/2013-06-15/\">\n  <DescribeReservedCacheNodesOfferingsResult>\n    <ReservedCacheNodesOfferings>\n      <ReservedCacheNodesOffering>\n        <Duration>31536000</Duration>\n        <OfferingType>Heavy Utilization</OfferingType>\n        <RecurringCharges>\n          <RecurringCharge>\n            <RecurringChargeFrequency>Hourly</RecurringChargeFrequency>\n            <RecurringChargeAmount>0.123</RecurringChargeAmount>\n          </RecurringCharge>\n        </RecurringCharges>\n        <FixedPrice>162.0</FixedPrice>\n        <ProductDescription>memcached</ProductDescription>\n        <UsagePrice>0.0</UsagePrice>\n        <ReservedCacheNodesOfferingId>SampleOfferingId</ReservedCacheNodesOfferingId>\n        <CacheNodeType>cache.m1.small</CacheNodeType>\n      </ReservedCacheNodesOffering>\n    </ReservedCacheNodesOfferings>\n  </DescribeReservedCacheNodesOfferingsResult>\n  <ResponseMetadata>\n    <RequestId>521b420a-2961-11e1-bd06-6fe008f046c3</RequestId>\n  </ResponseMetadata>\n</DescribeReservedCacheNodesOfferingsResponse>\n</queryresponse>\n        </examples>\n    "
    },
    "ModifyCacheCluster": {
      "name": "ModifyCacheCluster",
      "input": {
        "shape_name": "ModifyCacheClusterMessage",
        "type": "structure",
        "members": {
          "CacheClusterId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The cache cluster identifier. This value is stored as a lowercase string.</p>\n    ",
            "required": true
          },
          "NumCacheNodes": {
            "shape_name": "IntegerOptional",
            "type": "integer",
            "documentation": "\n        <p>The number of cache nodes that the cache cluster should have. If the value for <i>NumCacheNodes</i> is greater than\n            the existing number of cache nodes, then more nodes will be added. If the value is less\n            than the existing number of cache nodes, then cache nodes will be removed.</p>\n        <p>If you are removing cache nodes, you must use the <i>CacheNodeIdsToRemove</i> parameter\n            to provide the IDs of the specific cache nodes to be removed.</p>\n    "
          },
          "CacheNodeIdsToRemove": {
            "shape_name": "CacheNodeIdsList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "CacheNodeId"
            },
            "documentation": "\n        <p>A list of cache node IDs to be removed. A node ID is a numeric identifier (0001, 0002, etc.). This parameter is only valid when NumCacheNodes\n            is less than the existing number of cache nodes. The number of cache node IDs supplied\n            in this parameter must match the difference between the existing number of cache nodes\n            in the cluster and the value of <i>NumCacheNodes</i> in the request.</p>\n    "
          },
          "CacheSecurityGroupNames": {
            "shape_name": "CacheSecurityGroupNameList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "CacheSecurityGroupName"
            },
            "documentation": "\n        <p>A list of cache security group names to authorize on this cache cluster. This change is\n            asynchronously applied as soon as possible.</p>\n        <p>This parameter can be used only with clusters that are created outside of an Amazon\n            Virtual Private Cloud (VPC).</p>\n        <p>Constraints: Must contain no more than 255 alphanumeric characters. Must not be\n            \"Default\".</p>\n    "
          },
          "SecurityGroupIds": {
            "shape_name": "SecurityGroupIdsList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "SecurityGroupId"
            },
            "documentation": "\n        <p>Specifies the VPC Security Groups associated with the cache cluster.</p>\n        <p>This parameter can be used only with clusters that are created in an Amazon Virtual\n            Private Cloud (VPC).</p>\n    "
          },
          "PreferredMaintenanceWindow": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The weekly time range (in UTC) during which system maintenance can occur. Note that\n            system maintenance may result in an outage. This change is made immediately. If you are\n            moving this window to the current time, there must be at least 120 minutes between the\n            current time and end of the window to ensure that pending changes are applied.</p>\n    "
          },
          "NotificationTopicArn": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The Amazon Resource Name (ARN) of the SNS topic to which notifications will be sent.</p>\n        <note> The SNS topic owner must be same as the cache cluster owner. </note>\n    "
          },
          "CacheParameterGroupName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The name of the cache parameter group to apply to this cache cluster. This change is\n            asynchronously applied as soon as possible for parameters when the\n                <i>ApplyImmediately</i> parameter is specified as <i>true</i> for this request.</p>\n    "
          },
          "NotificationTopicStatus": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The status of the Amazon SNS notification topic. Notifications are sent only if the\n            status is <i>active</i>.</p>\n        <p>Valid values: <code>active</code> | <code>inactive</code></p>\n    "
          },
          "ApplyImmediately": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": "\n        <p>If <code>true</code>, this parameter causes the modifications in this request and any pending modifications\n            to be applied, asynchronously and as soon as possible, regardless of the\n                <i>PreferredMaintenanceWindow</i> setting for the cache cluster.</p>\n        <p>If <code>false</code>, then changes to the cache cluster are applied on the next\n            maintenance reboot, or the next failure reboot, whichever occurs first.</p>\n        <p>Valid values: <code>true</code> | <code>false</code></p>\n            <p>Default: <code>false</code></p>\n    "
          },
          "EngineVersion": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The upgraded version of the cache engine to be run on the cache cluster nodes.</p>\n    "
          },
          "AutoMinorVersionUpgrade": {
            "shape_name": "BooleanOptional",
            "type": "boolean",
            "documentation": "\n        <p>If <code>true</code>, then minor engine upgrades will be applied automatically to the cache cluster\n            during the maintenance window.</p>\n        <p>Valid values: <code>true</code> | <code>false</code></p>\n        <p>Default: <code>true</code></p>\n    "
          }
        },
        "documentation": "\n        <p>Represents the input of a <i>ModifyCacheCluster</i> operation.</p>\n    "
      },
      "output": {
        "shape_name": "CacheClusterWrapper",
        "type": "structure",
        "members": {
          "CacheCluster": {
            "shape_name": "CacheCluster",
            "type": "structure",
            "members": {
              "CacheClusterId": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The user-supplied identifier of the cache cluster. This is a unique key that identifies\n            a cache cluster.</p>\n    "
              },
              "ConfigurationEndpoint": {
                "shape_name": "Endpoint",
                "type": "structure",
                "members": {
                  "Address": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>The DNS hostname of the cache node.</p>\n    "
                  },
                  "Port": {
                    "shape_name": "Integer",
                    "type": "integer",
                    "documentation": "\n        <p>The port number that the cache engine is listening on.</p>\n    "
                  }
                },
                "documentation": "\n        <p>Represents the information required for client programs to connect to a cache node.</p>\n    "
              },
              "ClientDownloadLandingPage": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The URL of the web page where you can download the latest ElastiCache client library.</p>\n    "
              },
              "CacheNodeType": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The name of the compute and memory capacity node type for the cache cluster.</p>\n    "
              },
              "Engine": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The name of the cache engine (<i>memcached</i> or <i>redis</i>) to be used for this cache cluster.</p>\n    "
              },
              "EngineVersion": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The version of the cache engine version that is used in this cache cluster.</p>\n    "
              },
              "CacheClusterStatus": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The current state of this cache cluster - <i>creating</i>, <i>available</i>, etc.</p>\n    "
              },
              "NumCacheNodes": {
                "shape_name": "IntegerOptional",
                "type": "integer",
                "documentation": "\n        <p>The number of cache nodes in the cache cluster.</p>\n    "
              },
              "PreferredAvailabilityZone": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The name of the Availability Zone in which the cache cluster is located.</p>\n    "
              },
              "CacheClusterCreateTime": {
                "shape_name": "TStamp",
                "type": "timestamp",
                "documentation": "\n        <p>The date and time the cache cluster was created.</p>\n    "
              },
              "PreferredMaintenanceWindow": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The time range (in UTC) during which weekly system maintenance can occur.</p>\n    "
              },
              "PendingModifiedValues": {
                "shape_name": "PendingModifiedValues",
                "type": "structure",
                "members": {
                  "NumCacheNodes": {
                    "shape_name": "IntegerOptional",
                    "type": "integer",
                    "documentation": "\n        <p>The new number of cache nodes for the cache cluster.</p>\n    "
                  },
                  "CacheNodeIdsToRemove": {
                    "shape_name": "CacheNodeIdsList",
                    "type": "list",
                    "members": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "CacheNodeId"
                    },
                    "documentation": "\n        <p>A list of cache node IDs that are being removed (or will be removed) from the cache cluster. A node ID is a numeric identifier (0001, 0002, etc.).</p>\n    "
                  },
                  "EngineVersion": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>The new cache engine version that the cache cluster will run.</p>\n    "
                  }
                },
                "documentation": "\n        <p>A group of settings that will be applied to the cache cluster in the future, or that are currently being applied.</p>\n    "
              },
              "NotificationConfiguration": {
                "shape_name": "NotificationConfiguration",
                "type": "structure",
                "members": {
                  "TopicArn": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>The Amazon Resource Name (ARN) that identifies the topic.</p>\n    "
                  },
                  "TopicStatus": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>The current state of the topic.</p>\n    "
                  }
                },
                "documentation": "\n        <p>Describes a notification topic and its status. Notification topics are used for publishing ElastiCache events to subscribers using Amazon Simple Notification Service (SNS).</p>\n    "
              },
              "CacheSecurityGroups": {
                "shape_name": "CacheSecurityGroupMembershipList",
                "type": "list",
                "members": {
                  "shape_name": "CacheSecurityGroupMembership",
                  "type": "structure",
                  "members": {
                    "CacheSecurityGroupName": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The name of the cache security group.</p>\n    "
                    },
                    "Status": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The membership status in the cache security group. The status changes when a cache\n            security group is modified, or when the cache security groups assigned to a cache\n            cluster are modified.</p>\n    "
                    }
                  },
                  "documentation": "\n        <p>Represents a cache cluster's status within a particular cache security group.</p>\n    ",
                  "xmlname": "CacheSecurityGroup"
                },
                "documentation": "\n        <p>A list of cache security group elements, composed of name and status sub-elements.</p>\n    "
              },
              "CacheParameterGroup": {
                "shape_name": "CacheParameterGroupStatus",
                "type": "structure",
                "members": {
                  "CacheParameterGroupName": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>The name of the cache parameter group.</p>\n    "
                  },
                  "ParameterApplyStatus": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>The status of parameter updates.</p>\n    "
                  },
                  "CacheNodeIdsToReboot": {
                    "shape_name": "CacheNodeIdsList",
                    "type": "list",
                    "members": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "CacheNodeId"
                    },
                    "documentation": "\n        <p>A list of the cache node IDs which need to be rebooted for parameter changes to be\n            applied. A node ID is a numeric identifier (0001, 0002, etc.).</p>\n    "
                  }
                },
                "documentation": "\n        <p>The status of the cache parameter group.</p>\n    "
              },
              "CacheSubnetGroupName": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The name of the cache subnet group associated with the cache cluster.</p>\n    "
              },
              "CacheNodes": {
                "shape_name": "CacheNodeList",
                "type": "list",
                "members": {
                  "shape_name": "CacheNode",
                  "type": "structure",
                  "members": {
                    "CacheNodeId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The cache node identifier. A node ID is a numeric identifier (0001, 0002, etc.). The\n            combination of cluster ID and node ID uniquely identifies every cache node used in a\n            customer's AWS account.</p>\n    "
                    },
                    "CacheNodeStatus": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The current state of this cache node.</p>\n    "
                    },
                    "CacheNodeCreateTime": {
                      "shape_name": "TStamp",
                      "type": "timestamp",
                      "documentation": "\n        <p>The date and time the cache node was created.</p>\n    "
                    },
                    "Endpoint": {
                      "shape_name": "Endpoint",
                      "type": "structure",
                      "members": {
                        "Address": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": "\n        <p>The DNS hostname of the cache node.</p>\n    "
                        },
                        "Port": {
                          "shape_name": "Integer",
                          "type": "integer",
                          "documentation": "\n        <p>The port number that the cache engine is listening on.</p>\n    "
                        }
                      },
                      "documentation": "\n        <p>The hostname and IP address for connecting to this cache node.</p>\n    "
                    },
                    "ParameterGroupStatus": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The status of the parameter group applied to this cache node.</p>\n    "
                    },
                    "SourceCacheNodeId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The ID of the primary node to which this read replica node is synchronized. If this field is empty, then this\n            node is not associated with a primary cache cluster.</p>      \n    "
                    }
                  },
                  "documentation": "\n        <p>Represents an individual cache node within a cache cluster. Each cache node runs its own\n            instance of the cluster's protocol-compliant caching software - either Memcached or\n            Redis.</p>\n    ",
                  "xmlname": "CacheNode"
                },
                "documentation": "\n        <p>A list of cache nodes that are members of the cache cluster.</p>\n    "
              },
              "AutoMinorVersionUpgrade": {
                "shape_name": "Boolean",
                "type": "boolean",
                "documentation": "\n        <p>If <code>true</code>, then minor version patches are applied automatically; if\n                <code>false</code>, then automatic minor version patches are disabled.</p>\n    "
              },
              "SecurityGroups": {
                "shape_name": "SecurityGroupMembershipList",
                "type": "list",
                "members": {
                  "shape_name": "SecurityGroupMembership",
                  "type": "structure",
                  "members": {
                    "SecurityGroupId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The identifier of the cache security group.</p>\n    "
                    },
                    "Status": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The status of the cache security group membership. The status changes whenever a cache\n            security group is modified, or when the cache security groups assigned to a cache\n            cluster are modified.</p>\n    "
                    }
                  },
                  "documentation": "\n        <p>Represents a single cache security group and its status..</p>\n    "
                },
                "documentation": "\n        <p>A list of VPC Security Groups associated with the cache cluster.</p>\n    "
              },
              "ReplicationGroupId": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The replication group to which this cache cluster belongs. If this field is empty, the\n            cache cluster is not associated with any replication group.</p>        \n    "
              }
            },
            "wrapper": true,
            "documentation": "\n        <p>Contains all of the attributes of a specific cache cluster.</p>\n    "
          }
        }
      },
      "errors": [
        {
          "shape_name": "InvalidCacheClusterStateFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The requested cache cluster is not in the <i>available</i> state.</p>\n    "
        },
        {
          "shape_name": "InvalidCacheSecurityGroupStateFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The current state of the cache security group does not allow deletion.</p>\n    "
        },
        {
          "shape_name": "CacheClusterNotFoundFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The requested cache cluster ID does not refer to an existing cache cluster.</p>\n    "
        },
        {
          "shape_name": "NodeQuotaForClusterExceededFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The request cannot be processed because it would exceed the allowed\n            number of cache nodes in a single cache cluster.</p>\n    "
        },
        {
          "shape_name": "NodeQuotaForCustomerExceededFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The request cannot be processed because it would exceed the allowed number of cache nodes per customer.\n</p>\n    "
        },
        {
          "shape_name": "CacheSecurityGroupNotFoundFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>\n            The requested cache security group name does not refer to an existing cache security group.</p>\n    "
        },
        {
          "shape_name": "CacheParameterGroupNotFoundFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>\n            The requested cache parameter group name does not refer to an existing cache parameter group.</p>\n    "
        },
        {
          "shape_name": "InvalidVPCNetworkStateFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The VPC network is in an invalid state.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterValueException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>A parameter value is invalid.</p>\n    "
            }
          },
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterCombinationException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>Two or more parameters that must not be used together were used together.</p>\n    "
            }
          },
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n    "
        }
      ],
      "documentation": "\n        <p>The <i>ModifyCacheCluster</i> operation modifies the settings for a cache cluster. You\n            can use this operation to change one or more cluster configuration parameters by\n            specifying the parameters and the new values.</p>\n        <examples>\n            <queryrequest>\nhttps://elasticache.us-east-1.amazonaws.com/\n   ?Action=ModifyCacheCluster\n   &NumCacheNodes=5\n   &CacheClusterId=simcoprod01\n   &Version=2013-06-15\n   &ApplyImmediately=true\n   &SignatureVersion=2\n   &SignatureMethod=HmacSHA256\n   &Timestamp=2011-07-27T03%3A16%3A34.601Z\n   &AWSAccessKeyId=YOUR-ACCESS-KEY\n   &Signature=YOUR-SIGNATURE</queryrequest>\n            <queryresponse>\n<ModifyCacheClusterResponse xmlns=\"http://elasticache.amazonaws.com/doc/2013-06-15/\">\n  <ModifyCacheClusterResult>\n    <CacheCluster>\n      <CacheParameterGroup>\n        <ParameterApplyStatus>in-sync</ParameterApplyStatus>\n        <CacheParameterGroupName>default.memcached1.4</CacheParameterGroupName>\n        <CacheNodeIdsToReboot/>\n      </CacheParameterGroup>\n      <CacheClusterId>simcoprod01</CacheClusterId>\n      <CacheClusterStatus>available</CacheClusterStatus>\n      <ConfigurationEndpoint>\n        <Port>11211</Port>\n        <Address>simcoprod01.m2st2p.cfg.cache.amazonaws.com</Address>\n      </ConfigurationEndpoint>\n      <CacheNodeType>cache.m1.large</CacheNodeType>\n      <Engine>memcached</Engine>\n      <PendingModifiedValues>\n        <NumCacheNodes>5</NumCacheNodes>\n      </PendingModifiedValues>\n      <PreferredAvailabilityZone>us-east-1b</PreferredAvailabilityZone>\n      <CacheClusterCreateTime>2011-07-26T23:45:20.937Z</CacheClusterCreateTime>\n      <EngineVersion>1.4.5</EngineVersion>\n      <AutoMinorVersionUpgrade>true</AutoMinorVersionUpgrade>\n      <PreferredMaintenanceWindow>fri:04:30-fri:05:00</PreferredMaintenanceWindow>\n      <CacheSecurityGroups>\n        <CacheSecurityGroup>\n          <CacheSecurityGroupName>default</CacheSecurityGroupName>\n          <Status>active</Status>\n        </CacheSecurityGroup>\n      </CacheSecurityGroups>\n      <NumCacheNodes>3</NumCacheNodes>\n    </CacheCluster>\n  </ModifyCacheClusterResult>\n  <ResponseMetadata>\n    <RequestId>d5786c6d-b7fe-11e0-9326-b7275b9d4a6c</RequestId>\n  </ResponseMetadata>\n</ModifyCacheClusterResponse></queryresponse>\n        </examples>\n    "
    },
    "ModifyCacheParameterGroup": {
      "name": "ModifyCacheParameterGroup",
      "input": {
        "shape_name": "ModifyCacheParameterGroupMessage",
        "type": "structure",
        "members": {
          "CacheParameterGroupName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The name of the cache parameter group to modify.</p>\n    ",
            "required": true
          },
          "ParameterNameValues": {
            "shape_name": "ParameterNameValueList",
            "type": "list",
            "members": {
              "shape_name": "ParameterNameValue",
              "type": "structure",
              "members": {
                "ParameterName": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The name of the parameter.</p>\n    "
                },
                "ParameterValue": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The value of the parameter.</p>\n    "
                }
              },
              "documentation": "\n        <p>Describes a name-value pair that is used to update the value of a parameter.</p>\n    ",
              "xmlname": "ParameterNameValue"
            },
            "documentation": "\n        <p>An array of parameter names and values for the parameter update. You must supply at least one parameter\n            name and value; subsequent arguments are optional. A maximum of 20\n            parameters may be modified per request.</p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>Represents the input of a <i>ModifyCacheParameterGroup</i> operation.</p>\n    "
      },
      "output": {
        "shape_name": "CacheParameterGroupNameMessage",
        "type": "structure",
        "members": {
          "CacheParameterGroupName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The name of the cache parameter group.</p>\n    "
          }
        },
        "documentation": "\n        <p>Represents the output of one of the following operations:</p>\n        <ul>\n            <li>\n                <i>ModifyCacheParameterGroup</i>\n            </li>\n            <li>\n                <i>ResetCacheParameterGroup</i>\n            </li>\n        </ul>\n    "
      },
      "errors": [
        {
          "shape_name": "CacheParameterGroupNotFoundFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>\n            The requested cache parameter group name does not refer to an existing cache parameter group.</p>\n    "
        },
        {
          "shape_name": "InvalidCacheParameterGroupStateFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The current state of the cache parameter group does not allow the requested action to\n            occur. </p>\n    "
        },
        {
          "shape_name": "InvalidParameterValueException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>A parameter value is invalid.</p>\n    "
            }
          },
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterCombinationException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>Two or more parameters that must not be used together were used together.</p>\n    "
            }
          },
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n    "
        }
      ],
      "documentation": "\n        <p>The <i>ModifyCacheParameterGroup</i> operation modifies the parameters of a cache\n            parameter group. You can modify up to 20 parameters in a single request by submitting a\n            list parameter name and value pairs.</p>\n        <examples>\n            <queryrequest>\nhttps://elasticache.us-east-1.amazonaws.com/\n   ?Action=ModifyCacheParameterGroup\n   ?ParameterNameValues.member.1.ParameterName=chunk_size_growth_factor\n   &ParameterNameValues.member.1.ParameterValue=1.02\n   &CacheParameterGroupName=mycacheparametergroup\n   &Version=2013-06-15\n   &SignatureVersion=2\n   &SignatureMethod=HmacSHA256\n   &Timestamp=2011-07-27T03%3A24%3A50.203Z\n   &AWSAccessKeyId=YOUR-ACCESS-KEY\n   &Signature=YOUR-SIGNATURE</queryrequest>\n            <queryresponse>\n<ModifyCacheParameterGroupResponse xmlns=\"http://elasticache.amazonaws.com/doc/2013-06-15/\">\n  <ModifyCacheParameterGroupResult>\n    <CacheParameterGroupName>mycacheparametergroup</CacheParameterGroupName>\n  </ModifyCacheParameterGroupResult>\n  <ResponseMetadata>\n    <RequestId>fcedeef2-b7ff-11e0-9326-b7275b9d4a6c</RequestId>\n  </ResponseMetadata>\n</ModifyCacheParameterGroupResponse>\n            </queryresponse>\n        </examples>\n    "
    },
    "ModifyCacheSubnetGroup": {
      "name": "ModifyCacheSubnetGroup",
      "input": {
        "shape_name": "ModifyCacheSubnetGroupMessage",
        "type": "structure",
        "members": {
          "CacheSubnetGroupName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The name for the cache subnet group. This value is stored as a lowercase string.</p>\n        <p>Constraints: Must contain no more than 255 alphanumeric characters or hyphens.</p>\n        <p>Example: <code>mysubnetgroup</code></p>\n    ",
            "required": true
          },
          "CacheSubnetGroupDescription": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>A description for the cache subnet group.</p>\n    "
          },
          "SubnetIds": {
            "shape_name": "SubnetIdentifierList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "SubnetIdentifier"
            },
            "documentation": "\n        <p>The EC2 subnet IDs for the cache subnet group.</p>\n    "
          }
        },
        "documentation": "\n        <p>Represents the input of a <i>ModifyCacheSubnetGroup</i> operation.</p>\n    "
      },
      "output": {
        "shape_name": "CacheSubnetGroupWrapper",
        "type": "structure",
        "members": {
          "CacheSubnetGroup": {
            "shape_name": "CacheSubnetGroup",
            "type": "structure",
            "members": {
              "CacheSubnetGroupName": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The name of the cache subnet group.</p>\n    "
              },
              "CacheSubnetGroupDescription": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The description of the cache subnet group.</p>\n    "
              },
              "VpcId": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The Amazon Virtual Private Cloud identifier (VPC ID) of the cache subnet group.</p>\n    "
              },
              "Subnets": {
                "shape_name": "SubnetList",
                "type": "list",
                "members": {
                  "shape_name": "Subnet",
                  "type": "structure",
                  "members": {
                    "SubnetIdentifier": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The unique identifier for the subnet</p>\n    "
                    },
                    "SubnetAvailabilityZone": {
                      "shape_name": "AvailabilityZone",
                      "type": "structure",
                      "members": {
                        "Name": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": "\n        <p>The name of the availability zone.</p>\n    "
                        }
                      },
                      "wrapper": true,
                      "documentation": "\n        <p>The Availability Zone associated with the subnet</p>\n    "
                    }
                  },
                  "documentation": "\n        <p>Represents the subnet associated with a cache cluster. This parameter refers to subnets defined in Amazon Virtual Private Cloud (Amazon VPC) and used with ElastiCache.</p>\n    ",
                  "xmlname": "Subnet"
                },
                "documentation": "\n        <p>A list of subnets associated with the cache subnet group.</p>\n    "
              }
            },
            "wrapper": true,
            "documentation": "\n        <p>Represents the output of one of the following operations:</p>\n        <ul>\n            <li>\n                <i>CreateCacheSubnetGroup</i>\n            </li>\n            <li>\n                <i>ModifyCacheSubnetGroup</i>\n            </li>\n        </ul>\n    "
          }
        }
      },
      "errors": [
        {
          "shape_name": "CacheSubnetGroupNotFoundFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The requested cache subnet group name does not refer to an existing cache subnet group.</p>\n    "
        },
        {
          "shape_name": "CacheSubnetQuotaExceededFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The request cannot be processed because it would exceed the allowed number of subnets in a cache subnet\n            group.</p>\n    "
        },
        {
          "shape_name": "SubnetInUse",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The requested subnet is being used by another cache subnet group.</p>\n    "
        },
        {
          "shape_name": "InvalidSubnet",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>An invalid subnet identifier was specified.</p>\n    "
        }
      ],
      "documentation": "\n        <p>The <i>ModifyCacheSubnetGroup</i> operation modifies an existing cache subnet group.</p>\n        <examples>\n            <queryrequest>https://elasticache.amazonaws.com/\n    ?Action=ModifyCacheSubnetGroup\n    &CacheSubnetGroupName=myCachesubnetgroup\n    &CacheSubnetGroupDescription=My%20modified%20CacheSubnetGroup\n    &Version=2013-06-15\n    &SignatureVersion=2\n    &SignatureMethod=HmacSHA256\n    &Timestamp=2011-02-15T18%3A14%3A49.482Z\n    &AWSAccessKeyId=<AWS Access Key ID>\n    &Signature=<Signature></queryrequest>\n            <queryresponse><ModifyCacheSubnetGroupResponse xmlns=\"http://elasticache.amazonaws.com/doc/2013-06-15/\">\n    <ModifyCacheSubnetGroupResult>\n            <CacheSubnetGroup>\n                <VpcId>990524496922</VpcId>\n                <CacheSubnetGroupDescription>My modified CacheSubnetGroup</CacheSubnetGroupDescription>\n                <CacheSubnetGroupName>myCachesubnetgroup</CacheSubnetGroupName>\n                <Subnets>\n                    <Subnet>\n                        <SubnetStatus>Active</SubnetStatus>\n                        <SubnetIdentifier>subnet-7c5b4115</SubnetIdentifier>\n                        <SubnetAvailabilityZone>\n                            <Name>us-east-1c</Name>\n                        </SubnetAvailabilityZone>\n                    </Subnet>\n                    <Subnet>\n                        <SubnetStatus>Active</SubnetStatus>\n                        <SubnetIdentifier>subnet-7b5b4112</SubnetIdentifier>\n                        <SubnetAvailabilityZone>\n                            <Name>us-east-1b</Name>\n                        </SubnetAvailabilityZone>\n                    </Subnet>\n                    <Subnet>\n                        <SubnetStatus>Active</SubnetStatus>\n                        <SubnetIdentifier>subnet-3ea6bd57</SubnetIdentifier>\n                        <SubnetAvailabilityZone>\n                            <Name>us-east-1d</Name>\n                        </SubnetAvailabilityZone>\n                    </Subnet>\n                </Subnets>\n            </CacheSubnetGroup>\n        </ModifyCacheSubnetGroupResult>\n        <ResponseMetadata>\n            <RequestId>ed662948-a57b-11df-9e38-7ffab86c801f</RequestId>\n        </ResponseMetadata>\n    </ModifyCacheSubnetGroupResponse></queryresponse>\n        </examples>\n    "
    },
    "ModifyReplicationGroup": {
      "name": "ModifyReplicationGroup",
      "input": {
        "shape_name": "ModifyReplicationGroupMessage",
        "type": "structure",
        "members": {
          "ReplicationGroupId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The identifier of the replication group to modify.</p>\n    ",
            "required": true
          },
          "ReplicationGroupDescription": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n<p>A description for the replication group. Maximum length is 255 characters.</p>\n   "
          },
          "CacheSecurityGroupNames": {
            "shape_name": "CacheSecurityGroupNameList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "CacheSecurityGroupName"
            },
            "documentation": "\n        <p>A list of cache security group names to authorize for the clusters in this replication\n            group. This change is asynchronously applied as soon as possible.</p>\n        <p>This parameter can be used only with replication groups containing cache clusters running outside of an Amazon\n            Virtual Private Cloud (VPC).</p>\n        <p>Constraints: Must contain no more than 255 alphanumeric characters. Must not be\n            \"Default\".</p>\n    "
          },
          "SecurityGroupIds": {
            "shape_name": "SecurityGroupIdsList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "SecurityGroupId"
            },
            "documentation": "\n        <p>Specifies the VPC Security Groups associated with the cache clusters in the replication group.</p>\n        <p>This parameter can be used only with replication groups containing cache clusters running in an Amazon Virtual\n            Private Cloud (VPC).</p>\n    "
          },
          "PreferredMaintenanceWindow": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The weekly time range (in UTC) during which replication group system maintenance can occur. Note that\n            system maintenance may result in an outage. This change is made immediately. If you are\n            moving this window to the current time, there must be at least 120 minutes between the\n            current time and end of the window to ensure that pending changes are applied.</p>\n    "
          },
          "NotificationTopicArn": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The Amazon Resource Name (ARN) of the SNS topic to which notifications will be sent.</p>\n        <note> The SNS topic owner must be same as the replication group owner. </note>\n    "
          },
          "CacheParameterGroupName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The name of the cache parameter group to apply to all of the cache nodes in this replication group. This change is\n            asynchronously applied as soon as possible for parameters when the\n            <i>ApplyImmediately</i> parameter is specified as <i>true</i> for this request.</p>\n    "
          },
          "NotificationTopicStatus": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The status of the Amazon SNS notification topic for the replication group. Notifications\n            are sent only if the status is <i>active</i>.</p>\n        <p>Valid values: <code>active</code> | <code>inactive</code></p>\n    "
          },
          "ApplyImmediately": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": "\n        <p>If <code>true</code>, this parameter causes the modifications in this request and any pending modifications\n            to be applied, asynchronously and as soon as possible, regardless of the\n            <i>PreferredMaintenanceWindow</i> setting for the replication group.</p>\n        <p>If <code>false</code>, then changes to the nodes in the replication group are applied on the next\n            maintenance reboot, or the next failure reboot, whichever occurs first.</p>\n        <p>Valid values: <code>true</code> | <code>false</code></p>\n        <p>Default: <code>false</code></p>        \n    "
          },
          "EngineVersion": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The upgraded version of the cache engine to be run on the nodes in the replication group..</p>\n    "
          },
          "AutoMinorVersionUpgrade": {
            "shape_name": "BooleanOptional",
            "type": "boolean",
            "documentation": "\n        <p>Determines whether minor engine upgrades will be applied automatically to all of the\n            cache nodes in the replication group during the maintenance window. A value of\n            <code>true</code> allows these upgrades to occur; <code>false</code> disables\n            automatic upgrades.</p>\n    "
          },
          "PrimaryClusterId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n<p>If this parameter is specified, ElastiCache will promote each of the nodes in the specified cache cluster to the primary role. The nodes of all other clusters in the replication group will be read replicas.</p>\n   "
          }
        },
        "documentation": "\n        <p>Represents the input of a <i>ModifyReplicationGroups</i> operation.</p>\n    "
      },
      "output": {
        "shape_name": "ReplicationGroupWrapper",
        "type": "structure",
        "members": {
          "ReplicationGroup": {
            "shape_name": "ReplicationGroup",
            "type": "structure",
            "members": {
              "ReplicationGroupId": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The identifier for the replication group.</p>        \n    "
              },
              "Description": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The description of the replication group.</p>        \n    "
              },
              "Status": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The current state of this replication group - <i>creating</i>, <i>available</i>, etc.</p>\n    "
              },
              "PendingModifiedValues": {
                "shape_name": "ReplicationGroupPendingModifiedValues",
                "type": "structure",
                "members": {
                  "PrimaryClusterId": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>The primary cluster ID which will be applied immediately (if <code>--apply-immediately</code> was specified), or during\n            the next maintenance window.</p>\n    "
                  }
                },
                "documentation": "\n        <p>A group of settings to be applied to the replication group, either immediately or during the next maintenance window.</p>\n    "
              },
              "MemberClusters": {
                "shape_name": "ClusterIdList",
                "type": "list",
                "members": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": null,
                  "xmlname": "ClusterId"
                },
                "documentation": "\n        <p>The names of all the cache clusters that are part of this replication group.</p>        \n    "
              },
              "NodeGroups": {
                "shape_name": "NodeGroupList",
                "type": "list",
                "members": {
                  "shape_name": "NodeGroup",
                  "type": "structure",
                  "members": {
                    "NodeGroupId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The identifier for the node group. A replication group contains only one node group; therefore, the node group ID is 0001.</p>\n    "
                    },
                    "Status": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The current state of this replication group - <i>creating</i>, <i>available</i>, etc.</p>\n    "
                    },
                    "PrimaryEndpoint": {
                      "shape_name": "Endpoint",
                      "type": "structure",
                      "members": {
                        "Address": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": "\n        <p>The DNS hostname of the cache node.</p>\n    "
                        },
                        "Port": {
                          "shape_name": "Integer",
                          "type": "integer",
                          "documentation": "\n        <p>The port number that the cache engine is listening on.</p>\n    "
                        }
                      },
                      "documentation": "\n        <p>Represents the information required for client programs to connect to a cache node.</p>\n    "
                    },
                    "NodeGroupMembers": {
                      "shape_name": "NodeGroupMemberList",
                      "type": "list",
                      "members": {
                        "shape_name": "NodeGroupMember",
                        "type": "structure",
                        "members": {
                          "CacheClusterId": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "\n        <p>The ID of the cache cluster to which the node belongs.</p>        \n    "
                          },
                          "CacheNodeId": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "\n        <p>The ID of the node within its cache cluster. A node ID is a numeric identifier (0001, 0002, etc.).</p>        \n    "
                          },
                          "ReadEndpoint": {
                            "shape_name": "Endpoint",
                            "type": "structure",
                            "members": {
                              "Address": {
                                "shape_name": "String",
                                "type": "string",
                                "documentation": "\n        <p>The DNS hostname of the cache node.</p>\n    "
                              },
                              "Port": {
                                "shape_name": "Integer",
                                "type": "integer",
                                "documentation": "\n        <p>The port number that the cache engine is listening on.</p>\n    "
                              }
                            },
                            "documentation": "\n        <p>Represents the information required for client programs to connect to a cache node.</p>\n    "
                          },
                          "PreferredAvailabilityZone": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "\n        <p>The name of the Availability Zone in which the node is located.</p>\n    "
                          },
                          "CurrentRole": {
                            "shape_name": "String",
                            "type": "string",
                            "documentation": "\n        <p>The role that is currently assigned to the node - <i>primary</i> or <i>replica</i>.</p>        \n    "
                          }
                        },
                        "documentation": "\n        <p>Represents a single node within a node group.</p>\n    ",
                        "xmlname": "NodeGroupMember"
                      },
                      "documentation": "\n        <p>A list containing information about individual nodes within the node group.</p>        \n    "
                    }
                  },
                  "documentation": "\n        <p>Represents a collection of cache nodes in a replication group.</p>\n    ",
                  "xmlname": "NodeGroup"
                },
                "documentation": "\n        <p>A single element list with information about the nodes in the replication group.</p>\n    "
              }
            },
            "wrapper": true,
            "documentation": "\n        <p>Contains all of the attributes of a specific replication group.</p>\n    "
          }
        }
      },
      "errors": [
        {
          "shape_name": "ReplicationGroupNotFoundFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The specified replication group does not exist.</p>\n    "
        },
        {
          "shape_name": "InvalidReplicationGroupStateFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The requested replication group is not in the <i>available</i> state.</p>        \n    "
        },
        {
          "shape_name": "InvalidCacheClusterStateFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The requested cache cluster is not in the <i>available</i> state.</p>\n    "
        },
        {
          "shape_name": "InvalidCacheSecurityGroupStateFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The current state of the cache security group does not allow deletion.</p>\n    "
        },
        {
          "shape_name": "CacheClusterNotFoundFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The requested cache cluster ID does not refer to an existing cache cluster.</p>\n    "
        },
        {
          "shape_name": "CacheSecurityGroupNotFoundFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>\n            The requested cache security group name does not refer to an existing cache security group.</p>\n    "
        },
        {
          "shape_name": "CacheParameterGroupNotFoundFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>\n            The requested cache parameter group name does not refer to an existing cache parameter group.</p>\n    "
        },
        {
          "shape_name": "InvalidVPCNetworkStateFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The VPC network is in an invalid state.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterValueException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>A parameter value is invalid.</p>\n    "
            }
          },
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterCombinationException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>Two or more parameters that must not be used together were used together.</p>\n    "
            }
          },
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n    "
        }
      ],
      "documentation": "\n        <p>The <i>ModifyReplicationGroup</i> operation modifies the settings for a replication group.</p>\n    "
    },
    "PurchaseReservedCacheNodesOffering": {
      "name": "PurchaseReservedCacheNodesOffering",
      "input": {
        "shape_name": "PurchaseReservedCacheNodesOfferingMessage",
        "type": "structure",
        "members": {
          "ReservedCacheNodesOfferingId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The ID of the reserved cache node offering to purchase.</p>\n        <p>Example: 438012d3-4052-4cc7-b2e3-8d3372e0e706</p>\n    ",
            "required": true
          },
          "ReservedCacheNodeId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>A customer-specified identifier to track this reservation.</p>\n        <p>Example: myreservationID</p>\n    "
          },
          "CacheNodeCount": {
            "shape_name": "IntegerOptional",
            "type": "integer",
            "documentation": "\n        <p>The number of cache node instances to reserve.</p>\n        <p>Default: <code>1</code></p>\n    "
          }
        },
        "documentation": "\n        <p>Represents the input of a <i>PurchaseReservedCacheNodesOffering</i> operation.</p>\n    "
      },
      "output": {
        "shape_name": "ReservedCacheNodeWrapper",
        "type": "structure",
        "members": {
          "ReservedCacheNode": {
            "shape_name": "ReservedCacheNode",
            "type": "structure",
            "members": {
              "ReservedCacheNodeId": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The unique identifier for the reservation.</p>\n    "
              },
              "ReservedCacheNodesOfferingId": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The offering identifier.</p>\n    "
              },
              "CacheNodeType": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The cache node type for the reserved cache nodes.</p>\n    "
              },
              "StartTime": {
                "shape_name": "TStamp",
                "type": "timestamp",
                "documentation": "\n        <p>The time the reservation started.</p>\n    "
              },
              "Duration": {
                "shape_name": "Integer",
                "type": "integer",
                "documentation": "\n        <p>The duration of the reservation in seconds.</p>\n    "
              },
              "FixedPrice": {
                "shape_name": "Double",
                "type": "double",
                "documentation": "\n        <p>The fixed price charged for this reserved cache node.</p>\n    "
              },
              "UsagePrice": {
                "shape_name": "Double",
                "type": "double",
                "documentation": "\n        <p>The hourly price charged for this reserved cache node.</p>\n    "
              },
              "CacheNodeCount": {
                "shape_name": "Integer",
                "type": "integer",
                "documentation": "\n        <p>The number of cache nodes that have been reserved.</p>\n    "
              },
              "ProductDescription": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The description of the reserved cache node.</p>\n    "
              },
              "OfferingType": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The offering type of this reserved cache node.</p>\n    "
              },
              "State": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The state of the reserved cache node.</p>\n    "
              },
              "RecurringCharges": {
                "shape_name": "RecurringChargeList",
                "type": "list",
                "members": {
                  "shape_name": "RecurringCharge",
                  "type": "structure",
                  "members": {
                    "RecurringChargeAmount": {
                      "shape_name": "Double",
                      "type": "double",
                      "documentation": "\n        <p>The monetary amount of the recurring charge.</p>\n    "
                    },
                    "RecurringChargeFrequency": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The frequency of the recurring charge.</p>\n    "
                    }
                  },
                  "wrapper": true,
                  "documentation": "\n        <p>Contains the specific price and frequency of a recurring charges for a reserved cache\n            node, or for a reserved cache node offering.</p>\n    ",
                  "xmlname": "RecurringCharge"
                },
                "documentation": "\n        <p>The recurring price charged to run this reserved cache node.</p>\n    "
              }
            },
            "wrapper": true,
            "documentation": "\n        <p>Represents the output of a <i>PurchaseReservedCacheNodesOffering</i> operation.</p>\n    "
          }
        }
      },
      "errors": [
        {
          "shape_name": "ReservedCacheNodesOfferingNotFoundFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The requested cache node offering  does not exist.</p>\n    "
        },
        {
          "shape_name": "ReservedCacheNodeAlreadyExistsFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>This user already has a reservation with the given identifier.</p>\n    "
        },
        {
          "shape_name": "ReservedCacheNodeQuotaExceededFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The request cannot be processed because it would exceed the user's cache node quota.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterValueException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>A parameter value is invalid.</p>\n    "
            }
          },
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterCombinationException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>Two or more parameters that must not be used together were used together.</p>\n    "
            }
          },
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n    "
        }
      ],
      "documentation": "\n        <p>The <i>PurchaseReservedCacheNodesOffering</i> operation allows you to purchase a reserved cache node offering.</p>\n        <examples>\n            <queryrequest>https://elasticache.amazonaws.com/\n   ?Action=PurchaseReservedCacheNodesOffering\n   &ReservedCacheNodeId=myreservationID\n   &ReservedCacheNodesOfferingId=438012d3-4052-4cc7-b2e3-8d3372e0e706\n   &CacheNodeCount=1\n   &SignatureVersion=2\n   &SignatureMethod=HmacSHA256\n   &Timestamp=2011-05-10T18%3A31%3A36.118Z\n   &AWSAccessKeyId=<AWS Access Key ID>\n   &Signature=<Signature></queryrequest>\n            <queryresponse><PurchaseReservedCacheNodesOfferingResponse xmlns=\"http://elasticache.amazonaws.com/doc/2013-06-15/\">\n  <PurchaseReservedCacheNodesOfferingResult>\n    <ReservedCacheNode>\n      <OfferingType>Medium Utilization</OfferingType>\n      <RecurringCharges/>\n      <ProductDescription>memcached</ProductDescription>\n      <ReservedCacheNodesOfferingId> 438012d3-4052-4cc7-b2e3-8d3372e0e706</ReservedCacheNodesOfferingId>\n      <State>payment-pending</State>\n      <ReservedCacheNodeId>myreservationID</ReservedCacheNodeId>\n      <CacheNodeCount>10</CacheNodeCount>\n      <StartTime>2011-12-18T23:24:56.577Z</StartTime>\n      <Duration>31536000</Duration>\n      <FixedPrice>123.0</FixedPrice>\n      <UsagePrice>0.123</UsagePrice>\n      <CacheNodeType>cache.m1.small</CacheNodeType>\n    </ReservedCacheNode>\n  </PurchaseReservedCacheNodesOfferingResult>\n  <ResponseMetadata>\n    <RequestId>7f099901-29cf-11e1-bd06-6fe008f046c3</RequestId>\n  </ResponseMetadata>\n</PurchaseReservedCacheNodesOfferingResponse>\n</queryresponse>\n        </examples>\n    "
    },
    "RebootCacheCluster": {
      "name": "RebootCacheCluster",
      "input": {
        "shape_name": "RebootCacheClusterMessage",
        "type": "structure",
        "members": {
          "CacheClusterId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The cache cluster identifier. This parameter is stored as a lowercase string.</p>\n    ",
            "required": true
          },
          "CacheNodeIdsToReboot": {
            "shape_name": "CacheNodeIdsList",
            "type": "list",
            "members": {
              "shape_name": "String",
              "type": "string",
              "documentation": null,
              "xmlname": "CacheNodeId"
            },
            "documentation": "\n        <p>A list of cache cluster node IDs to reboot. A node ID is a numeric identifier (0001, 0002, etc.). To reboot an entire cache cluster, specify\n            all of the cache cluster node IDs.</p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>Represents the input of a <i>RebootCacheCluster</i> operation.</p>\n    "
      },
      "output": {
        "shape_name": "CacheClusterWrapper",
        "type": "structure",
        "members": {
          "CacheCluster": {
            "shape_name": "CacheCluster",
            "type": "structure",
            "members": {
              "CacheClusterId": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The user-supplied identifier of the cache cluster. This is a unique key that identifies\n            a cache cluster.</p>\n    "
              },
              "ConfigurationEndpoint": {
                "shape_name": "Endpoint",
                "type": "structure",
                "members": {
                  "Address": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>The DNS hostname of the cache node.</p>\n    "
                  },
                  "Port": {
                    "shape_name": "Integer",
                    "type": "integer",
                    "documentation": "\n        <p>The port number that the cache engine is listening on.</p>\n    "
                  }
                },
                "documentation": "\n        <p>Represents the information required for client programs to connect to a cache node.</p>\n    "
              },
              "ClientDownloadLandingPage": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The URL of the web page where you can download the latest ElastiCache client library.</p>\n    "
              },
              "CacheNodeType": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The name of the compute and memory capacity node type for the cache cluster.</p>\n    "
              },
              "Engine": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The name of the cache engine (<i>memcached</i> or <i>redis</i>) to be used for this cache cluster.</p>\n    "
              },
              "EngineVersion": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The version of the cache engine version that is used in this cache cluster.</p>\n    "
              },
              "CacheClusterStatus": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The current state of this cache cluster - <i>creating</i>, <i>available</i>, etc.</p>\n    "
              },
              "NumCacheNodes": {
                "shape_name": "IntegerOptional",
                "type": "integer",
                "documentation": "\n        <p>The number of cache nodes in the cache cluster.</p>\n    "
              },
              "PreferredAvailabilityZone": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The name of the Availability Zone in which the cache cluster is located.</p>\n    "
              },
              "CacheClusterCreateTime": {
                "shape_name": "TStamp",
                "type": "timestamp",
                "documentation": "\n        <p>The date and time the cache cluster was created.</p>\n    "
              },
              "PreferredMaintenanceWindow": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The time range (in UTC) during which weekly system maintenance can occur.</p>\n    "
              },
              "PendingModifiedValues": {
                "shape_name": "PendingModifiedValues",
                "type": "structure",
                "members": {
                  "NumCacheNodes": {
                    "shape_name": "IntegerOptional",
                    "type": "integer",
                    "documentation": "\n        <p>The new number of cache nodes for the cache cluster.</p>\n    "
                  },
                  "CacheNodeIdsToRemove": {
                    "shape_name": "CacheNodeIdsList",
                    "type": "list",
                    "members": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "CacheNodeId"
                    },
                    "documentation": "\n        <p>A list of cache node IDs that are being removed (or will be removed) from the cache cluster. A node ID is a numeric identifier (0001, 0002, etc.).</p>\n    "
                  },
                  "EngineVersion": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>The new cache engine version that the cache cluster will run.</p>\n    "
                  }
                },
                "documentation": "\n        <p>A group of settings that will be applied to the cache cluster in the future, or that are currently being applied.</p>\n    "
              },
              "NotificationConfiguration": {
                "shape_name": "NotificationConfiguration",
                "type": "structure",
                "members": {
                  "TopicArn": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>The Amazon Resource Name (ARN) that identifies the topic.</p>\n    "
                  },
                  "TopicStatus": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>The current state of the topic.</p>\n    "
                  }
                },
                "documentation": "\n        <p>Describes a notification topic and its status. Notification topics are used for publishing ElastiCache events to subscribers using Amazon Simple Notification Service (SNS).</p>\n    "
              },
              "CacheSecurityGroups": {
                "shape_name": "CacheSecurityGroupMembershipList",
                "type": "list",
                "members": {
                  "shape_name": "CacheSecurityGroupMembership",
                  "type": "structure",
                  "members": {
                    "CacheSecurityGroupName": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The name of the cache security group.</p>\n    "
                    },
                    "Status": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The membership status in the cache security group. The status changes when a cache\n            security group is modified, or when the cache security groups assigned to a cache\n            cluster are modified.</p>\n    "
                    }
                  },
                  "documentation": "\n        <p>Represents a cache cluster's status within a particular cache security group.</p>\n    ",
                  "xmlname": "CacheSecurityGroup"
                },
                "documentation": "\n        <p>A list of cache security group elements, composed of name and status sub-elements.</p>\n    "
              },
              "CacheParameterGroup": {
                "shape_name": "CacheParameterGroupStatus",
                "type": "structure",
                "members": {
                  "CacheParameterGroupName": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>The name of the cache parameter group.</p>\n    "
                  },
                  "ParameterApplyStatus": {
                    "shape_name": "String",
                    "type": "string",
                    "documentation": "\n        <p>The status of parameter updates.</p>\n    "
                  },
                  "CacheNodeIdsToReboot": {
                    "shape_name": "CacheNodeIdsList",
                    "type": "list",
                    "members": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": null,
                      "xmlname": "CacheNodeId"
                    },
                    "documentation": "\n        <p>A list of the cache node IDs which need to be rebooted for parameter changes to be\n            applied. A node ID is a numeric identifier (0001, 0002, etc.).</p>\n    "
                  }
                },
                "documentation": "\n        <p>The status of the cache parameter group.</p>\n    "
              },
              "CacheSubnetGroupName": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The name of the cache subnet group associated with the cache cluster.</p>\n    "
              },
              "CacheNodes": {
                "shape_name": "CacheNodeList",
                "type": "list",
                "members": {
                  "shape_name": "CacheNode",
                  "type": "structure",
                  "members": {
                    "CacheNodeId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The cache node identifier. A node ID is a numeric identifier (0001, 0002, etc.). The\n            combination of cluster ID and node ID uniquely identifies every cache node used in a\n            customer's AWS account.</p>\n    "
                    },
                    "CacheNodeStatus": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The current state of this cache node.</p>\n    "
                    },
                    "CacheNodeCreateTime": {
                      "shape_name": "TStamp",
                      "type": "timestamp",
                      "documentation": "\n        <p>The date and time the cache node was created.</p>\n    "
                    },
                    "Endpoint": {
                      "shape_name": "Endpoint",
                      "type": "structure",
                      "members": {
                        "Address": {
                          "shape_name": "String",
                          "type": "string",
                          "documentation": "\n        <p>The DNS hostname of the cache node.</p>\n    "
                        },
                        "Port": {
                          "shape_name": "Integer",
                          "type": "integer",
                          "documentation": "\n        <p>The port number that the cache engine is listening on.</p>\n    "
                        }
                      },
                      "documentation": "\n        <p>The hostname and IP address for connecting to this cache node.</p>\n    "
                    },
                    "ParameterGroupStatus": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The status of the parameter group applied to this cache node.</p>\n    "
                    },
                    "SourceCacheNodeId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The ID of the primary node to which this read replica node is synchronized. If this field is empty, then this\n            node is not associated with a primary cache cluster.</p>      \n    "
                    }
                  },
                  "documentation": "\n        <p>Represents an individual cache node within a cache cluster. Each cache node runs its own\n            instance of the cluster's protocol-compliant caching software - either Memcached or\n            Redis.</p>\n    ",
                  "xmlname": "CacheNode"
                },
                "documentation": "\n        <p>A list of cache nodes that are members of the cache cluster.</p>\n    "
              },
              "AutoMinorVersionUpgrade": {
                "shape_name": "Boolean",
                "type": "boolean",
                "documentation": "\n        <p>If <code>true</code>, then minor version patches are applied automatically; if\n                <code>false</code>, then automatic minor version patches are disabled.</p>\n    "
              },
              "SecurityGroups": {
                "shape_name": "SecurityGroupMembershipList",
                "type": "list",
                "members": {
                  "shape_name": "SecurityGroupMembership",
                  "type": "structure",
                  "members": {
                    "SecurityGroupId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The identifier of the cache security group.</p>\n    "
                    },
                    "Status": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The status of the cache security group membership. The status changes whenever a cache\n            security group is modified, or when the cache security groups assigned to a cache\n            cluster are modified.</p>\n    "
                    }
                  },
                  "documentation": "\n        <p>Represents a single cache security group and its status..</p>\n    "
                },
                "documentation": "\n        <p>A list of VPC Security Groups associated with the cache cluster.</p>\n    "
              },
              "ReplicationGroupId": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The replication group to which this cache cluster belongs. If this field is empty, the\n            cache cluster is not associated with any replication group.</p>        \n    "
              }
            },
            "wrapper": true,
            "documentation": "\n        <p>Contains all of the attributes of a specific cache cluster.</p>\n    "
          }
        }
      },
      "errors": [
        {
          "shape_name": "InvalidCacheClusterStateFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The requested cache cluster is not in the <i>available</i> state.</p>\n    "
        },
        {
          "shape_name": "CacheClusterNotFoundFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The requested cache cluster ID does not refer to an existing cache cluster.</p>\n    "
        }
      ],
      "documentation": "\n        <p>The <i>RebootCacheCluster</i> operation reboots some, or all, of the cache cluster nodes\n            within a provisioned cache cluster. This API will apply any modified cache parameter\n            groups to the cache cluster. The reboot action takes place as soon as possible, and\n            results in a momentary outage to the cache cluster. During the reboot, the cache cluster\n            status is set to REBOOTING.</p>\n        <p>The reboot causes the contents of the cache (for each cache cluster node being rebooted)\n            to be lost.</p>\n        <p>When the reboot is complete, a cache cluster event is created.</p>\n    "
    },
    "ResetCacheParameterGroup": {
      "name": "ResetCacheParameterGroup",
      "input": {
        "shape_name": "ResetCacheParameterGroupMessage",
        "type": "structure",
        "members": {
          "CacheParameterGroupName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The name of the cache parameter group to reset.</p>\n    ",
            "required": true
          },
          "ResetAllParameters": {
            "shape_name": "Boolean",
            "type": "boolean",
            "documentation": "\n        <p>If <i>true</i>, all parameters in the cache parameter group will be reset to default\n            values. If <i>false</i>, no such action occurs.</p>\n        <p>Valid values: <code>true</code> | <code>false</code></p>\n    "
          },
          "ParameterNameValues": {
            "shape_name": "ParameterNameValueList",
            "type": "list",
            "members": {
              "shape_name": "ParameterNameValue",
              "type": "structure",
              "members": {
                "ParameterName": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The name of the parameter.</p>\n    "
                },
                "ParameterValue": {
                  "shape_name": "String",
                  "type": "string",
                  "documentation": "\n        <p>The value of the parameter.</p>\n    "
                }
              },
              "documentation": "\n        <p>Describes a name-value pair that is used to update the value of a parameter.</p>\n    ",
              "xmlname": "ParameterNameValue"
            },
            "documentation": "\n        <p>An array of parameter names to be reset. If you are not  resetting the entire\n            cache parameter group, you must specify at least one parameter name.</p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>Represents the input of a <i>ResetCacheParameterGroup</i> operation.</p>\n    "
      },
      "output": {
        "shape_name": "CacheParameterGroupNameMessage",
        "type": "structure",
        "members": {
          "CacheParameterGroupName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The name of the cache parameter group.</p>\n    "
          }
        },
        "documentation": "\n        <p>Represents the output of one of the following operations:</p>\n        <ul>\n            <li>\n                <i>ModifyCacheParameterGroup</i>\n            </li>\n            <li>\n                <i>ResetCacheParameterGroup</i>\n            </li>\n        </ul>\n    "
      },
      "errors": [
        {
          "shape_name": "InvalidCacheParameterGroupStateFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The current state of the cache parameter group does not allow the requested action to\n            occur. </p>\n    "
        },
        {
          "shape_name": "CacheParameterGroupNotFoundFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>\n            The requested cache parameter group name does not refer to an existing cache parameter group.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterValueException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>A parameter value is invalid.</p>\n    "
            }
          },
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterCombinationException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>Two or more parameters that must not be used together were used together.</p>\n    "
            }
          },
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n    "
        }
      ],
      "documentation": "\n        <p>The <i>ResetCacheParameterGroup</i> operation modifies the parameters of a cache\n            parameter group to the engine or system default value. You can reset specific parameters\n            by submitting a list of parameter names. To reset the entire cache parameter group,\n            specify the <i>ResetAllParameters</i> and <i>CacheParameterGroupName</i> parameters.</p>\n    "
    },
    "RevokeCacheSecurityGroupIngress": {
      "name": "RevokeCacheSecurityGroupIngress",
      "input": {
        "shape_name": "RevokeCacheSecurityGroupIngressMessage",
        "type": "structure",
        "members": {
          "CacheSecurityGroupName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The name of the cache security group to revoke ingress from.</p>\n    ",
            "required": true
          },
          "EC2SecurityGroupName": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The name of the Amazon EC2 security group to revoke access from.</p>\n    ",
            "required": true
          },
          "EC2SecurityGroupOwnerId": {
            "shape_name": "String",
            "type": "string",
            "documentation": "\n        <p>The AWS account number of the Amazon EC2 security group owner. Note that this is not the same\n            thing as an AWS access key ID - you must provide a valid AWS account number for this\n            parameter.</p>\n    ",
            "required": true
          }
        },
        "documentation": "\n        <p>Represents the input of a <i>RevokeCacheSecurityGroupIngress</i> operation.</p>\n    "
      },
      "output": {
        "shape_name": "CacheSecurityGroupWrapper",
        "type": "structure",
        "members": {
          "CacheSecurityGroup": {
            "shape_name": "CacheSecurityGroup",
            "type": "structure",
            "members": {
              "OwnerId": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The AWS account ID of the cache security group owner.</p>\n    "
              },
              "CacheSecurityGroupName": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The name of the cache security group.</p>\n    "
              },
              "Description": {
                "shape_name": "String",
                "type": "string",
                "documentation": "\n        <p>The description of the cache security group.</p>\n    "
              },
              "EC2SecurityGroups": {
                "shape_name": "EC2SecurityGroupList",
                "type": "list",
                "members": {
                  "shape_name": "EC2SecurityGroup",
                  "type": "structure",
                  "members": {
                    "Status": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The status of the Amazon EC2 security group.</p>\n    "
                    },
                    "EC2SecurityGroupName": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n        <p>The name of the Amazon EC2 security group.</p>\n    "
                    },
                    "EC2SecurityGroupOwnerId": {
                      "shape_name": "String",
                      "type": "string",
                      "documentation": "\n       <p>The AWS account ID of the Amazon EC2 security group owner.</p>\n    "
                    }
                  },
                  "documentation": "\n        <p>Provides ownership and status information for an Amazon EC2 security group.</p>\n    ",
                  "xmlname": "EC2SecurityGroup"
                },
                "documentation": "\n        <p>A list of Amazon EC2 security groups that are associated with this cache security group.</p>\n    "
              }
            },
            "wrapper": true,
            "documentation": "\n        <p>Represents the output of one of the following operations:</p>\n        <ul>\n            <li>\n                <i>AuthorizeCacheSecurityGroupIngress</i>\n            </li>\n            <li>\n                <i>CreateCacheSecurityGroup</i>\n            </li>\n            <li>\n                <i>RevokeCacheSecurityGroupIngress</i>\n            </li>\n        </ul>\n    "
          }
        }
      },
      "errors": [
        {
          "shape_name": "CacheSecurityGroupNotFoundFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>\n            The requested cache security group name does not refer to an existing cache security group.</p>\n    "
        },
        {
          "shape_name": "AuthorizationNotFoundFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The specified Amazon EC2 security group is not authorized for the specified cache security\n            group.</p>\n    "
        },
        {
          "shape_name": "InvalidCacheSecurityGroupStateFault",
          "type": "structure",
          "members": {
          },
          "documentation": "\n        <p>The current state of the cache security group does not allow deletion.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterValueException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>A parameter value is invalid.</p>\n    "
            }
          },
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n    "
        },
        {
          "shape_name": "InvalidParameterCombinationException",
          "type": "structure",
          "members": {
            "message": {
              "shape_name": "AwsQueryErrorMessage",
              "type": "string",
              "documentation": "\n        <p>Two or more parameters that must not be used together were used together.</p>\n    "
            }
          },
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n    "
        }
      ],
      "documentation": "\n        <p>The <i>RevokeCacheSecurityGroupIngress</i> operation revokes ingress from a cache\n            security group. Use this operation to disallow access from an Amazon EC2 security group that\n            had been previously authorized.</p>\n        <examples>\n            <queryrequest>\nhttps://elasticache.us-east-1.amazonaws.com/\n   ?Action=RevokeCacheSecurityGroupIngress\n   &EC2SecurityGroupName=default\n   &CacheSecurityGroupName=mygroup\n   &EC2SecurityGroupOwnerId=1234-5678-1234\n   &Version=2013-06-15\n   &SignatureVersion=2\n   &SignatureMethod=HmacSHA256\n   &Timestamp=2011-07-27T02%3A30%3A08.444Z\n   &AWSAccessKeyId=YOUR-ACCESS-KEY\n   &Signature=YOUR-SIGNATURE</queryrequest>\n            <queryresponse>\n<RevokeCacheSecurityGroupIngressResponse xmlns=\"http://elasticache.amazonaws.com/doc/2013-06-15/\">\n    <RevokeCacheSecurityGroupIngressResult>\n        <CacheSecurityGroup>\n            <EC2SecurityGroups>\n                <EC2SecurityGroup>\n                    <Status>revoking</Status>\n                    <EC2SecurityGroupName>default</EC2SecurityGroupName>\n                    <EC2SecurityGroupOwnerId>123456781234</EC2SecurityGroupOwnerId>\n                </EC2SecurityGroup>\n            </EC2SecurityGroups>\n            <CacheSecurityGroupName>mygroup</CacheSecurityGroupName>\n            <OwnerId>123456789012</OwnerId>\n            <Description>My security group</Description>\n        </CacheSecurityGroup>\n    </RevokeCacheSecurityGroupIngressResult>\n    <ResponseMetadata>\n        <RequestId>02ae3699-3650-11e0-a564-8f11342c56b0</RequestId>\n    </ResponseMetadata>\n</RevokeCacheSecurityGroupIngressResponse>\n            </queryresponse>\n        </examples>\n    "
    }
  },
  "pagination": {
    "DescribeCacheClusters": {
      "input_token": "Marker",
      "output_token": "Marker",
      "limit_key": "MaxRecords",
      "result_key": "CacheClusters"
    },
    "DescribeCacheEngineVersions": {
      "input_token": "Marker",
      "output_token": "Marker",
      "limit_key": "MaxRecords",
      "result_key": "CacheEngineVersions"
    },
    "DescribeCacheParameterGroups": {
      "input_token": "Marker",
      "output_token": "Marker",
      "limit_key": "MaxRecords",
      "result_key": "CacheParameterGroups"
    },
    "DescribeCacheParameters": {
      "input_token": "Marker",
      "output_token": "Marker",
      "limit_key": "MaxRecords",
      "result_key": "Parameters"
    },
    "DescribeCacheSecurityGroups": {
      "input_token": "Marker",
      "output_token": "Marker",
      "limit_key": "MaxRecords",
      "result_key": "CacheSecurityGroups"
    },
    "DescribeCacheSubnetGroups": {
      "input_token": "Marker",
      "output_token": "Marker",
      "limit_key": "MaxRecords",
      "result_key": "CacheSubnetGroups"
    },
    "DescribeEngineDefaultParameters": {
      "input_token": "Marker",
      "output_token": "Marker",
      "limit_key": "MaxRecords",
      "result_key": "Parameters"
    },
    "DescribeEvents": {
      "input_token": "Marker",
      "output_token": "Marker",
      "limit_key": "MaxRecords",
      "result_key": "Events"
    },
    "DescribeReservedCacheNodes": {
      "input_token": "Marker",
      "output_token": "Marker",
      "limit_key": "MaxRecords",
      "result_key": "ReservedCacheNodes"
    },
    "DescribeReservedCacheNodesOfferings": {
      "input_token": "Marker",
      "output_token": "Marker",
      "limit_key": "MaxRecords",
      "result_key": "ReservedCacheNodesOfferings"
    }
  }
}
