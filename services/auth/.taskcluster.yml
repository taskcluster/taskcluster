version: 1
tasks:
  - $if: '(tasks_for == "github-pull-request"  && event["action"] in ["opened", "reopened", "synchronize"])'
    then:
      taskId: {$eval: as_slugid("pr_task")}
      created: {$fromNow: ''}
      deadline: {$fromNow: '1 hour'}
      provisionerId: aws-provisioner-v1
      workerType: github-worker
      scopes:
        - secrets:get:project/taskcluster/testing/taskcluster-auth
      payload:
        maxRunTime: 3600
        image: "node:8"
        env:
          NO_TEST_SKIP: true
          TEST_BUCKET: 'test-bucket-for-any-garbage'
        features:
          taskclusterProxy: true
        command:
          - "/bin/bash"
          - "--login"
          - "-c"
          - "git clone ${event.pull_request.head.repo.git_url} repo && cd repo && git checkout ${event.pull_request.head.sha} && yarn global add node-gyp && yarn install && yarn test"
      metadata:
        name: "Taskcluster Auth Tests"
        description: "All tests"
        owner: ${event.pull_request.user.login}@users.noreply.github.com
        source: ${event.repository.url}
  - $if: 'tasks_for == "github-push"'
    then:
      taskId: {$eval: as_slugid("push_task")}
      created: {$fromNow: ''}
      deadline: {$fromNow: '1 hour'}
      provisionerId: aws-provisioner-v1
      workerType: github-worker
      scopes:
        - secrets:get:project/taskcluster/testing/taskcluster-auth
      payload:
        maxRunTime: 3600
        image: "node:8"
        env:
          NO_TEST_SKIP: true
          TEST_BUCKET: 'test-bucket-for-any-garbage'
        features:
          taskclusterProxy: true
        command:
          - "/bin/bash"
          - "--login"
          - "-c"
          - "git clone ${event.repository.url} repo && cd repo && git checkout ${event.after} && yarn global add node-gyp && yarn install && yarn test"
      metadata:
        name: "Taskcluster Auth Tests"
        description: "All tests"
        owner: ${event.pusher.name}@users.noreply.github.com
        source: ${event.repository.url}