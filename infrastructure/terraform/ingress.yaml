apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: taskcluster-ingress
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
    - hosts: [{$eval: 'root_url[8:]'}]
      secretName: {$eval: 'root_url_tls_secret'}
  rules:
    # slice the leading `https://` off the rootUrl to get the hostname
  - host: {$eval: 'root_url[8:]'}
    http:
      paths:
        $flatten:
        - path: '/'
          backend:
            serviceName: taskcluster-ui
            servicePort: 80
        - path: '/references/'
          backend:
            serviceName: taskcluster-references
            servicePort: 80
        - path: '/schemas/'
          backend:
            serviceName: taskcluster-references
            servicePort: 80
        - path: '/graphql'
          backend:
            serviceName: taskcluster-web-server
            servicePort: 80
        - path: '/login'
          backend:
            serviceName: taskcluster-web-server
            servicePort: 80
        - $map:
            - {service_name: auth, project_name: taskcluster-auth}
            - {service_name: secrets, project_name: taskcluster-secrets}
            - {service_name: queue, project_name: taskcluster-queue}
            - {service_name: hooks, project_name: taskcluster-hooks}
            - {service_name: index, project_name: taskcluster-index}
            - {service_name: notify, project_name: taskcluster-notify}
            - {service_name: purge-cache, project_name: taskcluster-purge-cache}
            - {service_name: github, project_name: taskcluster-github}
            - {service_name: worker-manager, project_name: taskcluster-worker-manager}
          each(svc):
            $if: '!(svc.project_name in disabled_services)'
            then:
              path: '/api/${svc.service_name}/'
              backend:
                serviceName: ${svc.project_name}
                servicePort: 80
