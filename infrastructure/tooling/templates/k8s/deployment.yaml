apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${projectName}-${lowercase(procName)}
  labels: {$eval: labels}
spec:
  replicas: REPLICA_CONFIG_STRING
  selector:
      matchLabels: {$eval: labels}
  template:
    metadata:
      annotations:
        checksum/secret: '{{ include (print $.Template.BasePath "/${projectName}-secret.yaml") . | sha256sum }}'
      labels: {$eval: labels}
    spec:
      serviceAccountName: ${projectName}
      imagePullSecrets: IMAGE_PULL_SECRETS_STRING
      containers:
      - name: ${projectName}-${lowercase(procName)}
        image: '{{ .Values.dockerImage }}'
        imagePullPolicy: Always
        args: ['${serviceName}/${procName}']
        resources:
          requests:
            cpu: '{{ .Values.${configName}.procs.${configProcName}.cpu }}'
            memory: '{{ .Values.${configName}.procs.${configProcName}.memory }}'
        env:
          $flatten:
            - $if: 'needsService'
              then:
                name: PORT
                value: '80'
            - name: TASKCLUSTER_ROOT_URL
              value: '{{ .Values.rootUrl }}'
            - name: USE_KUBERNETES_DNS_SERVICE_DISCOVERY
              value: '{{ .Values.useKubernetesDnsServiceDiscovery }}'
            - name: NODE_ENV
              value: 'production'
        envFrom:
            - secretRef:
                name: ${projectName}
        ports:
        - $if: 'needsService'
          then:
            containerPort: 80
        readinessProbe:
          $if: 'needsService'
          then:
            httpGet:
              path: ${readinessPath}
              port: 80
            timeoutSeconds: 5
            periodSeconds: 10
            initialDelaySeconds: 3
        # After 24 hours, we start randomly deciding to exit the container.
        # Taskcluster services are created with the assumption that they will
        # not run indefinitely.
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exit $(awk 'BEGIN{srand(); print (rand() > 0.3)}')
          initialDelaySeconds: 86400
          periodSeconds: 60
          failureThreshold: 1
