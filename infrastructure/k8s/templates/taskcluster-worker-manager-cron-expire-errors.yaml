apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: taskcluster-worker-manager-expire-errors
  labels: &ref_0
    app.kubernetes.io/name: taskcluster-worker-manager
    app.kubernetes.io/instance: '{{ .Release.Name }}'
    app.kubernetes.io/component: taskcluster-worker-manager-expire-errors
    app.kubernetes.io/part-of: taskcluster
spec:
  concurrencyPolicy: Forbid
  schedule: 10 0 * * *
  jobTemplate:
    metadata:
      labels: *ref_0
    spec:
      activeDeadlineSeconds: 86340
      template:
        metadata:
          labels: *ref_0
        spec:
          restartPolicy: OnFailure
          imagePullSecrets: {{ if .Values.imagePullSecret }}{{ toJson (list (dict "name" .Values.imagePullSecret)) }}{{ else }}[]{{ end }}
          containers:
            - name: taskcluster-worker-manager-expire-errors
              image: '{{ .Values.dockerImage }}'
              imagePullPolicy: Always
              args:
                - worker-manager/expire-errors
              resources:
                requests:
                  cpu: '{{ .Values.worker_manager.procs.expire_errors.cpu }}'
                  memory: '{{ .Values.worker_manager.procs.expire_errors.memory }}'
              env:
                - name: TASKCLUSTER_ROOT_URL
                  value: '{{ .Values.rootUrl }}'
                - name: USE_KUBERNETES_DNS_SERVICE_DISCOVERY
                  value: '{{ .Values.useKubernetesDnsServiceDiscovery }}'
                - name: NODE_ENV
                  value: production
              envFrom:
                - secretRef:
                    name: taskcluster-worker-manager
