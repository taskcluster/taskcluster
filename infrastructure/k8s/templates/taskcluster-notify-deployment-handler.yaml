apiVersion: apps/v1
kind: Deployment
metadata:
  name: taskcluster-notify-handler
  labels: &ref_0
    app.kubernetes.io/name: taskcluster-notify
    app.kubernetes.io/instance: '{{ .Release.Name }}'
    app.kubernetes.io/component: taskcluster-notify-handler
    app.kubernetes.io/part-of: taskcluster
spec:
  replicas: {{ int (.Values.notify.procs.handler.replicas) }}
  selector:
    matchLabels: *ref_0
  template:
    metadata:
      annotations:
        checksum/secret: '{{ include (print $.Template.BasePath "/taskcluster-notify-secret.yaml") . | sha256sum }}'
      labels: *ref_0
    spec:
      serviceAccountName: taskcluster-notify
      imagePullSecrets: {{ if .Values.imagePullSecret }}{{ toJson (list (dict "name" .Values.imagePullSecret)) }}{{ else }}[]{{ end }}
      containers:
        - name: taskcluster-notify-handler
          image: '{{ .Values.dockerImage }}'
          imagePullPolicy: Always
          args:
            - notify/handler
          resources:
            requests:
              cpu: '{{ .Values.notify.procs.handler.cpu }}'
              memory: '{{ .Values.notify.procs.handler.memory }}'
          env:
            - name: TASKCLUSTER_ROOT_URL
              value: '{{ .Values.rootUrl }}'
            - name: USE_KUBERNETES_DNS_SERVICE_DISCOVERY
              value: '{{ .Values.useKubernetesDnsServiceDiscovery }}'
            - name: NODE_ENV
              value: production
          envFrom:
            - secretRef:
                name: taskcluster-notify
          ports: []
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - '-c'
                - exit $(awk 'BEGIN{srand(); print (rand() > 0.3)}')
            initialDelaySeconds: 86400
            periodSeconds: 60
            failureThreshold: 1
