$schema: "/schemas/common/metaschema.json#"
$id: "/schemas/common/metadata-metaschema.json#"
title: "JSON-Schema Meta-Schema, with the addition of a `metadata` property"
description: |
  This is a refinement of the Taskcluster metaschema, with the following changes:

    * top level must be an object (no trivial true or false schemas)
    * `{metadata: {name, version}}` must be present at the top level

  Note that any schema that validates against this metaschema will also
  validate against the upstream draft-06 metaschema, and is usable by any
  JSON-schema tool.
definitions:
  # require that every schema have a top-level metadata metaschema
  topLevelMetadata:
    type: object
    properties:
      metadata:
        title: "Metadata for this schema"
        description: |
          Metadata identifying the documents that the schema document describes,
          giving both a name (a category of document) and a version (to allow
          several versions of the same category).  Consumers of the documents can
          consult the schema metadata to determine how to process the document.
    
          Any changes to a schema that require changes to consumers of the described
          documents should be accompanied by a version increase.
        type: object
        properties:
          name:
            title: "Name of the document category"
            description: |
              This is used to identify the category of document for later consumption.
              It is also used to determine schema id's.  Common values for Taskcluster
              references are `manifest`, `exchanges`, and `api`.
            type: string
          version:
            title: "Version of the document format"
            type: integer
        additionalProperties: false
        required:
          - version
          - name
    additionalProperties: true
    required:
      - metadata

allOf:
  - {$ref: "./metaschema.json#"}
  - {$ref: "#/definitions/topLevelMetadata"}
