---
loader: taskgraph.loader.transform:loader

transforms:
  - src.transforms:add_task_env
  - src.transforms:parameterize_mounts
  - taskgraph.transforms.job:transforms
  - taskgraph.transforms.task:transforms

task-defaults:
  worker-type: release
  worker:
    max-run-time: 3600
    taskcluster-proxy: true
    artifacts:
      - path: taskcluster/release-debug-logs
        name: debug-logs # Note: this should never be public because who knows what is in here
        type: directory
    mounts:
      - content:
          url: 'https://storage.googleapis.com/golang/{go_version}.linux-amd64.tar.gz'
        directory: 'go'
        format: tar.gz
      - content:
          url: 'https://static.rust-lang.org/dist/rust-{rust_version}-x86_64-unknown-linux-gnu.tar.gz'
        directory: 'rust'
        format: tar.gz
  description: Perform an actual taskcluster release
  run:
    using: bare
    install:
      # set up golang..
      - export GOROOT="$(pwd)/go/go"
      - export GOPATH="$(pwd)/go/path"
      - mkdir -p ${{GOPATH}}
      - export PATH="${{GOROOT}}/bin:${{GOPATH}}/bin:${{PATH}}"
      - go version
      # set up gox
      - go install github.com/mitchellh/gox@latest
      # set up rust, based on the mounted tarball
      - "./rust/rust-$RUST_VERSION-x86_64-unknown-linux-gnu/install.sh"
      # set up Node, using nvm (generic-worker does not support .xz, so we can't use mounts)
      - curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash
      - . ~/.nvm/nvm.sh
      - nvm install $NODE_VERSION
      # set up yarn
      - curl -o- -L https://yarnpkg.com/install.sh | bash
      - export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
      # clone the repo (shallow won't work here as it misses tags)
      - git clone --quiet --no-single-branch --tags {head_repository} taskcluster
      - cd taskcluster
      - git checkout {head_rev}
      # publish the release
      - yarn --immutable

tasks:
  publish:

    attributes:
      only-on: release
    run:
      command: yarn release:publish --logs-dir $(pwd)/release-debug-logs
    routes:
      # TODO: (taskcluster/taskcluster#3684) replace with on-resolved
      - notify.email.taskcluster-notifications@mozilla.com.on-any
    scopes:
      - secrets:get:project/taskcluster/release
    extra:
      notify:
        email:
          subject: Taskcluster Release Status

  staging:
    attributes:
      only-on: staging-release
    scopes:
      - secrets:get:project/taskcluster/staging-release
    run:
      command: yarn release:publish --logs-dir $(pwd)/release-debug-logs --staging {head_ref}
