---
loader: taskgraph.loader.transform:loader

transforms:
  - src.transforms:taskcluster_image_versions
  - src.transforms:add_task_env
  - src.transforms:podman_run
  - taskgraph.transforms.job:transforms
  - taskgraph.transforms.task:transforms

task-defaults:
  worker-type: gw-ubuntu-22-04
  run:
    using: bare
  worker:
    max-run-time: 600
    taskcluster-proxy: true
  scopes:
    - secrets:get:project/taskcluster/testing/client-libraries

tasks:
  nodejs:
    description: nodejs client tests
    docker-image: node:{node_version}
    run:
      command: >-
        {{ yarn --immutable || exit 99; }} &&
        eval $(python3 test/client-library-secrets.py) &&
        cd clients/client &&
        {{ yarn --immutable || exit 99; }} &&
        yarn test &&
        yarn package-test
  nodejs-client-external-test:
    description: nodejs client external tests
    docker-image: node:{node_version}
    run:
      command: >-
        {{ yarn --immutable || exit 99; }} &&
        eval $(python3 test/client-library-secrets.py) &&
        cd clients/client-test &&
        {{ yarn --immutable || exit 99; }} &&
        yarn test
  go:
    description: golang client tests
    docker-image: golang:{go_version}-bookworm
    run:
      command: >-
        eval $(python3 test/client-library-secrets.py) &&
        cd clients/client-go &&
        go test -v -race ./...
  shell:
    description: cli tests
    docker-image: golang:{go_version}-bookworm
    run:
      command: >-
        eval $(python3 test/client-library-secrets.py) &&
        cd clients/client-shell &&
        go test -v -race ./...
  web:
    description: web js tests
    docker-image: taskcluster/browser-test:{node_version}
    run:
      command: >-
        {{ yarn --immutable || exit \99; }} &&
        cd clients/client-web &&
        {{ yarn --immutable || exit 99; }} &&
        {{ Xvfb :99 -screen 0 640x480x8 -nolisten tcp & }} &&
        sleep 2 &&
        CHROME_BIN=firefox DISPLAY=:99 yarn test
  py38:
    description: python3.8 client tests
    docker-image: python:3.8
    run:
      command: >-
        eval $(python test/client-library-secrets.py) &&
        cd clients/client-py &&
        python3 -mvenv /sandbox &&
        /sandbox/bin/pip install tox &&
        TOXENV=py38 /sandbox/bin/tox
  py39:
    description: python3.9 client tests
    docker-image: python:3.9
    run:
      command: >-
        eval $(python test/client-library-secrets.py) &&
        cd clients/client-py &&
        python3 -mvenv /sandbox &&
        /sandbox/bin/pip install tox &&
        TOXENV=py39 /sandbox/bin/tox
  py310:
    description: python3.10 client tests
    docker-image: python:3.10
    run:
      command: >-
        eval $(python test/client-library-secrets.py) &&
        cd clients/client-py &&
        python3 -mvenv /sandbox &&
        /sandbox/bin/pip install tox &&
        TOXENV=py310 /sandbox/bin/tox
  py311:
    description: python3.11 client tests
    docker-image: python:3.11
    run:
      command: >-
        eval $(python test/client-library-secrets.py) &&
        cd clients/client-py &&
        python3 -mvenv /sandbox &&
        /sandbox/bin/pip install tox &&
        TOXENV=py311 /sandbox/bin/tox
  rust:
    description: rust client tests
    docker-image: rust:{rust_version}
    run:
      command: >-
        eval $(python3 test/client-library-secrets.py) &&
        cd clients/client-rust &&
        cargo test &&
        cargo build --release &&
        rustup component add rustfmt &&
        cargo fmt &&
        if ! output=$(git status --porcelain) || [ -n "$output" ]; then
            echo "*** cargo fmt produced changes to the repository; these changes should be checked in ***";
            git --no-pager diff;
            exit 1;
        fi
