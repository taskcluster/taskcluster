---
loader: taskgraph.loader.transform:loader

transforms:
  - src.transforms:taskcluster_images
  - src.transforms:add_task_env
  - taskgraph.transforms.job:transforms
  - taskgraph.transforms.task:transforms

job-defaults:
  worker-type: ci
  run:
    using: bare
  worker:
    max-run-time: 600
    taskcluster-proxy: true
  scopes:
    - secrets:get:project/taskcluster/testing/client-libraries

jobs:
  nodejs:
    description: nodejs client tests
    worker:
      docker-image: {taskcluster: ci-image}
    run:
      install: >-
        {{ yarn --frozen-lockfile || exit 99; }} &&
        eval $(python test/client-library-secrets.py) &&
        cd clients/client &&
        {{ yarn --frozen-lockfile || exit 99; }}
      command: >-
        yarn test &&
        yarn package-test
  go:
    description: golang client tests
    worker:
      docker-image: {taskcluster: ci-image}
    run:
      install: >-
        eval $(python test/client-library-secrets.py) &&
        cd clients/client-go
      command: go test -v -race ./...
  shell:
    description: cli tests
    worker:
      docker-image: {taskcluster: ci-image}
    run:
      install: >-
        eval $(python test/client-library-secrets.py) &&
        cd clients/client-shell
      command: go test -v -race ./...
  web:
    description: web js tests
    worker:
      docker-image: {taskcluster: browser-test}
    run:
      install: >-
          {{ yarn --frozen-lockfile || exit \99; }} &&
          cd clients/client-web &&
          {{ yarn --frozen-lockfile || exit 99; }}
      command: >-
          {{ Xvfb :99 -screen 0 640x480x8 -nolisten tcp & }} &&
          sleep 2 &&
          CHROME_BIN=firefox DISPLAY=:99 yarn test
  py36:
    description: python3.6 client tests
    worker:
      docker-image: python:3.6
    run:
      install: >-
          eval $(python test/client-library-secrets.py) &&
          cd clients/client-py &&
          python3 -mvenv /sandbox &&
          /sandbox/bin/pip install tox
      command: >-
          TOXENV=py36 /sandbox/bin/tox
  py37:
    description: python3.7 client tests
    worker:
      docker-image: python:3.7
    run:
      install: >-
          eval $(python test/client-library-secrets.py) &&
          cd clients/client-py &&
          python3 -mvenv /sandbox &&
          /sandbox/bin/pip install tox
      command: >-
          TOXENV=py37 /sandbox/bin/tox
  py38:
    description: python3.8 client tests
    worker:
      docker-image: python:3.8
    run:
      install: >-
          eval $(python test/client-library-secrets.py) &&
          cd clients/client-py &&
          python3 -mvenv /sandbox &&
          /sandbox/bin/pip install tox
      command: >-
          TOXENV=py38 /sandbox/bin/tox
  py39:
    description: python3.9 client tests
    worker:
      docker-image: python:3.9
    run:
      install: >-
          eval $(python test/client-library-secrets.py) &&
          cd clients/client-py &&
          python3 -mvenv /sandbox &&
          /sandbox/bin/pip install tox
      command: >-
          TOXENV=py39 /sandbox/bin/tox
  rust:
    description: rust client tests
    worker:
      docker-image: rust:1.60.0
    run:
      install: >-
        eval $(python3 test/client-library-secrets.py) &&
        cd clients/client-rust
      command: >-
        cargo test &&
        cargo build --release &&
        rustup component add rustfmt &&
        cargo fmt &&
        if ! output=$(git status --porcelain) || [ -n "$output" ]; then
            echo "*** cargo fmt produced changes to the repository; these changes should be checked in ***";
            git --no-pager diff;
            exit 1;
        fi
