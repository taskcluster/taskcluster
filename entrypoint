#! /bin/sh

# DO NOT EDIT. This is an autogenerated file.

case "${1}" in
auth/web) exec sh -c 'cd services/auth && node src/main server';;
auth/expireSentry) exec sh -c 'cd services/auth && node src/main expire-sentry';;
auth/purgeExpiredClients) exec sh -c 'cd services/auth && node src/main purge-expired-clients';;
auth/write-docs) exec sh -c 'cd services/auth && node src/main writeDocs';;
built-in-workers/server) exec sh -c 'cd services/built-in-workers && node src/main.js server';;
built-in-workers/write-docs) exec sh -c 'cd services/built-in-workers && node src/main.js writeDocs';;
github/web) exec sh -c 'cd services/github && node src/main server';;
github/worker) exec sh -c 'cd services/github && node src/main worker';;
github/sync) exec sh -c 'cd services/github && node src/main syncInstallations';;
github/write-docs) exec sh -c 'cd services/github && node src/main writeDocs';;
hooks/web) exec sh -c 'cd services/hooks && node src/main.js server';;
hooks/scheduler) exec sh -c 'cd services/hooks && node src/main.js scheduler';;
hooks/write-docs) exec sh -c 'cd services/hooks && node src/main.js writeDocs';;
hooks/listeners) exec sh -c 'cd services/hooks && node src/main.js listeners';;
hooks/expires) exec sh -c 'cd services/hooks && node src/main.js expires';;
index/web) exec sh -c 'cd services/index && node src/main server';;
index/handlers) exec sh -c 'cd services/index && node src/main handlers';;
index/expire) exec sh -c 'cd services/index && node src/main expire';;
index/write-docs) exec sh -c 'cd services/index && node src/main writeDocs';;
login/web) exec sh -c 'cd services/login && node src/main.js server';;
login/scanner) exec sh -c 'cd services/login && node src/main.js scanner';;
login/write-docs) exec sh -c 'cd services/login && node src/main writeDocs';;
notify/web) exec sh -c 'cd services/notify && node src/main server';;
notify/irc) exec sh -c 'cd services/notify && node src/main irc';;
notify/handler) exec sh -c 'cd services/notify && node src/main handler';;
notify/write-docs) exec sh -c 'cd services/notify && node src/main writeDocs';;
purge-cache/web) exec sh -c 'cd services/purge-cache && node src/main server';;
purge-cache/expireCachePurges) exec sh -c 'cd services/purge-cache && node src/main expire-cache-purges';;
purge-cache/write-docs) exec sh -c 'cd services/purge-cache && node src/main writeDocs';;
queue/web) exec sh -c 'cd services/queue && node src/main server';;
queue/write-docs) exec sh -c 'cd services/queue && node src/main writeDocs';;
queue/claimResolver) exec sh -c 'cd services/queue && node src/main claim-resolver';;
queue/deadlineResolver) exec sh -c 'cd services/queue && node src/main deadline-resolver';;
queue/dependencyResolver) exec sh -c 'cd services/queue && node src/main dependency-resolver';;
queue/expireArtifacts) exec sh -c 'cd services/queue && node src/main expire-artifacts';;
queue/expireTask) exec sh -c 'cd services/queue && node src/main expire-tasks';;
queue/expireTaskGroups) exec sh -c 'cd services/queue && node src/main expire-task-groups';;
queue/expireTaskGroupMembers) exec sh -c 'cd services/queue && node src/main expire-task-group-members';;
queue/expireTaskGroupSizes) exec sh -c 'cd services/queue && node src/main expire-task-group-sizes';;
queue/expireTaskDependency) exec sh -c 'cd services/queue && node src/main expire-task-dependency';;
queue/expireTaskRequirement) exec sh -c 'cd services/queue && node src/main expire-task-requirement';;
queue/expireQueues) exec sh -c 'cd services/queue && node src/main expire-queues';;
queue/expireWorkerInfo) exec sh -c 'cd services/queue && node src/main expire-worker-info';;
secrets/web) exec sh -c 'cd services/secrets && node src/main.js server';;
secrets/expire) exec sh -c 'cd services/secrets && node src/main.js expire';;
secrets/write-docs) exec sh -c 'cd services/secrets && node src/main.js writeDocs';;
web-server/web) exec sh -c 'cd services/web-server && node src/main.js server';;
web-server/scanner) exec sh -c 'cd services/web-server && node src/main.js scanner';;
web-server/write-docs) exec sh -c 'cd services/web-server && node src/main.js writeDocs';;
worker-manager/web) exec sh -c 'cd services/worker-manager && node src/main.js server';;
worker-manager/provisioner) exec sh -c 'cd services/worker-manager && node src/main.js runProvisioner';;
worker-manager/workerscanner) exec sh -c 'cd services/worker-manager && node src/main.js workerScanner';;
worker-manager/expire-workers) exec sh -c 'cd services/worker-manager && node src/main.js expireWorkers';;
worker-manager/expire-worker-pools) exec sh -c 'cd services/worker-manager && node src/main.js expireWorkerPools';;
worker-manager/expire-errors) exec sh -c 'cd services/worker-manager && node src/main.js expireErrors';;
worker-manager/write-docs) exec sh -c 'cd services/worker-manager && node src/main.js writeDocs';;
script/lint) exec sh -c 'yarn run lint';;
script/test) exec sh -c 'yarn run test';;
script/test:meta) exec sh -c 'yarn run test:meta';;
script/fetch-coverage) exec sh -c 'yarn run fetch-coverage';;
script/test:cleanup) exec sh -c 'yarn run test:cleanup';;
script/build) exec sh -c 'yarn run build';;
script/release) exec sh -c 'yarn run release';;
script/generate) exec sh -c 'yarn run generate';;
script/changelog) exec sh -c 'yarn run changelog';;
script/shared-secrets) exec sh -c 'yarn run shared-secrets';;
script/heroku-prebuild) exec sh -c 'yarn run heroku-prebuild';;
script/heroku-postbuild) exec sh -c 'yarn run heroku-postbuild';;
script/dev:init) exec sh -c 'yarn run dev:init';;
script/dev:apply) exec sh -c 'yarn run dev:apply';;
script/dev:delete) exec sh -c 'yarn run dev:delete';;
script/dev:verify) exec sh -c 'yarn run dev:verify';;
script/smoketest) exec sh -c 'yarn run smoketest';;
references/web) exec sh -c 'exec sh infrastructure/references/references.sh';;
ui/web) exec sh -c "node /app/ui/generate-env-js.js /app/ui/build/static/env.js && nginx -c /app/ui/web-ui-nginx-site.conf -g 'daemon off;'";;
*) exec "${@}";;
esac