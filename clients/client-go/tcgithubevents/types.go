// This source code file is AUTO-GENERATED by github.com/taskcluster/jsonschema2go

package tcgithubevents

import (
	"encoding/json"
)

type (
	// Message reporting that a GitHub pull request has occurred
	GitHubPullRequestMessage struct {

		// The GitHub `action` which triggered an event.
		Action string `json:"action"`

		// The raw body of github event (for version 1)
		//
		// Additional properties allowed
		Body json.RawMessage `json:"body"`

		// The head ref of the event (for version 1)
		Branch string `json:"branch"`

		// Metadata describing the pull request (for version 0)
		//
		// Additional properties allowed
		Details json.RawMessage `json:"details,omitempty"`

		// The GitHub webhook deliveryId. Extracted from the header 'X-GitHub-Delivery'
		//
		// Syntax:     ^[a-zA-Z0-9]{8}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{12}$
		EventID string `json:"eventId"`

		// The installation which had an event.
		//
		// Mininum:    0
		// Maximum:    10000000000
		InstallationID int64 `json:"installationId"`

		// The GitHub `organization` which had an event.
		//
		// Syntax:     ^([a-zA-Z0-9-_.%]*)$
		// Min length: 1
		// Max length: 100
		Organization string `json:"organization"`

		// The GitHub `repository` which had an event.
		//
		// Syntax:     ^([a-zA-Z0-9-_.%]*)$
		// Min length: 1
		// Max length: 100
		Repository string `json:"repository"`

		// The type of the event (for version 1)
		Tasks_For string `json:"tasks_for"`

		// Message version
		//
		// Possible values:
		//   * 1
		Version float64 `json:"version"`
	}

	// Message reporting that a GitHub push has occurred
	GitHubPushMessage struct {

		// The raw body of github event (for version 1)
		//
		// Additional properties allowed
		Body json.RawMessage `json:"body"`

		// The head ref of the event (for version 1)
		Branch string `json:"branch"`

		// Metadata describing the push (for version 0)
		//
		// Additional properties allowed
		Details json.RawMessage `json:"details,omitempty"`

		// The GitHub webhook deliveryId. Extracted from the header 'X-GitHub-Delivery'
		//
		// Syntax:     ^[a-zA-Z0-9]{8}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{12}$
		EventID string `json:"eventId"`

		// The installation which had an event.
		InstallationID int64 `json:"installationId"`

		// The GitHub `organization` which had an event.
		//
		// Syntax:     ^([a-zA-Z0-9-_.%]*)$
		// Min length: 1
		// Max length: 100
		Organization string `json:"organization"`

		// The GitHub `repository` which had an event.
		//
		// Syntax:     ^([a-zA-Z0-9-_.%]*)$
		// Min length: 1
		// Max length: 100
		Repository string `json:"repository"`

		// The type of the event (for version 1)
		Tasks_For string `json:"tasks_for"`

		// Message version
		//
		// Possible values:
		//   * 1
		Version float64 `json:"version"`
	}

	// Message reporting that a GitHub re-run task request has occurred
	GitHubReRunRequestMessage struct {

		// The raw body of github event (for version 1)
		//
		// Additional properties allowed
		Body json.RawMessage `json:"body"`

		// Check run id
		CheckRunID float64 `json:"checkRunId"`

		// Check suite id
		CheckSuiteID float64 `json:"checkSuiteId"`

		// Metadata describing the push (for version 0)
		//
		// Additional properties allowed
		Details json.RawMessage `json:"details,omitempty"`

		// The GitHub webhook deliveryId. Extracted from the header 'X-GitHub-Delivery'
		//
		// Syntax:     ^[a-zA-Z0-9]{8}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{12}$
		EventID string `json:"eventId"`

		// The installation which had an event.
		InstallationID int64 `json:"installationId"`

		// The GitHub `organization` which had an event.
		//
		// Syntax:     ^([a-zA-Z0-9-_.%]*)$
		// Min length: 1
		// Max length: 100
		Organization string `json:"organization"`

		// The GitHub `repository` which had an event.
		//
		// Syntax:     ^([a-zA-Z0-9-_.%]*)$
		// Min length: 1
		// Max length: 100
		Repository string `json:"repository"`

		// The type of the event (for version 1)
		Tasks_For string `json:"tasks_for"`

		// Message version
		//
		// Possible values:
		//   * 1
		Version float64 `json:"version"`
	}

	// Message reporting that a GitHub release has occurred
	GitHubReleaseMessage struct {

		// The raw body of github event (for version 1)
		//
		// Additional properties allowed
		Body json.RawMessage `json:"body"`

		// The head ref of the event (for version 1)
		Branch string `json:"branch"`

		// Metadata describing the release (for version 0)
		//
		// Additional properties allowed
		Details json.RawMessage `json:"details,omitempty"`

		// The GitHub webhook deliveryId. Extracted from the header 'X-GitHub-Delivery'
		//
		// Syntax:     ^[a-zA-Z0-9]{8}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{12}$
		EventID string `json:"eventId"`

		// The installation which had an event.
		//
		// Mininum:    0
		// Maximum:    10000000000
		InstallationID int64 `json:"installationId"`

		// The GitHub `organization` which had an event.
		//
		// Syntax:     ^([a-zA-Z0-9-_.%]*)$
		// Min length: 1
		// Max length: 100
		Organization string `json:"organization"`

		// The GitHub `repository` which had an event.
		//
		// Syntax:     ^([a-zA-Z0-9-_.%]*)$
		// Min length: 1
		// Max length: 100
		Repository string `json:"repository"`

		// The type of the event (for version 1)
		Tasks_For string `json:"tasks_for"`

		// Message version
		//
		// Possible values:
		//   * 1
		Version float64 `json:"version"`
	}

	// Indicates that this service has created a new task group in response to a GitHub event.
	// This message is for internal use only and should not be relied on for other purposes.
	// Full specification on [GitHub docs](https://developer.github.com/v3/repos/statuses/#create-a-status)
	TaskGroupDefinedCreateStatus struct {

		// The GitHub `organization` which had an event.
		//
		// Syntax:     ^([a-zA-Z0-9-_.%]*)$
		// Min length: 1
		// Max length: 100
		Organization string `json:"organization"`

		// The GitHub `repository` which had an event.
		//
		// Syntax:     ^([a-zA-Z0-9-_.%]*)$
		// Min length: 1
		// Max length: 100
		Repository string `json:"repository"`

		// The id of the taskGroup that had been created.
		TaskGroupID string `json:"taskGroupId"`

		// Message version
		//
		// Possible values:
		//   * 1
		Version float64 `json:"version"`
	}
)
