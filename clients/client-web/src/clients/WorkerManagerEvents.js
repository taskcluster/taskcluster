// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import Client from '../Client';

export default class WorkerManagerEvents extends Client {
  constructor(options = {}) {
    super({
      serviceName: 'worker-manager',
      serviceVersion: 'v1',
      exchangePrefix: 'exchange/taskcluster-worker-manager/v1/',
      ...options,
    });
  }
  /* eslint-disable max-len */
  // Whenever the api receives a request to create a
  // worker pool, a message is posted to this exchange and
  // a provider can act upon it.
  /* eslint-enable max-len */
  workerPoolCreated(pattern) {
    const entry = {"exchange":"worker-pool-created","name":"workerPoolCreated","routingKey":[{"constant":"primary","multipleWords":false,"name":"routingKeyKind","required":true},{"multipleWords":false,"name":"providerId","required":false},{"multipleWords":false,"name":"provisionerId","required":false},{"multipleWords":false,"name":"workerType","required":false},{"multipleWords":false,"name":"workerGroup","required":false},{"multipleWords":false,"name":"workerId","required":false},{"multipleWords":false,"name":"launchConfigId","required":false},{"multipleWords":true,"name":"reserved","required":false}],"schema":"v1/pulse-worker-pool-message.json#","type":"topic-exchange"}; // eslint-disable-line

    return this.normalizePattern(entry, pattern);
  }
  /* eslint-disable max-len */
  // Whenever the api receives a request to update a
  // worker pool, a message is posted to this exchange and
  // a provider can act upon it.
  /* eslint-enable max-len */
  workerPoolUpdated(pattern) {
    const entry = {"exchange":"worker-pool-updated","name":"workerPoolUpdated","routingKey":[{"constant":"primary","multipleWords":false,"name":"routingKeyKind","required":true},{"multipleWords":false,"name":"providerId","required":false},{"multipleWords":false,"name":"provisionerId","required":false},{"multipleWords":false,"name":"workerType","required":false},{"multipleWords":false,"name":"workerGroup","required":false},{"multipleWords":false,"name":"workerId","required":false},{"multipleWords":false,"name":"launchConfigId","required":false},{"multipleWords":true,"name":"reserved","required":false}],"schema":"v1/pulse-worker-pool-message.json#","type":"topic-exchange"}; // eslint-disable-line

    return this.normalizePattern(entry, pattern);
  }
  /* eslint-disable max-len */
  // Whenever a worker reports an error
  // or provisioner encounters an error while
  // provisioning a worker pool, a message is posted to this
  // exchange.
  /* eslint-enable max-len */
  workerPoolError(pattern) {
    const entry = {"exchange":"worker-pool-error","name":"workerPoolError","routingKey":[{"constant":"primary","multipleWords":false,"name":"routingKeyKind","required":true},{"multipleWords":false,"name":"providerId","required":false},{"multipleWords":false,"name":"provisionerId","required":false},{"multipleWords":false,"name":"workerType","required":false},{"multipleWords":false,"name":"workerGroup","required":false},{"multipleWords":false,"name":"workerId","required":false},{"multipleWords":false,"name":"launchConfigId","required":false},{"multipleWords":true,"name":"reserved","required":false}],"schema":"v1/pulse-worker-pool-error-message.json#","type":"topic-exchange"}; // eslint-disable-line

    return this.normalizePattern(entry, pattern);
  }
  /* eslint-disable max-len */
  // Whenever a worker is requested, a message is posted
  // to this exchange.
  /* eslint-enable max-len */
  workerRequested(pattern) {
    const entry = {"exchange":"worker-requested","name":"workerRequested","routingKey":[{"constant":"primary","multipleWords":false,"name":"routingKeyKind","required":true},{"multipleWords":false,"name":"providerId","required":true},{"multipleWords":false,"name":"provisionerId","required":true},{"multipleWords":false,"name":"workerType","required":true},{"multipleWords":false,"name":"workerGroup","required":true},{"multipleWords":false,"name":"workerId","required":true},{"multipleWords":false,"name":"launchConfigId","required":false},{"multipleWords":true,"name":"reserved","required":false}],"schema":"v1/pulse-worker-message.json#","type":"topic-exchange"}; // eslint-disable-line

    return this.normalizePattern(entry, pattern);
  }
  /* eslint-disable max-len */
  // Whenever a worker has registered, a message is posted
  // to this exchange. This means that worker started
  // successfully and is ready to claim work.
  /* eslint-enable max-len */
  workerRunning(pattern) {
    const entry = {"exchange":"worker-running","name":"workerRunning","routingKey":[{"constant":"primary","multipleWords":false,"name":"routingKeyKind","required":true},{"multipleWords":false,"name":"providerId","required":true},{"multipleWords":false,"name":"provisionerId","required":true},{"multipleWords":false,"name":"workerType","required":true},{"multipleWords":false,"name":"workerGroup","required":true},{"multipleWords":false,"name":"workerId","required":true},{"multipleWords":false,"name":"launchConfigId","required":false},{"multipleWords":true,"name":"reserved","required":false}],"schema":"v1/pulse-worker-message.json#","type":"topic-exchange"}; // eslint-disable-line

    return this.normalizePattern(entry, pattern);
  }
  /* eslint-disable max-len */
  // Whenever a worker has stopped, a message is posted
  // to this exchange. This means that instance was
  // either terminated or stopped gracefully.
  /* eslint-enable max-len */
  workerStopped(pattern) {
    const entry = {"exchange":"worker-stopped","name":"workerStopped","routingKey":[{"constant":"primary","multipleWords":false,"name":"routingKeyKind","required":true},{"multipleWords":false,"name":"providerId","required":true},{"multipleWords":false,"name":"provisionerId","required":true},{"multipleWords":false,"name":"workerType","required":true},{"multipleWords":false,"name":"workerGroup","required":true},{"multipleWords":false,"name":"workerId","required":true},{"multipleWords":false,"name":"launchConfigId","required":false},{"multipleWords":true,"name":"reserved","required":false}],"schema":"v1/pulse-worker-message.json#","type":"topic-exchange"}; // eslint-disable-line

    return this.normalizePattern(entry, pattern);
  }
  /* eslint-disable max-len */
  // Whenever a worker is removed, a message is posted to this exchange.
  // This occurs when a worker is requested to be removed via an API call
  // or when a worker is terminated by the worker manager.
  // The reason for the removal is included in the message.
  /* eslint-enable max-len */
  workerRemoved(pattern) {
    const entry = {"exchange":"worker-removed","name":"workerRemoved","routingKey":[{"constant":"primary","multipleWords":false,"name":"routingKeyKind","required":true},{"multipleWords":false,"name":"providerId","required":true},{"multipleWords":false,"name":"provisionerId","required":true},{"multipleWords":false,"name":"workerType","required":true},{"multipleWords":false,"name":"workerGroup","required":true},{"multipleWords":false,"name":"workerId","required":true},{"multipleWords":false,"name":"launchConfigId","required":false},{"multipleWords":true,"name":"reserved","required":false}],"schema":"v1/pulse-worker-removed-message.json#","type":"topic-exchange"}; // eslint-disable-line

    return this.normalizePattern(entry, pattern);
  }
  /* eslint-disable max-len */
  // Whenever a new launch configuration is created for a worker pool,
  // a message is posted to this exchange.
  /* eslint-enable max-len */
  launchConfigCreated(pattern) {
    const entry = {"exchange":"launch-config-created","name":"launchConfigCreated","routingKey":[{"constant":"primary","multipleWords":false,"name":"routingKeyKind","required":true},{"multipleWords":false,"name":"providerId","required":false},{"multipleWords":false,"name":"provisionerId","required":false},{"multipleWords":false,"name":"workerType","required":false},{"multipleWords":false,"name":"workerGroup","required":false},{"multipleWords":false,"name":"workerId","required":false},{"multipleWords":false,"name":"launchConfigId","required":false},{"multipleWords":true,"name":"reserved","required":false}],"schema":"v1/pulse-launch-config-message.json#","type":"topic-exchange"}; // eslint-disable-line

    return this.normalizePattern(entry, pattern);
  }
  /* eslint-disable max-len */
  // Whenever a launch configuration is updated for a worker pool,
  // a message is posted to this exchange.
  /* eslint-enable max-len */
  launchConfigUpdated(pattern) {
    const entry = {"exchange":"launch-config-updated","name":"launchConfigUpdated","routingKey":[{"constant":"primary","multipleWords":false,"name":"routingKeyKind","required":true},{"multipleWords":false,"name":"providerId","required":false},{"multipleWords":false,"name":"provisionerId","required":false},{"multipleWords":false,"name":"workerType","required":false},{"multipleWords":false,"name":"workerGroup","required":false},{"multipleWords":false,"name":"workerId","required":false},{"multipleWords":false,"name":"launchConfigId","required":false},{"multipleWords":true,"name":"reserved","required":false}],"schema":"v1/pulse-launch-config-message.json#","type":"topic-exchange"}; // eslint-disable-line

    return this.normalizePattern(entry, pattern);
  }
  /* eslint-disable max-len */
  // Whenever a launch configuration is archived for a worker pool,
  // a message is posted to this exchange.
  /* eslint-enable max-len */
  launchConfigArchived(pattern) {
    const entry = {"exchange":"launch-config-archived","name":"launchConfigArchived","routingKey":[{"constant":"primary","multipleWords":false,"name":"routingKeyKind","required":true},{"multipleWords":false,"name":"providerId","required":false},{"multipleWords":false,"name":"provisionerId","required":false},{"multipleWords":false,"name":"workerType","required":false},{"multipleWords":false,"name":"workerGroup","required":false},{"multipleWords":false,"name":"workerId","required":false},{"multipleWords":false,"name":"launchConfigId","required":false},{"multipleWords":true,"name":"reserved","required":false}],"schema":"v1/pulse-launch-config-message.json#","type":"topic-exchange"}; // eslint-disable-line

    return this.normalizePattern(entry, pattern);
  }
}
